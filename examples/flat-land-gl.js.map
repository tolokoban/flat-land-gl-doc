{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/atlas.ts","webpack:///./src/calc.ts","webpack:///./src/converter/string.ts","webpack:///./src/index.ts","webpack:///./src/painter/background/background.ts","webpack:///./src/painter/background/index.ts","webpack:///./src/painter/clear.ts","webpack:///./src/painter/index.ts","webpack:///./src/painter/painter.ts","webpack:///./src/painter/sprites/index.ts","webpack:///./src/painter/sprites/sprite.ts","webpack:///./src/painter/sprites/sprites.frag","webpack:///./src/painter/sprites/sprites.ts","webpack:///./src/painter/sprites/sprites.vert","webpack:///./src/pointer.ts","webpack:///./src/scene.ts","webpack:///./src/webgl/color.ts","webpack:///./src/webgl/program.ts","webpack:///./src/webgl/resize.ts"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;IAMI,eAAoB,EAAyB,EAAU,KAAa;QAAhD,OAAE,GAAF,EAAE,CAAuB;QAAU,UAAK,GAAL,KAAK,CAAQ;QAJ5D,WAAM,GAAG,KAAK;QACd,WAAM,GAAG,CAAC;QACV,YAAO,GAAG,CAAC;QAGf,IAAM,OAAO,GAAG,EAAE,CAAC,aAAa,EAAE;QAClC,IAAI,CAAC,OAAO,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC;SAAE;QACpE,IAAI,CAAC,OAAO,GAAG,OAAO;QACtB,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC;QACtC,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,aAAa,CAAC;QACpE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,aAAa,CAAC;QACpE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,MAAM,CAAC;QACjE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,MAAM,CAAC;IACrE,CAAC;IAED,sBAAI,uBAAI;aAAR,cAAa,OAAO,IAAI,CAAC,KAAK,EAAC,CAAC;;;OAAA;IAChC,sBAAI,wBAAK;aAAT,cAAc,OAAO,IAAI,CAAC,MAAM,EAAC,CAAC;;;OAAA;IAClC,sBAAI,yBAAM;aAAV,cAAe,OAAO,IAAI,CAAC,OAAO,EAAC,CAAC;;;OAAA;IAIpC,sBAAI,wBAAK;QAHT;;WAEG;aACH,cAAc,OAAO,IAAI,CAAC,MAAM,EAAC,CAAC;;;OAAA;IAElC;;OAEG;IACI,uBAAO,GAAd;QACI,IAAI,CAAC,MAAM,GAAG,KAAK;QACb,aAAsB,EAApB,UAAE,EAAE,oBAAgB;QAC5B,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC;IAC7B,CAAC;IAEM,wBAAQ,GAAf,UAAgB,IAAQ;QAAR,+BAAQ;QACd,aAAsB,EAApB,UAAE,EAAE,oBAAgB;QAC5B,IAAM,KAAK,GAAG;YACV,EAAE,CAAC,QAAQ;YACX,EAAE,CAAC,QAAQ;YACX,EAAE,CAAC,QAAQ;YACX,EAAE,CAAC,QAAQ;YACX,EAAE,CAAC,QAAQ;YACX,EAAE,CAAC,QAAQ;YACX,EAAE,CAAC,QAAQ;YACX,EAAE,CAAC,QAAQ;SACd;QACD,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;QACtD,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC;IAC1C,CAAC;IAEY,oBAAI,GAAjB,UAAkB,MAAoB;;;gBAClC,IAAI,CAAC,MAAM,GAAG,KAAK;gBACnB,sBAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;;;KACtC;IAEa,yBAAS,GAAvB,UAAwB,GAAW;;;;gBACzB,IAAI,GAAG,IAAI;gBAEjB,sBAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;wBAC/B,IAAM,GAAG,GAAG,IAAI,KAAK,EAAE;wBACvB,IAAI,CAAC,MAAM,GAAG,KAAK;wBACnB,GAAG,CAAC,MAAM,GAAG;4BACD,gBAAE,EAAE,sBAAO,CAAS;4BAC5B,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC;4BACtC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,aAAa,EAAE,GAAG,CAAC;4BACxE,IAAI,CAAC,MAAM,GAAG,IAAI;4BAClB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK;4BACvB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM;4BACzB,OAAO,EAAE;wBACb,CAAC;wBACD,GAAG,CAAC,OAAO,GAAG;4BACV,OAAO,CAAC,KAAK,CAAC,4BAAyB,IAAI,SAAK,EAAE,GAAG,CAAC;4BACtD,MAAM,EAAE;wBACZ,CAAC;wBACD,GAAG,CAAC,GAAG,GAAG,GAAG;oBACjB,CAAC,CAAC;;;KACL;IACL,YAAC;AAAD,CAAC;;;;;;;;;;;;;;ACnFD;AAAA,IAAM,GAAG,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC;AAClC,IAAM,GAAG,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC;AAElC,8CAA8C;AAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,IAAI,EAAG,CAAC,EAAE,EAAE;IAC7B,IAAM,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI;IAChC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IACxB,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;CAC3B;AAEc,iEAAE,GAAG,OAAE,GAAG,OAAE;AAE3B;;;;;;GAMG;AACH,SAAS,GAAG,CAAC,KAAa;IACtB,OAAO,GAAG,CAAC,CAAC,KAAK,GAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AAChC,CAAC;AAED;;;;;;GAMG;AACH,SAAS,GAAG,CAAC,KAAa;IACtB,OAAO,GAAG,CAAC,CAAC,KAAK,GAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AAChC,CAAC;;;;;;;;;;;;;AChCD;AAAA;AAAe,SAAS,UAAU,CAAC,KAAU,EAAE,YAAyB;IAAzB,gDAAyB;IACpE,IAAM,CAAC,GAAG,OAAO,KAAK;IACtB,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;QACjC,OAAO,KAAG,KAAO;KACpB;IACD,IAAI,CAAC,KAAK,QAAQ,EAAE;QAAE,OAAO,KAAK;KAAE;IACpC,OAAO,YAAY;AACvB,CAAC;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAyB;AACM;AACJ;AAE3B,IAAM,QAAQ,GAAG;IACb,IAAI;IACJ,OAAO;IACP,KAAK;CACR;AAEc,uEAAQ;AAEvB,kDAAkD;AAClD,MAAM,CAAC,UAAU,CAAC,GAAG,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACToB;AAEK;AAOpD;IAA+C,qCAAO;IAKpD;;;;;;;OAOG;IACH,2BAAY,MAAgC;QAA5C,YACI,kBAAM,MAAM,CAAC,SAuBhB;QAtBW,wBAAK,EAAE,oBAAK,CAAW;QAC/B,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,QAAQ,EAAE;YACX,MAAM,KAAI,CAAC,KAAK,CAAC,aAAU,KAAK,kBAAc,CAAC;SAClD;QAED,KAAI,CAAC,KAAK,GAAG,QAAQ;QACrB,KAAI,CAAC,GAAG,GAAG,KAAI,CAAC,aAAa,CAAC;YAC1B,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,OAAO,CAAC,iEAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;SACxD,CAAC;QACM,iBAAE,CAAU;QACpB,IAAM,IAAI,GAAG,EAAE,CAAC,YAAY,EAAE;QAC9B,IAAI,CAAC,IAAI,EAAE;YACP,MAAM,KAAI,CAAC,KAAK,CAAC,8CAA8C,CAAC;SACnE;QAED,EAAE,CAAC,UAAU,CAAE,EAAE,CAAC,YAAY,EAAE,IAAI,CAAE;QACtC,EAAE,CAAC,UAAU,CAAE,EAAE,CAAC,YAAY,EAAE,IAAI,YAAY,CAAC;YAC7C,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SACzB,CAAC,EAAE,EAAE,CAAC,WAAW,CAAE;QACpB,KAAI,CAAC,IAAI,GAAG,IAAI;;IACpB,CAAC;IAEM,kCAAM,GAAb;QACU,aAAkC,EAAhC,gBAAK,EAAE,YAAG,EAAE,gBAAK,EAAE,cAAa;QACxC,IAAM,EAAE,GAAG,KAAK,CAAC,EAAE;QACnB,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC;QACxB,GAAG,CAAC,GAAG,EAAE;QACT,KAAK,CAAC,QAAQ,EAAE;QAChB,IAAM,QAAQ,GAAG,GAA2B;QAC5C,QAAQ,CAAC,WAAW,GAAG,CAAC;QACxB,GAAG,CAAC,UAAU,CAAC,gBAAgB,EAAE,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;QAC5D,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC;QAC9B,EAAE,CAAC,UAAU,CAAE,EAAE,CAAC,YAAY,EAAE,IAAI,CAAE;QACtC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IACL,wBAAC;AAAD,CAAC,CApDgD,gDAAO,GAoDvD;;AAEC,SAAS,OAAO,CAAC,KAAa;IAC5B,IAAI,CAAC,GAAG,EAAE;IACV,IAAI,CAAC,GAAG,EAAE;IAEV,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QAC3B,CAAC,GAAG,qCAAqC;KAC5C;SAAM,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QAClC,CAAC,GAAG,qCAAqC;KAC5C;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QAC3B,CAAC,GAAG,2CAA2C;KAClD;SAAM,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QAClC,CAAC,GAAG,2CAA2C;KAClD;IAED,OAAO,wOASwB,CAAC,uDAED,CAAC,0EAIlC;AACF,CAAC;AAEC,IAAM,IAAI,GAAG,2KAOb;;;;;;;;;;;;;AC3GF;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtC;;;GAGG;AAC+B;AACiB;AAMnD;IAA0C,gCAAO;IAM7C,sBAAY,MAA2B;QAAvC,YACI,kBAAM,MAAM,CAAC,SAEhB;QARO,UAAI,GAAG,GAAG;QACV,YAAM,GAAG,GAAG;QACZ,WAAK,GAAG,GAAG;QACX,YAAM,GAAG,CAAC;QAId,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM;;IACvC,CAAC;IAED,sBAAI,6BAAG;aAAP,cAAY,OAAO,IAAI,CAAC,IAAI,EAAC,CAAC;aAC9B,UAAQ,CAAS,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,EAAC,CAAC;;;OADN;IAG9B,sBAAI,+BAAK;aAAT,cAAc,OAAO,IAAI,CAAC,MAAM,EAAC,CAAC;aAClC,UAAU,CAAS,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC,CAAC;;;OADN;IAGlC,sBAAI,8BAAI;aAAR,cAAa,OAAO,IAAI,CAAC,KAAK,EAAC,CAAC;aAChC,UAAS,CAAS,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAC,CAAC;;;OADN;IAGhC,sBAAI,+BAAK;aAAT,cAAc,OAAO,IAAI,CAAC,MAAM,EAAC,CAAC;aAClC,UAAU,CAAS,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC,CAAC;;;OADN;IAGlC,sBAAI,+BAAK;aAAT;YACI,IAAM,KAAK,GAAG,IAAI,oDAAK,EAAE;YACzB,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI;YACnB,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM;YACrB,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;YACpB,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM;YACrB,OAAO,KAAK,CAAC,SAAS,EAAE;QAC5B,CAAC;aACD,UAAU,QAAgB;YACtB,IAAM,KAAK,GAAG,IAAI,oDAAK,CAAC,QAAQ,CAAC;YACjC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;QACzB,CAAC;;;OAPA;IASM,6BAAM,GAAb;QACI,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACxB,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;QAC9D,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,CAAC;IACjC,CAAC;IACL,mBAAC;AAAD,CAAC,CA5CyC,gDAAO,GA4ChD;;;;;;;;;;;;;;ACvDD;AAAA;AAAA;AAAA;AAAA;AAAqC;AACV;AACI;AACA;AAEhB;IACX,UAAU;IACV,KAAK;IACL,OAAO;IACP,OAAO;CACV;;;;;;;;;;;;;ACVD;AAAA;AAAA;;GAEG;AAGiD;AAEpD,IAAI,EAAE,GAAG,CAAC;AAOV;IAMI,iBAAY,MAAsB;QAHxB,UAAK,GAAW,KAAG,EAAE,EAAI;QAI/B,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;YAAE,MAAM,KAAK,CAAC,uCAAuC,CAAC;SAAE;QAC3E,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK;QACzB,IAAI,OAAO,MAAM,CAAC,IAAI,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3D,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI;SAC3B;QACD,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC;IACnC,CAAC;IAXD,sBAAI,yBAAI;aAAR,cAAa,OAAO,IAAI,CAAC,KAAK,EAAC,CAAC;;;OAAA;IAazB,yBAAO,GAAd;QACI,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;IACxC,CAAC;IAIS,+BAAa,GAAvB,UAAwB,OAAiB,EAAE,QAAwC;QAAxC,wCAAwC;QAC/E,OAAO,IAAI,sDAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,EAAE,QAAQ,CAAC;IACxD,CAAC;IAES,uBAAK,GAAf,UAAgB,OAAY;QACxB,OAAO,CAAC,KAAK,CAAC,8BAA2B,IAAI,CAAC,IAAI,QAAI,EAAE,OAAO,CAAC;QAChE,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC;IAC7B,CAAC;IACL,cAAC;AAAD,CAAC;;;;;;;;;;;;;;AC3CD;AAAA;AAAA;AAAA;AAAmC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAN;AAkB7B;IAkBI,gBAAY,KAAa,EAAU,OAA2B,EAAE,MAAwB;QAArD,YAAO,GAAP,OAAO,CAAoB;QAJ9C,UAAK,GAAyB,EAAE;QACzC,WAAM,GAAW,CAAC;QAIrB,IAAI,CAAC,MAAM,GAAG,KAAK;QACnB,IAAM,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE;QAChC,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,EAAE;QAClC,IAAI,CAAC,MAAM,cACP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAChB,KAAK,SAAE,MAAM,UACb,OAAO,EAAE,KAAK,GAAG,CAAC,EAClB,OAAO,EAAE,MAAM,GAAG,CAAC,EACnB,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAC1B,KAAK,EAAE,CAAC,EACR,KAAK,EAAE,CAAC,IACL,MAAM,CACZ;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IAC5B,CAAC;IA/BD,sBAAI,qBAAC;aAAL,cAAU,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC;;;OAAA;IAChC,sBAAI,qBAAC;aAAL,cAAU,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC;;;OAAA;IAChC,sBAAI,qBAAC;aAAL,cAAU,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC;;;OAAA;IAChC,sBAAI,yBAAK;aAAT,cAAc,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC;;;OAAA;IACxC,sBAAI,0BAAM;aAAV,cAAe,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC,CAAC;;;OAAA;IAC1C,sBAAI,2BAAO;aAAX,cAAgB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAC,CAAC;;;OAAA;IAC5C,sBAAI,2BAAO;aAAX,cAAgB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAC,CAAC;;;OAAA;IAC5C,sBAAI,sBAAE;aAAN,cAAW,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,EAAC,CAAC;;;OAAA;IAClC,sBAAI,sBAAE;aAAN,cAAW,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,EAAC,CAAC;;;OAAA;IAClC,sBAAI,sBAAE;aAAN,cAAW,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,EAAC,CAAC;;;OAAA;IAClC,sBAAI,sBAAE;aAAN,cAAW,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,EAAC,CAAC;;;OAAA;IAuB3B,uBAAM,GAAb,UAAc,SAA2B;QACrC,IAAI,CAAC,MAAM,yBAAQ,IAAI,CAAC,MAAM,GAAK,SAAS,CAAE;QAExC,aAAkC,EAAhC,oBAAO,EAAE,kBAAM,EAAE,kBAAe;QACxC,IAAM,IAAI,GAAG,OAAO,EAAE;QACd,gBAAC,EAAE,YAAC,EAAE,YAAC,EAAE,wBAAO,EAAE,wBAAO,EAAE,oBAAK,EAAE,sBAAM,EAAE,cAAE,EAAE,cAAE,EAAE,cAAE,EAAE,cAAE,EAAE,oBAAK,EAAE,oBAAK,CAAW;QACzF,IAAM,GAAG,GAAG,CAAC,OAAO;QACpB,IAAM,GAAG,GAAG,CAAC,OAAO;QACpB,IAAM,GAAG,GAAG,GAAG,GAAG,KAAK;QACvB,IAAM,GAAG,GAAG,GAAG;QACf,IAAM,GAAG,GAAG,GAAG,GAAG,KAAK;QACvB,IAAM,GAAG,GAAG,GAAG,GAAG,MAAM;QACxB,IAAM,GAAG,GAAG,GAAG;QACf,IAAM,GAAG,GAAG,GAAG,GAAG,MAAM;QAExB,IAAI,EAAE,GAAG,GAAG,GAAG,KAAK;QACpB,IAAI,EAAE,GAAG,GAAG,GAAG,KAAK;QACpB,IAAI,EAAE,GAAG,GAAG,GAAG,KAAK;QACpB,IAAI,EAAE,GAAG,GAAG,GAAG,KAAK;QACpB,IAAI,EAAE,GAAG,GAAG,GAAG,KAAK;QACpB,IAAI,EAAE,GAAG,GAAG,GAAG,KAAK;QACpB,IAAI,EAAE,GAAG,GAAG,GAAG,KAAK;QACpB,IAAI,EAAE,GAAG,GAAG,GAAG,KAAK;QAEpB,IAAI,CAAC,KAAK,GAAC,CAAC,CAAC,KAAK,CAAC,EAAE;YACjB,IAAM,CAAC,GAAG,6CAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACzB,IAAM,CAAC,GAAG,6CAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAEzB,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK;YAChC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK;YAChC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK;YAChC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK;YAChC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK;YAChC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK;YAChC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK;YAChC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK;SACnC;QAED,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;QACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;QAErB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;QACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;QAErB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE;QACtB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE;QAEtB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE;QACtB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE;IAC1B,CAAC;IACL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;ACnHD;AAAe,wFAAyB,+BAA+B,qBAAqB,iBAAiB,gDAAgD,+BAA+B,yBAAyB,GAAG,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMpK;AACV;AACT;AACA;AAEjC,uDAAuD;AACvD,IAAM,KAAK,GAAG,EAAE;AAChB,IAAM,UAAU,GAAG,CAAC,EAAE,iCAAiC;AACvD,IAAM,UAAU,GAAG,CAAC;AACpB,IAAM,KAAK,GAAG,UAAU,GAAG,UAAU;AAMrC;IAA4C,kCAAO;IAU/C,wBAAY,MAA6B;QAAzC,YACI,kBAAM,MAAM,CAAC,SA6BhB;QArCO,cAAQ,GAAG,IAAI,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAG1C,aAAO,GAAa,EAAE;QACtB,WAAK,GAAG,CAAC;QACT,cAAQ,GAAG,KAAK;QAmHxB;;;WAGG;QACK,aAAO,GAAG,cAAM,YAAI,CAAC,QAAQ,EAAb,CAAa;QAnHzB,wBAAK,EAAE,oBAAK,CAAW;QAC/B,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,QAAQ,EAAE;YACX,MAAM,KAAI,CAAC,KAAK,CAAC,aAAU,KAAK,kBAAc,CAAC;SAClD;QAED,KAAI,CAAC,KAAK,GAAG,QAAQ;QACrB,KAAI,CAAC,GAAG,GAAG,KAAI,CAAC,aAAa,CAAC,EAAE,IAAI,yDAAE,IAAI,yDAAE,CAAC;QACrC,iBAAE,CAAU;QAEpB,IAAM,QAAQ,GAAG,EAAE,CAAC,YAAY,EAAE;QAClC,IAAI,CAAC,QAAQ,EAAE;YACX,MAAM,KAAI,CAAC,KAAK,CAAC,8CAA8C,CAAC;SACnE;QACD,EAAE,CAAC,UAAU,CAAE,EAAE,CAAC,YAAY,EAAE,QAAQ,CAAE;QAC1C,EAAE,CAAC,UAAU,CAAE,EAAE,CAAC,YAAY,EAAE,KAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,YAAY,CAAE;QAChE,KAAI,CAAC,QAAQ,GAAG,QAAQ;QAExB,IAAM,QAAQ,GAAG,EAAE,CAAC,YAAY,EAAE;QAClC,IAAI,CAAC,QAAQ,EAAE;YACX,MAAM,KAAI,CAAC,KAAK,CAAC,8CAA8C,CAAC;SACnE;QACD,EAAE,CAAC,UAAU,CAAE,EAAE,CAAC,oBAAoB,EAAE,QAAQ,CAAE;QAClD,EAAE,CAAC,UAAU,CACT,EAAE,CAAC,oBAAoB,EACvB,cAAc,CAAC,KAAK,CAAC,EACrB,EAAE,CAAC,YAAY,CAAE;QACrB,KAAI,CAAC,QAAQ,GAAG,QAAQ;;IAC5B,CAAC;IAEM,qCAAY,GAAnB,UAAoB,MAAwB;QACxC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK;QAChC,IAAI,CAAC,KAAK,EAAE;QACZ,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC7B,wBAAwB;YACxB,IAAI,CAAC,gBAAgB,EAAE;SAC1B;QAEK,mBAA8B,EAA5B,gBAAK,EAAE,kBAAqB;QACpC,IAAM,MAAM,GAAG,IAAI,+CAAM,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,aACzC,KAAK;YACL,MAAM,YACH,MAAM,EACX;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;QACzB,OAAO,MAAM;IACjB,CAAC;IAED;;OAEG;IACI,qCAAY,GAAnB,UAAoB,MAAc;QAC9B,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC;YAAE,OAAM;QACrB,0BAAO,CAAS;QACxB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YAClB,OAAM;SACT;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YAClB,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,KAAK,GAAG,CAAC;YACd,OAAM;SACT;QACD,IAAM,UAAU,GAAG,OAAO,CAAC,GAAG,EAAE;QAChC,IAAI,CAAC,UAAU;YAAE,OAAM;QACvB,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM;QACjC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,EAAE;QACZ,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IACtB,CAAC;IAEM,+BAAM,GAAb;QACU,aAAgD,EAA9C,gBAAK,EAAE,YAAG,EAAE,gBAAK,EAAE,sBAAQ,EAAE,sBAAiB;QACtD,IAAM,EAAE,GAAG,KAAK,CAAC,EAAE;QAEnB,8BAA8B;QAC9B,EAAE,CAAC,UAAU,CAAE,EAAE,CAAC,YAAY,EAAE,QAAQ,CAAE;QAC1C,EAAE,CAAC,UAAU,CAAE,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,YAAY,CAAE;QAEhE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC;QACxB,GAAG,CAAC,GAAG,EAAE;QACT,KAAK,CAAC,QAAQ,EAAE;QAChB,IAAM,QAAQ,GAAG,GAA2B;QAC5C,QAAQ,CAAC,WAAW,GAAG,CAAC;QACxB,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK;QAChC,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM;QAClC,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC;QAC5C,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,QAAQ,CAAC;QACxC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE,QAAQ,CAAC;QAChD,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,cAAc,EAAE,CAAC,CAAC;IACvE,CAAC;IAEO,yCAAgB,GAAxB;QACI,IAAI,CAAC,QAAQ,IAAI,KAAK;QAEd,sBAAK,CAAS;QACd,iBAAE,CAAU;QAEpB,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ;QAC9B,EAAE,CAAC,UAAU,CAAE,EAAE,CAAC,oBAAoB,EAAE,QAAQ,CAAE;QAClD,EAAE,CAAC,UAAU,CACT,EAAE,CAAC,oBAAoB,EACvB,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,EAC7B,EAAE,CAAC,YAAY,CAAE;QAErB,IAAM,QAAQ,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxD,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ;IAC5B,CAAC;IAOL,qBAAC;AAAD,CAAC,CAhI2C,gDAAO,GAgIlD;;AAED;;;;GAIG;AACH,SAAS,cAAc,CAAC,QAAgB;IACpC,IAAM,QAAQ,GAAG,IAAI,WAAW,CAAC,CAAC,GAAG,QAAQ,CAAC;IAC9C,IAAI,CAAC,GAAG,CAAC;IACT,IAAI,CAAC,GAAG,CAAC;IACT,KAAK,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,QAAQ,EAAG,CAAC,EAAE,EAAE;QACjC,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC;QACf,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC;QACf,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC;QACf,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;QACnB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;QACnB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;QACnB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;QACnB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;QACnB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;QACnB,CAAC,IAAI,CAAC;QACN,CAAC,IAAI,CAAC;KACT;IACD,OAAO,QAAQ;AACnB,CAAC;;;;;;;;;;;;;AC9KD;AAAe,uFAAwB,0BAA0B,wBAAwB,uBAAuB,qBAAqB,mCAAmC,gDAAgD,iBAAiB,kBAAkB,gDAAgD,oCAAoC,qCAAqC,2DAA2D,2DAA2D,+CAA+C,GAAG,G;;;;;;;;;;;;ACA5hB;AAAA;IASI,cAAc;IACd,iBAAoB,MAAyB;QAA7C,iBAOC;QAPmB,WAAM,GAAN,MAAM,CAAmB;QATrC,OAAE,GAAG,CAAC;QACN,OAAE,GAAG,CAAC;QACN,UAAK,GAAG,KAAK;QACrB,uBAAuB;QACf,cAAS,GAAG,CAAC;QACb,eAAU,GAAG,KAAK;QAClB,aAAQ,GAAG,KAAK;QA4BhB,gBAAW,GAAG,UAAC,GAAe;YAClC,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC;QAChD,CAAC;QAEO,gBAAW,GAAG,UAAC,EAAc;YACjC,IAAM,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;YACzB,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC;QAChD,CAAC;QAEO,gBAAW,GAAG,UAAC,GAAe;YAClC,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC;QACzC,CAAC;QAEO,iBAAY,GAAG,UAAC,EAAc;YAClC,IAAM,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;YACzB,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC;QACzC,CAAC;QAUO,cAAS,GAAG,UAAC,GAAe;YAChC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC;QACvC,CAAC;QAEO,eAAU,GAAG,UAAC,EAAc;YAChC,IAAM,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;YACzB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC;QACvC,CAAC;QAzDG,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC;QAC5D,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC;QAC5D,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC;QAC5D,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC;QAC9D,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC;QACxD,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;IAC9D,CAAC;IAED,cAAc;IACP,uBAAK,GAAZ;QACI,IAAI,CAAC,UAAU,GAAG,KAAK;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK;IACzB,CAAC;IAED,sBAAI,sBAAC;aAAL,cAAU,OAAO,IAAI,CAAC,EAAE,EAAC,CAAC;;;OAAA;IAC1B,sBAAI,sBAAC;aAAL,cAAU,OAAO,IAAI,CAAC,EAAE,EAAC,CAAC;;;OAAA;IAG1B,sBAAI,yBAAI;QADR,kDAAkD;aAClD,cAAa,OAAO,IAAI,CAAC,KAAK,EAAC,CAAC;;;OAAA;IAEhC,sBAAI,4BAAO;QADX,mFAAmF;aACnF,cAAgB,OAAO,IAAI,CAAC,QAAQ,EAAC,CAAC;;;OAAA;IAEtC,sBAAI,8BAAS;QADb,mFAAmF;aACnF,cAAkB,OAAO,IAAI,CAAC,UAAU,EAAC,CAAC;;;OAAA;IAoBlC,wBAAM,GAAd,UAAe,CAAS,EAAE,CAAS;QAC/B,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC;YAAE,OAAM;QAChC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,IAAI;QACjB,IAAI,CAAC,UAAU,GAAG,IAAI;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE;IAC/B,CAAC;IAWO,sBAAI,GAAZ,UAAa,CAAS,EAAE,CAAS;QAC7B,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC;YAAE,OAAM;QAChC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC;IACtB,CAAC;IAEO,+BAAa,GAArB,UAAsB,QAAgB,EAAE,QAAgB;QAC5C,wBAAM,CAAS;QACvB,IAAM,IAAI,GAAG,MAAM,CAAC,qBAAqB,EAAE;QAE3C,IAAM,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,IAAI;QAC9B,IAAM,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG;QAC7B,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK;QACpB,IAAM,CAAC,GAAG,IAAI,CAAC,MAAM;QAErB,IAAI,CAAC,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC;YACtB,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACjD;aAAM;YACH,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC;SACzB;IACL,CAAC;IACL,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/F4C;AAEV;AACJ;AAM/B;IAeI,kBAAY,MAAyB;QAArC,iBAUC;QAtBM,eAAU,GAAG,CAAC;QACd,gBAAW,GAAoC,IAAI;QAGlD,mBAAc,GAAc,EAAE;QAC9B,gBAAW,GAAG,KAAK;QACnB,cAAS,GAAG,CAAC,IAAI;QACjB,cAAS,GAAG,CAAC,IAAI;QACjB,gBAAW,GAAG,KAAK;QAC3B,SAAS;QACD,qBAAgB,GAAG,CAAC;QA6HpB,WAAM,GAAG,UAAC,IAAY;;YAC1B,IAAI,KAAI,CAAC,WAAW,EAAE;gBAAE,MAAM,CAAC,qBAAqB,CAAC,KAAI,CAAC,MAAM,CAAC;aAAE;iBAAM;gBAAE,OAAM;aAAE;YAE3E,iBAAE,CAAS;YACnB,6DAAM,CAAC,EAAE,EAAE,KAAI,CAAC,UAAU,CAAC;YAE3B,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACjB,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,CAAC;YAC7B,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC;YAEvB,IAAI;;oBACA,KAAsB,uBAAI,CAAC,cAAc,6CAAE;wBAAtC,IAAM,OAAO;wBACd,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;qBACvB;;;;;;;;;gBAEO,mCAAW,CAAS;gBAC5B,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;oBACnC,WAAW,CAAC,IAAI,CAAC;oBAEjB,KAAI,CAAC,OAAO,CAAC,KAAK,EAAE;iBACvB;aACJ;YAAC,OAAO,EAAE,EAAE;gBACT,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;gBACjB,KAAI,CAAC,IAAI,EAAE;gBACX,OAAO,CAAC,KAAK,CAAC,iCAAiC,CAAC;gBAChD,OAAO,CAAC,KAAK,CAAC,iCAAiC,CAAC;gBAChD,OAAO,CAAC,KAAK,CAAC,iCAAiC,CAAC;aACnD;QACL,CAAC;QAtJG,IAAI,CAAC,QAAQ,GAAG,IAAI,gDAAO,CAAC,MAAM,CAAC;QACnC,IAAM,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE;QAClC,yBAAyB;SAC5B,CAAC;QACF,IAAI,CAAC,EAAE,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC;SAAE;QAEjE,IAAI,CAAC,GAAG,GAAG,EAAE;QACb,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE;QACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE;IAC7B,CAAC;IAED,sBAAI,wBAAE;aAAN;YACI,OAAO,IAAI,CAAC,GAAG;QACnB,CAAC;;;OAAA;IAKD,sBAAI,6BAAO;QAHX;;WAEG;aACH,cAAgB,OAAO,IAAI,CAAC,QAAQ,EAAC,CAAC;;;OAAA;IAKtC,sBAAI,2BAAK;QAHT;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,EAAE,CAAC,kBAAkB;QACrC,CAAC;;;OAAA;IAID,sBAAI,4BAAM;QAHV;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,EAAE,CAAC,mBAAmB;QACtC,CAAC;;;OAAA;IAKD,sBAAI,8BAAQ;QAHZ;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,SAAS;QACzB,CAAC;;;OAAA;IAKD,sBAAI,8BAAQ;QAHZ;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,SAAS;QACzB,CAAC;;;OAAA;IAED,sBAAI,gCAAU;aAAd;YACI,OAAO,IAAI,CAAC,WAAW;QAC3B,CAAC;;;OAAA;IAED;;;OAGG;IACI,sBAAG,GAAV,UAAW,QAAmB;QAC1B,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,KAAK,EAAE;IAC1C,CAAC;IAEM,2BAAQ,GAAf,UAAgB,IAAY;QAChB,0BAAO,CAAS;QACxB,OAAO,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI;IACpC,CAAC;IAEY,8BAAW,GAAxB,UAAyB,MAAoB;;;;;;wBACjC,IAAI,GAAK,MAAM,KAAX,CAAW;wBACjB,KAAK,GAAG,IAAI,8CAAK,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC;wBACtC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC;wBAC7B,qBAAM,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;;wBAAxB,SAAwB;wBACxB,sBAAO,KAAK;;;;KACf;IAEM,+BAAY,GAAnB,UAAoB,IAAY;QACpB,0BAAO,CAAS;QACxB,IAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO,KAAK;SAAE;QAC5B,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;QACpB,KAAK,CAAC,OAAO,EAAE;QACf,OAAO,IAAI;IACf,CAAC;IAED;;;OAGG;IACI,iCAAc,GAArB,UAAsB,OAAgB;QAClC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAAE,OAAO,KAAK;SAAE;QACrD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC;QACxC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc;aACpC,MAAM,CAAE,UAAC,CAAU,IAAK,QAAC,CAAC,IAAI,EAAN,CAAM,CAAC;QACpC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC;QACjC,OAAO,IAAI;IACf,CAAC;IAED;;OAEG;IACI,iCAAc,GAArB,UAAsB,IAAY;QAC9B,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAAE,OAAO,KAAK;SAAE;QAC7C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc;aACpC,MAAM,CAAE,UAAC,CAAU,IAAK,QAAC,CAAC,IAAI,EAAN,CAAM,CAAC;QACpC,OAAO,IAAI;IACf,CAAC;IAED;;;OAGG;IACI,wBAAK,GAAZ;QACI,IAAI,IAAI,CAAC,WAAW,EAAE;YAAE,OAAM;SAAE;QAChC,IAAI,CAAC,WAAW,GAAG,IAAI;QACvB,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC;IAC7C,CAAC;IAED;;OAEG;IACI,uBAAI,GAAX;QACI,IAAI,CAAC,WAAW,GAAG,KAAK;IAC5B,CAAC;IA+BL,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChLD;;;;GAIG;AACH,IAAM,IAAI,GAAG,SAAS;AAEtB;IAgII,eAAY,OAA2B;QAA3B,6CAA2B;QACnC,IAAI,CAAC,CAAC,GAAG,CAAC;QACV,IAAI,CAAC,CAAC,GAAG,CAAC;QACV,IAAI,CAAC,CAAC,GAAG,CAAC;QACV,IAAI,CAAC,CAAC,GAAG,CAAC;QACV,IAAI,CAAC,CAAC,GAAG,CAAC;QACV,IAAI,CAAC,CAAC,GAAG,CAAC;QACV,IAAI,CAAC,CAAC,GAAG,CAAC;QAEV,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;IACvB,CAAC;IAzIa,aAAO,GAArB,UAAsB,OAAe;QACjC,IAAK,OAAO,OAAO,KAAK,QAAQ,EAAG;YAAE,OAAO,KAAK;SAAE;QACnD,IAAK,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAG;YAAE,OAAO,KAAK;SAAE;QACjD,QAAS,OAAO,CAAC,MAAM,EAAG;YACtB,KAAK,CAAC,CAAC,CAAE,OAAO;YAChB,KAAK,CAAC,CAAC,CAAE,QAAQ;YACjB,KAAK,CAAC,CAAC,CAAE,UAAU;YACnB,KAAK,CAAC,EAAG,YAAY;gBACjB,OAAO,IAAI;SAClB;QAED,OAAO,KAAK;IAChB,CAAC;IAEa,eAAS,GAAvB,UAAwB,OAAe;QACnC,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC;QAChC,OAAO,KAAK,CAAC,SAAS,EAAE;IAC5B,CAAC;IAEa,eAAS,GAAvB,UAAwB,OAAe;QACnC,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC;QAChC,OAAO,KAAK,CAAC,SAAS,EAAE;IAC5B,CAAC;IAED;;OAEG;IACW,mBAAa,GAA3B,UAA4B,OAAe;QACvC,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC;QAChC,OAAO,KAAK,CAAC,aAAa,EAAE;IAChC,CAAC;IAEa,kBAAY,GAA1B,UAA2B,GAA6B;QAC9C,uBAAe,EAAd,SAAC,EAAE,SAAC,EAAE,SAAQ;QACrB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IAEa,mBAAa,GAA3B,UAA4B,IAAsC;QACxD,wBAAmB,EAAlB,SAAC,EAAE,SAAC,EAAE,SAAC,EAAE,SAAS;QACzB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnC,CAAC;IAED;;;;;OAKG;IACW,SAAG,GAAjB,UAAkB,MAAa,EAAE,MAAa,EAAE,KAAiB;QAAjB,kCAAiB;QAC7D,IAAM,IAAI,GAAG,CAAC,GAAG,KAAK;QACtB,OAAO,KAAK,CAAC,OAAO,CAChB,KAAK,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,CAAC,EAClC,KAAK,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,CAAC,EAClC,KAAK,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,CAAC,EAClC,KAAK,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,CAAC,CACrC;IACL,CAAC;IAED;;;;;OAKG;IACW,UAAI,GAAlB,UAAmB,MAAe,EAAE,KAAiB;QAAjB,kCAAiB;QACjD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAAE,OAAO,KAAK,CAAC,QAAQ,EAAE;SAAE;QACpD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAAE,OAAO,MAAM,CAAC,CAAC,CAAC;SAAE;QAE7C,IAAM,WAAW,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC;QACrC,IAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC;QACvD,IAAM,MAAM,GAAG,MAAM,CAAC,eAAe,CAAC;QACtC,IAAI,eAAe,KAAK,WAAW,EAAE;YAAE,OAAO,MAAM;SAAE;QACtD,IAAM,MAAM,GAAG,MAAM,CAAC,eAAe,GAAG,CAAC,CAAC;QAC1C,IAAM,eAAe,GAAG,eAAe,GAAG,KAAK,GAAG,WAAW;QAC7D,OAAO,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,eAAe,CAAC;IACrD,CAAC;IAEa,cAAQ,GAAtB;QACI,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC;IAEa,cAAQ,GAAtB;QACI,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC;IAED;;;;;;;OAOG;IACW,YAAM,GAApB,UAAqB,GAAW,EAAE,KAAa,EAAE,IAAY;QACzD,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE;QACzB,KAAK,CAAC,CAAC,GAAG,GAAG;QACb,KAAK,CAAC,CAAC,GAAG,KAAK;QACf,KAAK,CAAC,CAAC,GAAG,IAAI;QACd,KAAK,CAAC,CAAC,GAAG,CAAC;QACX,OAAO,KAAK;IAChB,CAAC;IAED;;;;;;;;OAQG;IACW,aAAO,GAArB,UAAsB,GAAW,EAAE,KAAa,EAAE,IAAY,EAAE,KAAa;QACzE,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE;QACzB,KAAK,CAAC,CAAC,GAAG,GAAG;QACb,KAAK,CAAC,CAAC,GAAG,KAAK;QACf,KAAK,CAAC,CAAC,GAAG,IAAI;QACd,KAAK,CAAC,CAAC,GAAG,KAAK;QACf,OAAO,KAAK;IAChB,CAAC;IAqBM,0BAAU,GAAjB;QACI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC;IAEM,2BAAW,GAAlB;QACI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED;;;;;OAKG;IACI,qBAAK,GAAZ,UAAa,IAAwB;QAAxB,uCAAwB;QACjC,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE;QACvC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;YAAE,OAAO,IAAI;SAAE;QACrD,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;YAAE,OAAO,IAAI;SAAE;QACpD,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;YAAE,OAAO,IAAI;SAAE;QACrD,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;YAAE,OAAO,IAAI;SAAE;QACpD,mBAAmB;QACnB,OAAO,KAAK;IAChB,CAAC;IAED;;;;OAIG;IACI,yBAAS,GAAhB;QACI,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;IACpE,CAAC;IAED;;OAEG;IACI,6BAAa,GAApB;QACI,OAAO,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC;IAED;;;OAGG;IACI,yBAAS,GAAhB;QACI,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;QAC3E,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;YACZ,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;SAC/B;QACD,OAAO,MAAI,KAAO;IACtB,CAAC;IAEM,oBAAI,GAAX;QACI,IAAM,QAAQ,GAAG,IAAI,KAAK,EAAE;QAC5B,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QACnB,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QACnB,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QACnB,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QACnB,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QACnB,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QACnB,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QACnB,OAAO,QAAQ;IACnB,CAAC;IAED;;;;OAIG;IACI,uBAAO,GAAd;QACI,IAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;QACpB,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC;QAChB,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC;QAChB,IAAM,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAC5C,IAAM,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAE5C,IAAI,CAAC,GAAG,CAAC;QACT,IAAI,CAAC,GAAG,CAAC;QACT,IAAI,CAAC,GAAG,CAAC;QAET,IAAI,CAAC,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,GAAG,CAAC,EAAE;gBACP,CAAC,GAAG,MAAM,CAAC;gBAAC,CAAC,GAAG,CAAC,CAAC;gBAAC,CAAC,GAAG,CAAC;aAC3B;iBAAM,IAAI,CAAC,GAAG,CAAC,EAAE;gBACd,CAAC,GAAG,CAAC,CAAC;gBAAC,CAAC,GAAG,MAAM,CAAC;gBAAC,CAAC,GAAG,CAAC;aAC3B;iBAAM;gBACH,UAAU;gBACV,CAAC,GAAG,CAAC,CAAC;gBAAC,CAAC,GAAG,MAAM,CAAC;gBAAC,CAAC,GAAG,CAAC;aAC3B;SACJ;aAAM,IAAI,CAAC,GAAG,CAAC,EAAE;YACd,CAAC,GAAG,CAAC,CAAC;YAAC,CAAC,GAAG,CAAC,CAAC;YAAC,CAAC,GAAG,MAAM;SAC3B;aAAM,IAAI,CAAC,GAAG,CAAC,EAAE;YACd,CAAC,GAAG,CAAC,CAAC;YAAC,CAAC,GAAG,CAAC,CAAC;YAAC,CAAC,GAAG,MAAM;SAC3B;aAAM;YACH,CAAC,GAAG,MAAM,CAAC;YAAC,CAAC,GAAG,CAAC,CAAC;YAAC,CAAC,GAAG,CAAC;SAC3B;QAED,IAAM,KAAK,GAAG,CAAC,GAAG,MAAM,GAAG,GAAG;QAC9B,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK;QAClB,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK;QAClB,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK;IACtB,CAAC;IAEM,uBAAO,GAAd;QACI,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC;QAChB,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC;QAChB,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC;QAEhB,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC7B,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC7B,IAAM,KAAK,GAAG,GAAG,GAAG,GAAG;QAEvB,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;QAE1B,IAAI,KAAK,GAAG,QAAQ,EAAE;YAClB,IAAI,CAAC,CAAC,GAAG,CAAC;YACV,IAAI,CAAC,CAAC,GAAG,CAAC;SACb;aAAM;YACH,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/C,IAAI,GAAG,KAAK,CAAC,EAAE;gBACX,IAAI,CAAC,IAAI,CAAC,EAAE;oBACR,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;iBACpC;qBAAM;oBACH,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;iBACxC;aACJ;iBAAM,IAAI,GAAG,KAAK,CAAC,EAAE;gBAClB,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;aACxC;iBAAM;gBACH,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;aACxC;SACJ;IACL,CAAC;IAEO,yBAAS,GAAjB,UAAkB,IAAY;QAC1B,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YAAE,OAAO,KAAK;SAAE;QAC5C,IAAI,CAAC,GAAG,CAAC;QACT,IAAI,CAAC,GAAG,CAAC;QACT,IAAI,CAAC,GAAG,CAAC;QACT,IAAI,CAAC,GAAG,CAAC;QAET,QAAQ,IAAI,CAAC,MAAM,EAAE;YACjB,KAAK,CAAC;gBACF,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK;gBACxC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK;gBACxC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK;gBACxC,MAAK;YACT,KAAK,CAAC;gBACF,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK;gBACxC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK;gBACxC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK;gBACxC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK;gBACxC,MAAK;YACT,KAAK,CAAC;gBACF,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM;gBAC5C,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM;gBAC5C,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM;gBAC5C,MAAK;YACT,KAAK,CAAC;gBACF,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM;gBAC5C,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM;gBAC5C,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM;gBAC5C,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM;gBAC5C,MAAK;YACT,QAAQ;SACX;QAED,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;YAC9C,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC;SACxC;aAAM;YACH,IAAI,CAAC,CAAC,GAAG,CAAC;YACV,IAAI,CAAC,CAAC,GAAG,CAAC;YACV,IAAI,CAAC,CAAC,GAAG,CAAC;YACV,IAAI,CAAC,CAAC,GAAG,CAAC;SACb;QAED,OAAO,IAAI;IACf,CAAC;IAED;;;OAGG;IACK,wBAAQ,GAAhB,UAAiB,IAAY;QACzB,IAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,CAAC,EAAE;YAAE,OAAO,KAAK;SAAE;QACxB,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC;QAC7C,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC;QAC7C,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC;QAC7C,IAAI,CAAC,CAAC,GAAG,CAAC;QACV,OAAO,IAAI;IACf,CAAC;IAED;;;OAGG;IACK,yBAAS,GAAjB,UAAkB,IAAY;QAC1B,IAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,CAAC,EAAE;YAAE,OAAO,KAAK;SAAE;QACxB,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC;QAC7C,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC;QAC7C,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC;QAC7C,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,OAAO,IAAI;IACf,CAAC;IAED;;;OAGG;IACK,wBAAQ,GAAhB,UAAiB,IAAY;QACzB,IAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,CAAC,EAAE;YAAE,OAAO,KAAK;SAAE;QACxB,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC;QAC7C,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;QAC5C,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;QAC5C,IAAI,CAAC,CAAC,GAAG,CAAC;QACV,IAAI,CAAC,OAAO,EAAE;QACd,OAAO,IAAI;IACf,CAAC;IACL,YAAC;AAAD,CAAC;;AAED,IAAM,IAAI,GAAG,CAAC,GAAG,CAAC;AAClB,IAAM,KAAK,GAAG,CAAC,GAAG,EAAE;AACpB,IAAM,KAAK,GAAG,CAAC,GAAG,EAAE;AACpB,IAAM,MAAM,GAAG,CAAC,GAAG,GAAG;AACtB,IAAM,MAAM,GAAG,CAAC,GAAG,GAAG;AAEtB,IAAM,MAAM,GAAG,kDAAkD;AACjE,IAAM,OAAO,GAAG,oEAAoE;AACpF,IAAM,MAAM,GAAG,kDAAkD;AAEjE,SAAS,OAAO,CAAC,KAAa;IAC1B,IAAI,KAAK,GAAG,CAAC,EAAE;QAAE,OAAO,CAAC;KAAE;IAC3B,IAAI,KAAK,GAAG,CAAC,EAAE;QAAE,OAAO,CAAC;KAAE;IAC3B,OAAO,KAAK;AAChB,CAAC;AAED,SAAS,KAAK,CAAC,KAAa;IACxB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;IACxC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;QAAE,GAAG,GAAG,GAAG,GAAG,GAAG;KAAE;IACvC,OAAO,GAAG;AACd,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACrYD,IAAM,GAAG,GAAG,CAAC,IAAI,YAAY,EAAE,CAAC,CAAC,iBAAiB;AAgBlD;;;;;;;;;;;;;;;;;GAiBG;AACH;IAQI,iBAAY,EAAyB,EACzB,KAAe,EACf,QAAwC;QAAxC,wCAAwC;QAChD,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;YAChC,MAAM,KAAK,CAAC,+DAA+D,CAAC;SAC/E;QACD,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;YAChC,MAAM,KAAK,CAAC,+DAA+D,CAAC;SAC/E;QAED,KAAK,GAAG,aAAa,CAAC,KAAK,EAAE,QAAQ,CAAC;QAEtC,IAAI,CAAC,EAAE,GAAG,EAAE;QACZ,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;QACtB,IAAI,CAAC,GAAG,GAAG,GAAG;QACd,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;QAEvB,IAAI,CAAC,iBAAiB,GAAG,mBAAmB,CAAC,EAAE,CAAC;QAEhD,IAAM,aAAa,GAAG,EAAE,CAAC,aAAa,EAAE;QACxC,IAAI,CAAC,aAAa,EAAE;YAChB,MAAM,KAAK,CAAC,gCAAgC,CAAC;SAChD;QACD,IAAI,CAAC,OAAO,GAAG,aAAa;QAC5B,IAAM,UAAU,GAAG,eAAe,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC;QAClD,EAAE,CAAC,YAAY,CAAC,aAAa,EAAE,UAAU,CAAC;QAC1C,IAAM,UAAU,GAAG,iBAAiB,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC;QACpD,EAAE,CAAC,YAAY,CAAC,aAAa,EAAE,UAAU,CAAC;QAC1C,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC;QAE7B,IAAI,CAAC,GAAG,GAAG,cAAQ,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,EAAC,CAAC;QAEjD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,EAAE;QACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE;IACzC,CAAC;IAEM,qBAAG,GAAV;QACI,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;IACpC,CAAC;IAEM,6BAAW,GAAlB,UAAmB,MAAc;QAC7B,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;IACzC,CAAC;IAEM,6BAAW,GAAlB,UAAmB,MAAmB;;QAAE,eAAkB;aAAlB,UAAkB,EAAlB,qBAAkB,EAAlB,IAAkB;YAAlB,8BAAkB;;QACtD,IAAM,IAAI,GAAG,IAAI;QACT,gBAAE,CAAS;QACnB,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC;QAEtC,IAAI,SAAS,GAAG,CAAC;;YACjB,KAAmB,4BAAK,4EAAE;gBAArB,IAAM,MAAI;gBACX,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAI,CAAC;gBACjC,IAAI,CAAC,MAAM,EAAE;oBACT,MAAM,KAAK,CAAC,0BAA0B,GAAG,MAAI,GAAG,OAAO;wBACnD,sDAAsD;wBACtD,4BAA4B;wBAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC;4BAC5B,OAAO,GAAG,GAAG,CAAC,GAAG,GAAG;wBACxB,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAG,OAAK,IAAI,CAAC,OAAO,CAAC,MAAM,MAAG,EAAC;iBACnD;gBACD,SAAS,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG;aACnD;;;;;;;;;QAED,IAAI,MAAM,GAAG,CAAC;;YACd,KAAmB,4BAAK,4EAAE;gBAArB,IAAM,MAAI;gBACX,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAI,CAAC;gBACjC,EAAE,CAAC,uBAAuB,CAAC,MAAM,CAAC,QAAQ,CAAC;gBAC3C,EAAE,CAAC,mBAAmB,CAClB,MAAM,CAAC,QAAQ,EACf,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,EAC3B,EAAE,CAAC,KAAK,EACR,KAAK,EAAE,oBAAoB;gBAC3B,SAAS,EACT,MAAM,CACT;gBACD,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG;aAChD;;;;;;;;;IACL,CAAC;IAEM,4BAAU,GAAjB,UAAkB,IAAY,EAAE,KAAU;QACtC,IAAM,EAAE,GAAG,GAAG,GAAG,IAAI;QACrB,IAAM,GAAG,GAAG,IAA4B;QACxC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK;IACnB,CAAC;IAEO,kCAAgB,GAAxB;QACU,aAAsB,EAApB,UAAE,EAAE,oBAAgB;QAC5B,IAAM,OAAO,GAAgB,EAAE;QAC/B,IAAM,YAAY,GAAG,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAAE,CAAC,iBAAiB,CAAC;QAC1E,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,YAAY,EAAE,KAAK,EAAE,EAAE;YAC/C,IAAM,IAAI,GAAmB,EAAE,CAAC,eAAe,CAAC,OAAO,EAAE,KAAK,CAAY;YAC1E,IAAI,CAAC,IAAI,EAAE;gBAAE,SAAQ;aAAE;YACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC;YACpC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC;YACxD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI;YACzB,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE;gBACzC,KAAK,EAAE,IAAI,CAAC,QAAQ;gBACpB,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,IAAI;gBAChB,YAAY,EAAE,KAAK;aACtB,CAAC;SACL;QACD,OAAO,OAAO;IAClB,CAAC;IAEO,yBAAO,GAAf,UAAgB,EAAyB,EAAE,IAAa;QACpD,QAAQ,IAAI,CAAC,IAAI,EAAE;YACf,KAAK,EAAE,CAAC,UAAU;gBACd,OAAO,CAAC;YACZ,KAAK,EAAE,CAAC,UAAU;gBACd,OAAO,CAAC;YACZ,KAAK,EAAE,CAAC,UAAU;gBACd,OAAO,CAAC;YACZ,KAAK,EAAE,CAAC,KAAK;gBACT,OAAO,CAAC;YACZ;gBACI,MAAM,KAAK,CAAC,kEAAkE,GAAG,IAAI,CAAC,IAAI;oBACtF,kCAAkC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;SAClF;IACL,CAAC;IAEO,gCAAc,GAAtB;QACU,aAAsB,EAApB,UAAE,EAAE,oBAAgB;QAC5B,IAAM,QAAQ,GAAiB,EAAE;QACjC,IAAM,aAAa,GAAG,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAAE,CAAC,eAAe,CAAC;QACzE,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,aAAa,EAAE,KAAK,EAAE,EAAE;YAChD,IAAM,IAAI,GAAG,EAAE,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,CAAC;YAChD,IAAI,CAAC,IAAI,EAAE;gBAAE,SAAQ;aAAE;YACvB,IAAM,UAAQ,GAAG,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC;YAC1D,IAAI,CAAC,UAAQ,EAAE;gBAAE,SAAQ;aAAE;YAC3B,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,UAAQ;YAC9B,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE;gBACzC,GAAG,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC;gBAChF,GAAG,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;gBACnC,UAAU,EAAE,IAAI;gBAChB,YAAY,EAAE,KAAK;aACtB,CAAC;SACL;QAED,OAAO,QAAQ;IACnB,CAAC;IAEO,qCAAmB,GAA3B,UAA4B,IAAqB,EACrB,MAA4B,EAC5B,MAA+B;QAC/C,gBAAE,CAAS;QACnB,IAAM,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI;QAE/B,QAAQ,IAAI,CAAC,IAAI,EAAE;YACf,KAAK,EAAE,CAAC,IAAI,CAAC;YACb,KAAK,EAAE,CAAC,aAAa,CAAC;YACtB,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,KAAK,EAAE,CAAC,cAAc,CAAC;YACvB,KAAK,EAAE,CAAC,GAAG,CAAC;YACZ,KAAK,EAAE,CAAC,YAAY,CAAC;YACrB,KAAK,EAAE,CAAC,UAAU,EAAE,6CAA6C;gBAC7D,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;oBACjB,OAAO,UAAwC,CAAS;wBACpD,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;wBACvB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACpB,CAAC;iBACJ;qBAAM;oBACH,OAAO,UAA2C,CAAY;wBAC1D,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;wBACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACpB,CAAC;iBACJ;YACL,KAAK,EAAE,CAAC,KAAK;gBACT,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;oBACjB,OAAO,UAAwC,CAAS;wBACpD,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;wBACvB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACpB,CAAC;iBACJ;qBAAM;oBACH,OAAO,UAA6C,CAAc;wBAC9D,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;wBACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACpB,CAAC;iBACJ;YACL,KAAK,EAAE,CAAC,UAAU;gBACd,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;oBACjB,OAAO,UAA6C,CAAc;wBAC9D,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;wBACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACpB,CAAC;iBACJ;qBAAM;oBACH,MAAM,KAAK,CACP,uFAAuF;wBACvF,IAAI,CAAC,IAAI,GAAG,KAAK,CACpB;iBACJ;YACL,KAAK,EAAE,CAAC,UAAU;gBACd,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;oBACjB,OAAO,UAA6C,CAAc;wBAC9D,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;wBACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACpB,CAAC;iBACJ;qBAAM;oBACH,MAAM,KAAK,CACP,uFAAuF;wBACvF,IAAI,CAAC,IAAI,GAAG,KAAK,CACpB;iBACJ;YACL,KAAK,EAAE,CAAC,UAAU;gBACd,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;oBACjB,OAAO,UAA6C,CAAc;wBAC9D,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;wBACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACpB,CAAC;iBACJ;qBAAM;oBACH,MAAM,KAAK,CACP,uFAAuF;wBACvF,IAAI,CAAC,IAAI,GAAG,KAAK,CACpB;iBACJ;YACL,KAAK,EAAE,CAAC,UAAU;gBACd,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;oBACjB,OAAO,UAA6C,CAAc;wBAC9D,EAAE,CAAC,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;wBACrC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACpB,CAAC;iBACJ;qBAAM;oBACH,MAAM,KAAK,CACP,uFAAuF;wBACvF,IAAI,CAAC,IAAI,GAAG,KAAK,CACpB;iBACJ;YACL,KAAK,EAAE,CAAC,UAAU;gBACd,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;oBACjB,OAAO,UAA6C,CAAc;wBAC9D,EAAE,CAAC,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;wBACrC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACpB,CAAC;iBACJ;qBAAM;oBACH,MAAM,KAAK,CACP,uFAAuF;wBACvF,IAAI,CAAC,IAAI,GAAG,KAAK,CACpB;iBACJ;YACL;gBACI,MAAM,KAAK,CACP,oEAAoE;oBACpE,IAAI,CAAC,IAAI,GAAG,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CACrD;SACR;IACL,CAAC;IAEO,qCAAmB,GAA3B,UAA4B,IAAqB;QAC7C,IAAM,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI;QAC7B,OAAO;YACH,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;IACL,CAAC;IAEL,cAAC;AAAD,CAAC;;AAED;;;;GAIG;AACH,SAAS,aAAa,CAAC,KAAe,EAAE,QAAmC;IACvE,OAAO;QACH,IAAI,EAAE,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC;QACxC,IAAI,EAAE,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC;KAC3C;AACL,CAAC;AAED,SAAS,YAAY,CAAC,IAAY,EAAE,QAAmC;IACnE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,IAAI;QAC7B,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,UAAU,EAAE;YAAE,OAAO,IAAI;SAAE;QAC5D,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC;QACxC,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE;QACzC,+BAA+B;QAC/B,eAAe;QACf,iBAAiB;QACjB,iBAAiB;QACjB,iBAAiB;QACjB,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;YAC5C,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;SAC9D;QACD,IAAM,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAC;QACrC,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;YAC7B,OAAO,CAAC,KAAK,CAAC,WAAW,GAAG,WAAW,GAAG,iBAAiB,EAAE,QAAQ,CAAC;YACtE,MAAM,KAAK,CAAC,+BAA+B,GAAG,WAAW,CAAC;SAC7D;QACD,OAAO,OAAO;IAClB,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AACjB,CAAC;AAED,SAAS,SAAS,CAAC,IAAY,EAAE,EAAyB,EAAE,IAAY;IACpE,IAAI,IAAI,KAAK,EAAE,CAAC,aAAa,IAAI,IAAI,KAAK,EAAE,CAAC,eAAe,EAAE;QAC1D,MAAM,KAAK,CAAC,gDAAgD,CAAC;KAChE;IACD,IAAM,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC;IACpC,IAAI,CAAC,MAAM,EAAE;QACT,MAAM,KAAK,CAAC,yBAAsB,IAAI,KAAK,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,cAAU,CAAC;KACjG;IACD,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC;IAC7B,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC;IACxB,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,MAAM,EAAE,EAAE,CAAC,cAAc,CAAC,EAAE;QACnD,OAAO,CAAC,IAAI,CAAC,mCAAmC,CAAC;QACjD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;QAClB,OAAO,CAAC,KAAK,CAAC,0CAA0C,GAAG,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACvF,MAAM,KAAK,CAAC,yBAAsB,IAAI,KAAK,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,cAAU,CAAC;KACjG;IAED,OAAO,MAAM;AACjB,CAAC;AAED,SAAS,iBAAiB,CAAC,EAAyB,EAAE,IAAY;IAC9D,OAAO,SAAS,CAAC,EAAE,CAAC,eAAe,EAAE,EAAE,EAAE,IAAI,CAAC;AAClD,CAAC;AAED,SAAS,eAAe,CAAC,EAAyB,EAAE,IAAY;IAC5D,OAAO,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,EAAE,EAAE,IAAI,CAAC;AAChD,CAAC;AAED,SAAS,mBAAmB,CAAC,EAAyB;IAClD,IAAM,MAAM,GAA4B,EAAE;IAE1C,KAAK,IAAM,CAAC,IAAI,EAAE,EAAE;QAChB,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,EAAE;YAAE,SAAQ;SAAE;QACvC,IAAM,CAAC,GAAI,EAA2B,CAAC,CAAC,CAAC;QACzC,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;YACvB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;SAChB;KACJ;IACD,OAAO,MAAM;AACjB,CAAC;;;;;;;;;;;;;ACpXD;AAAA;;;;;;GAMG;AACY,yEAAE,EAAyB,EAAE,UAAsB;IAAtB,2CAAsB;IAC9D,IAAI,UAAU,IAAI,CAAC,EAAE;QACjB,UAAU,GAAG,MAAM,CAAC,gBAAgB;KACvC;IAED,IAAM,MAAM,GAAG,EAAE,CAAC,MAA2B;IAC7C,IAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAE,MAAM,CAAC,WAAW,GAAG,UAAU,CAAE;IAClE,IAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAE,MAAM,CAAC,YAAY,GAAG,UAAU,CAAE;IAEpE,4CAA4C;IAC5C,IAAK,MAAM,CAAC,KAAK,KAAK,YAAY;QAC9B,MAAM,CAAC,MAAM,KAAK,aAAa,EAAG;QAElC,gCAAgC;QAChC,MAAM,CAAC,KAAK,GAAG,YAAY;QAC3B,MAAM,CAAC,MAAM,GAAG,aAAa;QAC7B,EAAE,CAAC,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,aAAa,CAAE;QAChD,OAAO,IAAI;KACd;IACD,OAAO,KAAK;AAChB,CAAC","file":"flat-land-gl.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","export interface IAtlasParams {\n    name: string,\n    // URL of an image JPG, PNG, GIF or WEBP.\n    image: string\n}\n\nexport default class Atlas {\n    private readonly texture: WebGLTexture\n    private _ready = false\n    private _width = 0\n    private _height = 0\n\n    constructor(private gl: WebGLRenderingContext, private _name: string) {\n        const texture = gl.createTexture()\n        if (!texture) { throw new Error(\"Unable to create a new texture!\") }\n        this.texture = texture\n        gl.bindTexture(gl.TEXTURE_2D, texture)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n    }\n\n    get name() { return this._name }\n    get width() { return this._width }\n    get height() { return this._height }\n    /**\n     * Return `true` as soon as an image has been loaded into the graphic card.\n     */\n    get ready() { return this._ready }\n\n    /**\n     * Remove the texture from the graphic card memory.\n     */\n    public destroy() {\n        this._ready = false\n        const { gl, texture } = this\n        gl.deleteTexture(texture)\n    }\n\n    public activate(unit = 0) {\n        const { gl, texture } = this\n        const UNITS = [\n            gl.TEXTURE0,\n            gl.TEXTURE1,\n            gl.TEXTURE2,\n            gl.TEXTURE3,\n            gl.TEXTURE4,\n            gl.TEXTURE5,\n            gl.TEXTURE6,\n            gl.TEXTURE7,\n        ]\n        gl.activeTexture(UNITS[Math.abs(unit) % UNITS.length])\n        gl.bindTexture(gl.TEXTURE_2D, texture)\n    }\n\n    public async load(params: IAtlasParams) {\n        this._ready = false\n        return this.loadImage(params.image)\n    }\n\n    private async loadImage(url: string): Promise<void> {\n        const that = this\n\n        return new Promise((resolve, reject) => {\n            const img = new Image()\n            that._ready = false\n            img.onload = () => {\n                const { gl, texture } = that\n                gl.bindTexture(gl.TEXTURE_2D, texture)\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img)\n                that._ready = true\n                that._width = img.width\n                that._height = img.height\n                resolve()\n            }\n            img.onerror = () => {\n                console.error(`Unable to load image \"${name}\": `, url)\n                reject()\n            }\n            img.src = url\n        })\n    }\n}\n","const COS = new Float32Array(4096)\nconst SIN = new Float32Array(4096)\n\n// Prepare acceleration table for COS and SIN.\nfor (let i = 0 ; i < 4096 ; i++) {\n    const angle = Math.PI * i / 2048\n    COS[i] = Math.cos(angle)\n    SIN[i] = Math.sin(angle)\n}\n\nexport default { cos, sin }\n\n/**\n * Fast cosine.\n * Angle is define between 0 and 4095.\n * * PI/2  <=>  1023\n * * PI  <=>  2047\n * * 3*PI/2  <=>  3071\n */\nfunction cos(angle: number) {\n    return COS[(angle|0) & 4095]\n}\n\n/**\n * Fast sine.\n * Angle is define between 0 and 4095.\n * * PI/2  <=>  1023\n * * PI  <=>  2047\n * * 3*PI/2  <=>  3071\n */\nfunction sin(angle: number) {\n    return SIN[(angle|0) & 4095]\n}\n","export default function castString(value: any, defaultValue: string = \"\"): string {\r\n    const t = typeof value\r\n    if (t === \"number\" && !isNaN(value)) {\r\n        return `${value}`\r\n    }\r\n    if (t === \"string\") { return value }\r\n    return defaultValue\r\n}\r\n","import Calc from \"./calc\"\nimport Painter from \"./painter\"\nimport Scene from \"./scene\"\n\nconst FlatLand = {\n    Calc,\n    Painter,\n    Scene\n}\n\nexport default FlatLand\n\n// Global export for old vanilla Javascript users.\nwindow[\"FlatLand\"] = FlatLand\n","/**\n * Background the screen by filling it with an image that covers it entirely.\n */\n  import Atlas from \"../../atlas\"\n  import castString from \"../../converter/string\"\n  import Program from \"../../webgl/program\"\n  import Painter, { IPainterParams } from \"../painter\"\n\n  interface IBackgroundPainterParams extends IPainterParams {\n    atlas: string,\n    align?: string\n}\n\n  export default class BackgroundPainter extends Painter {\n    private readonly atlas: Atlas\n    private readonly prg: Program\n    private readonly buff: WebGLBuffer\n\n    /**\n     * params: { atlas, align }\n     * - align: if undefined, the background will be centered.\n     *          \"R\" means that the Right edge of the background is always visible.\n     *          \"L\" means the same for Left.\n     *          \"T\" for Top.\n     *          \"B\" for \"Bottom\".\n     */\n    constructor(params: IBackgroundPainterParams) {\n        super(params)\n        const { scene, atlas } = params\n        const atlasObj = scene.getAtlas(atlas)\n        if (!atlasObj) {\n            throw this.fatal(`Atlas \"${atlas}\" not found!`)\n        }\n\n        this.atlas = atlasObj\n        this.prg = this.createProgram({\n            frag: FRAG,\n            vert: getVert(castString(params.align).toUpperCase()),\n        })\n        const { gl } = scene\n        const buff = gl.createBuffer()\n        if (!buff) {\n            throw this.fatal(\"Not enough memory to create an array buffer!\")\n        }\n\n        gl.bindBuffer( gl.ARRAY_BUFFER, buff )\n        gl.bufferData( gl.ARRAY_BUFFER, new Float32Array([\n            0, 0, 0, 1, 1, 0, 1, 1,\n        ]), gl.STATIC_DRAW )\n        this.buff = buff\n    }\n\n    public render() {\n        const { scene, prg, atlas, buff } = this\n        const gl = scene.gl\n        gl.enable(gl.DEPTH_TEST)\n        prg.use()\n        atlas.activate()\n        const uniforms = prg as {[key: string]: any}\n        uniforms.$uniTexture = 0\n        prg.setUniform(\"uniAspectRatio\", scene.width / scene.height)\n        prg.bindAttribs(buff, \"attXY\")\n        gl.bindBuffer( gl.ARRAY_BUFFER, buff )\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n    }\n}\n\n  function getVert(align: string) {\n    let x = \"\"\n    let y = \"\"\n\n    if (align.indexOf(\"B\") !== -1) {\n        y = \"location.y -= uniAspectRatio - 1.0;\"\n    } else if (align.indexOf(\"T\") !== -1) {\n        y = \"location.y += uniAspectRatio - 1.0;\"\n    }\n    if (align.indexOf(\"R\") !== -1) {\n        x = \"location.x -= 1.0 / uniAspectRatio - 1.0;\"\n    } else if (align.indexOf(\"L\") !== -1) {\n        x = \"location.x += 1.0 / uniAspectRatio - 1.0;\"\n    }\n\n    return `uniform float uniAspectRatio;\nattribute vec2 attXY;\nvarying vec2 varUV;\n\nvoid main() {\n  varUV = attXY;\n  vec2 location = 2.0 * (attXY - vec2(0.5, 0.5));\n\n  if (uniAspectRatio > 1.0) {\n    location.y *= uniAspectRatio;${y}\n  } else {\n    location.x /= uniAspectRatio;${x}\n  }\n\n  gl_Position = vec4(location.x, -location.y, -1.0, 1.0);\n}`\n}\n\n  const FRAG = `precision mediump float;\nuniform sampler2D uniTexture;\nvarying vec2 varUV;\n\nvoid main() {\n  vec4 color = texture2D( uniTexture, varUV );\n  gl_FragColor = color;\n}`\n","export { default } from \"./background\"\n","/**\n * Clear the screen by filling it with a plain color.\n * This color is defined by attributes red, gree, blue and alpha, which must be between 0 and 1.\n */\nimport Color from \"../webgl/color\"\nimport Painter, { IPainterParams } from \"./painter\"\n\ninterface IClearPainterParams extends IPainterParams {\n    color?: string\n}\n\nexport default class ClearPainter extends Painter {\n    private _red = 0.8\n    private _green = 0.4\n    private _blue = 0.2\n    private _alpha = 1\n\n    constructor(params: IClearPainterParams) {\n        super(params)\n        this.color = params.color || \"#d72\"\n    }\n\n    get red() { return this._red }\n    set red(v: number) { this._red = v }\n\n    get green() { return this._green }\n    set green(v: number) { this._green = v }\n\n    get blue() { return this._blue }\n    set blue(v: number) { this._blue = v }\n\n    get alpha() { return this._alpha }\n    set alpha(v: number) { this._alpha = v }\n\n    get color() {\n        const color = new Color()\n        color.R = this._red\n        color.G = this._green\n        color.B = this._blue\n        color.A = this._alpha\n        return color.stringify()\n    }\n    set color(cssColor: string) {\n        const color = new Color(cssColor)\n        this._red = color.R\n        this._green = color.G\n        this._blue = color.B\n        this._alpha = color.A\n    }\n\n    public render() {\n        const gl = this.scene.gl\n        gl.clearColor(this._red, this._green, this._blue, this._alpha)\n        gl.clear(gl.COLOR_BUFFER_BIT)\n    }\n}\n","import Background from \"./background\"\nimport Clear from \"./clear\"\nimport Painter from \"./painter\"\nimport Sprites from \"./sprites\"\n\nexport default {\n    Background,\n    Clear,\n    Painter,\n    Sprites,\n}\n","/**\n * This is a virtual painter from which all the other will inherit.\n */\n\nimport Scene from \"../scene\"\nimport Program, { IShaders } from \"../webgl/program\"\n\nlet ID = 0\n\nexport interface IPainterParams {\n    name?: string,\n    scene: Scene\n}\n\nexport default abstract class Painter {\n\n    get name() { return this._name }\n    protected _name: string = `${ID++}`\n    protected readonly scene: Scene\n\n    constructor(params: IPainterParams) {\n        if (!params.scene) { throw Error('Argument \"params.scene\" is mandatory!') }\n        this.scene = params.scene\n        if (typeof params.name === \"string\" && params.name.length > 0) {\n            this._name = params.name\n        }\n        this.scene.$attachPainter(this)\n    }\n\n    public destroy() {\n        this.scene.$detachPainter(this.name)\n    }\n\n    public abstract render(time: number): void\n\n    protected createProgram(shaders: IShaders, includes: { [key: string]: string } = {}): Program {\n        return new Program(this.scene.gl, shaders, includes)\n    }\n\n    protected fatal(message: any) {\n        console.error(`Fatal error in Painter \"${this.name}\":`, message)\n        return new Error(message)\n    }\n}\n","export { default } from \"./sprites\"\n","import Calc from '../../calc'\n\nexport interface ISprite {\n    x: number,\n    y: number,\n    z: number,\n    width: number,\n    height: number,\n    originX: number,\n    originY: number,\n    u0: number,\n    v0: number,\n    u1: number,\n    v1: number,\n    scale: number,\n    angle: number\n}\n\nexport default class Sprite {\n\n    get x() { return this.params.x }\n    get y() { return this.params.y }\n    get z() { return this.params.z }\n    get width() { return this.params.width }\n    get height() { return this.params.height }\n    get originX() { return this.params.originX }\n    get originY() { return this.params.originY }\n    get u0() { return this.params.u0 }\n    get v0() { return this.params.v0 }\n    get u1() { return this.params.u1 }\n    get v1() { return this.params.v1 }\n\n    public readonly extra: {[key: string]: any} = {}\n    public $index: number = 0\n    private params: ISprite\n\n    constructor(index: number, private getData: () => Float32Array, params: Partial<ISprite>) {\n        this.$index = index\n        const width = params.width || 50\n        const height = params.height || 50\n        this.params = {\n            x: 0, y: 0, z: 0,\n            width, height,\n            originX: width / 2,\n            originY: height / 2,\n            u0: 0, v0: 0, u1: 1, v1: 1,\n            scale: 1,\n            angle: 0,\n            ...params,\n        }\n        this.update(this.params)\n    }\n\n    public update(newParams: Partial<ISprite>) {\n        this.params = { ...this.params, ...newParams }\n\n        const { getData, $index, params } = this\n        const data = getData()\n        const { x, y, z, originX, originY, width, height, u0, v0, u1, v1, scale, angle } = params\n        const xxA = -originX\n        const yyA = -originY\n        const xxB = xxA + width\n        const yyB = yyA\n        const xxC = xxA + width\n        const yyC = yyA + height\n        const xxD = xxA\n        const yyD = yyA + height\n\n        let xA = xxA * scale\n        let yA = yyA * scale\n        let xB = xxB * scale\n        let yB = yyB * scale\n        let xC = xxC * scale\n        let yC = yyC * scale\n        let xD = xxD * scale\n        let yD = yyD * scale\n\n        if ((angle|0) !== 0) {\n            const C = Calc.cos(angle)\n            const S = Calc.sin(angle)\n\n            xA = (xxA * C + yyA * S) * scale\n            yA = (yyA * C - xxA * S) * scale\n            xB = (xxB * C + yyB * S) * scale\n            yB = (yyB * C - xxB * S) * scale\n            xC = (xxC * C + yyC * S) * scale\n            yC = (yyC * C - xxC * S) * scale\n            xD = (xxD * C + yyD * S) * scale\n            yD = (yyD * C - xxD * S) * scale\n        }\n\n        data[$index + 0] = xA + x\n        data[$index + 1] = yA + y\n        data[$index + 2] = z\n        data[$index + 3] = u0\n        data[$index + 4] = v0\n\n        data[$index + 5] = xB + x\n        data[$index + 6] = yB + y\n        data[$index + 7] = z\n        data[$index + 8] = u1\n        data[$index + 9] = v0\n\n        data[$index + 10] = xC + x\n        data[$index + 11] = yC + y\n        data[$index + 12] = z\n        data[$index + 13] = u1\n        data[$index + 14] = v1\n\n        data[$index + 15] = xD + x\n        data[$index + 16] = yD + y\n        data[$index + 17] = z\n        data[$index + 18] = u0\n        data[$index + 19] = v1\n    }\n}\n","export default \"precision mediump float;\\nuniform sampler2D uniTexture;\\nvarying vec2 varUV;\\n\\nvoid main() {\\n  vec4 color = texture2D( uniTexture, varUV );\\n  if (color.a < 1.0) discard;\\n  gl_FragColor = color;\\n}\\n\"","/**\n *\n */\nimport Atlas from \"../../atlas\"\nimport Scene from \"../../scene\"\nimport Program from \"../../webgl/program\"\nimport Painter, { IPainterParams } from \"../painter\"\nimport Sprite, { ISprite } from \"./sprite\"\nimport frag from \"./sprites.frag\"\nimport vert from \"./sprites.vert\"\n\n// Allocations will be done by pieces of BLOCK Sprites.\nconst BLOCK = 64\nconst NB_ATTRIBS = 6  // attXYZ and attUV and attAngle.\nconst NB_CORNERS = 4\nconst CHUNK = NB_ATTRIBS * NB_CORNERS\n\ninterface ISpritesPainterParams extends IPainterParams {\n    atlas: string\n}\n\nexport default class SpritesPainter extends Painter {\n    private readonly atlas: Atlas\n    private readonly prg: Program\n    private dataVert = new Float32Array(BLOCK * CHUNK)\n    private readonly buffVert: WebGLBuffer\n    private readonly buffElem: WebGLBuffer\n    private sprites: Sprite[] = []\n    private count = 0\n    private capacity = BLOCK\n\n    constructor(params: ISpritesPainterParams) {\n        super(params)\n        const { scene, atlas } = params\n        const atlasObj = scene.getAtlas(atlas)\n        if (!atlasObj) {\n            throw this.fatal(`Atlas \"${atlas}\" not found!`)\n        }\n\n        this.atlas = atlasObj\n        this.prg = this.createProgram({ vert, frag })\n        const { gl } = scene\n\n        const buffVert = gl.createBuffer()\n        if (!buffVert) {\n            throw this.fatal(\"Not enough memory to create an array buffer!\")\n        }\n        gl.bindBuffer( gl.ARRAY_BUFFER, buffVert )\n        gl.bufferData( gl.ARRAY_BUFFER, this.dataVert, gl.DYNAMIC_DRAW )\n        this.buffVert = buffVert\n\n        const buffElem = gl.createBuffer()\n        if (!buffElem) {\n            throw this.fatal(\"Not enough memory to create an array buffer!\")\n        }\n        gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, buffElem )\n        gl.bufferData(\n            gl.ELEMENT_ARRAY_BUFFER,\n            createElements(BLOCK),\n            gl.DYNAMIC_DRAW )\n        this.buffElem = buffElem\n    }\n\n    public createSprite(params: Partial<ISprite>): Sprite {\n        const index = this.count * CHUNK\n        this.count++\n        if (this.count >= this.capacity) {\n            // Allocate a new block.\n            this.allocateNewBlock()\n        }\n\n        const { width, height } = this.atlas\n        const sprite = new Sprite(index, this.getData, {\n            width,\n            height,\n            ...params,\n        })\n        this.sprites.push(sprite)\n        return sprite\n    }\n\n    /**\n     * Remove a sprite from the list of sprites to render.\n     */\n    public removeSprite(sprite: Sprite) {\n        if (sprite.$index < 0) return\n        const { sprites } = this\n        if (sprites.length === 0) {\n            sprite.$index = -1\n            return\n        }\n        if (sprites.length === 1) {\n            sprite.$index = -1\n            sprites.splice(0, sprites.length)\n            this.count = 0\n            return\n        }\n        const lastSprite = sprites.pop()\n        if (!lastSprite) return\n        lastSprite.$index = sprite.$index\n        lastSprite.update({})\n        this.count--\n        sprite.$index = -1\n    }\n\n    public render() {\n        const { scene, prg, atlas, buffVert, buffElem } = this\n        const gl = scene.gl\n\n        // Update sprites' attributes.\n        gl.bindBuffer( gl.ARRAY_BUFFER, buffVert )\n        gl.bufferData( gl.ARRAY_BUFFER, this.dataVert, gl.DYNAMIC_DRAW )\n\n        gl.enable(gl.DEPTH_TEST)\n        prg.use()\n        atlas.activate()\n        const uniforms = prg as {[key: string]: any}\n        uniforms.$uniTexture = 0\n        uniforms.$uniWidth = scene.width\n        uniforms.$uniHeight = scene.height\n        prg.bindAttribs(buffVert, \"attXYZ\", \"attUV\")\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffVert)\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffElem)\n        gl.drawElements(gl.TRIANGLES, 6 * this.count, gl.UNSIGNED_SHORT, 0)\n    }\n\n    private allocateNewBlock() {\n        this.capacity += BLOCK\n\n        const { scene } = this\n        const { gl } = scene\n\n        const buffElem = this.buffElem\n        gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, buffElem )\n        gl.bufferData(\n            gl.ELEMENT_ARRAY_BUFFER,\n            createElements(this.capacity),\n            gl.DYNAMIC_DRAW )\n\n        const dataVert = new Float32Array(this.capacity * CHUNK)\n        dataVert.set(this.dataVert)\n        this.dataVert = dataVert\n    }\n\n    /**\n     * Since the vertex array can be reallocated, we cannot give a reference to the Float32Array\n     * to any Sprite. Instead, we will give them this function that will return the current array.\n     */\n    private getData = () => this.dataVert\n}\n\n/**\n * A--B\n * |  |\n * D--C\n */\nfunction createElements(capacity: number) {\n    const dataElem = new Uint16Array(6 * capacity)\n    let i = 0\n    let a = 0\n    for (let k = 0 ; k < capacity ; k++) {\n        const b = a + 1\n        const c = a + 2\n        const d = a + 3\n        dataElem[i + 0] = a\n        dataElem[i + 1] = d\n        dataElem[i + 2] = b\n        dataElem[i + 3] = b\n        dataElem[i + 4] = d\n        dataElem[i + 5] = c\n        a += 4\n        i += 6\n    }\n    return dataElem\n}\n","export default \"uniform float uniWidth;\\nuniform float uniHeight;\\nattribute vec3 attXYZ;\\nattribute vec2 attUV;\\nvarying vec2 varUV;\\n\\nconst float RESOLUTION = 512.0;\\nconst float INV_RESOLUTION = 1.0 / RESOLUTION;\\n\\nvoid main() {\\n  varUV = attUV;\\n  float widestSide = max(uniWidth, uniHeight);\\n  float w = widestSide / uniWidth;\\n  float h = widestSide / uniHeight;\\n  float x = w * (attXYZ.x - RESOLUTION) * INV_RESOLUTION;\\n  float y = h * (attXYZ.y - RESOLUTION) * INV_RESOLUTION;\\n\\n  gl_Position = vec4(x, -y, attXYZ.z, 1.0);\\n}\\n\"","export default class Pointer {\n    private _x = 0\n    private _y = 0\n    private _down = false\n    // If 0, pointer is up.\n    private _downTime = 0\n    private _eventDown = false\n    private _eventUp = false\n\n    /** @hidden */\n    constructor(private canvas: HTMLCanvasElement) {\n        window.addEventListener(\"mousemove\", this.onMouseMove, true)\n        window.addEventListener(\"touchmove\", this.onTouchMove, true)\n        window.addEventListener(\"mousedown\", this.onMouseDown, true)\n        window.addEventListener(\"touchstart\", this.onTouchStart, true)\n        window.addEventListener(\"mouseup\", this.onMouseUp, true)\n        window.addEventListener(\"touchend\", this.onTouchEnd, true)\n    }\n\n    /** @hidden */\n    public reset() {\n        this._eventDown = false\n        this._eventUp = false\n    }\n\n    get x() { return this._x }\n    get y() { return this._y }\n\n    /** Test if the pointer is touching the screen. */\n    get down() { return this._down }\n    /** `true` only if the pointer started touching the screen this very last frame. */\n    get eventUp() { return this._eventUp }\n    /** `true` only if the pointer stopped touching the screen this very last frame. */\n    get eventDown() { return this._eventDown }\n\n    private onMouseMove = (evt: MouseEvent) => {\n        this.computeCoords(evt.clientX, evt.clientY)\n    }\n\n    private onTouchMove = (te: TouchEvent) => {\n        const evt = te.touches[0]\n        this.computeCoords(evt.clientX, evt.clientY)\n    }\n\n    private onMouseDown = (evt: MouseEvent) => {\n        this.onDown(evt.clientX, evt.clientY)\n    }\n\n    private onTouchStart = (te: TouchEvent) => {\n        const evt = te.touches[0]\n        this.onDown(evt.clientX, evt.clientY)\n    }\n\n    private onDown(x: number, y: number) {\n        if (this._downTime !== 0) return\n        this.computeCoords(x, y)\n        this._down = true\n        this._eventDown = true\n        this._downTime = Date.now()\n    }\n\n    private onMouseUp = (evt: MouseEvent) => {\n        this.onUp(evt.clientX, evt.clientY)\n    }\n\n    private onTouchEnd = (te: TouchEvent) => {\n        const evt = te.touches[0]\n        this.onUp(evt.clientX, evt.clientY)\n    }\n\n    private onUp(x: number, y: number) {\n        if (this._downTime === 0) return\n        this.computeCoords(x, y)\n        this._down = false\n        this._eventUp = true\n        this._downTime = 0\n    }\n\n    private computeCoords(pointerX: number, pointerY: number) {\n        const { canvas } = this\n        const rect = canvas.getBoundingClientRect()\n\n        const x = pointerX - rect.left\n        const y = pointerY - rect.top\n        const w = rect.width\n        const h = rect.height\n\n        if (w > h) {\n            this._x = 1024 * x / w\n            this._y = 1024 * (0.5 * (1 - h / w) + (y / w))\n        } else {\n            this._x = 1024 * (0.5 * (1 - w / h) + (x / h))\n            this._y = 1024 * y / h\n        }\n    }\n}\n","import Atlas, { IAtlasParams } from \"./atlas\"\nimport Painter from \"./painter/painter\"\nimport Resize from \"./webgl/resize\"\nimport Pointer from './pointer'\n\ninterface IVector2 {\n    x: number, y: number\n}\n\nexport default class FlatLand {\n    private readonly _gl: WebGLRenderingContext\n    private readonly _pointer: Pointer\n    public resolution = 1\n    public onAnimation: ((time: number) => void) | null = null\n    private readonly painters: Map<string, Painter>\n    private readonly atlases: Map<string, Atlas>\n    private activePainters: Painter[] = []\n    private isRendering = false\n    private _pointerX = -1024\n    private _pointerY = -1024\n    private _pointerTap = false\n    // When 0\n    private _pointerDownTime = 0\n\n    constructor(canvas: HTMLCanvasElement) {\n        this._pointer = new Pointer(canvas)\n        const gl = canvas.getContext(\"webgl\", {\n            // Specify WebGL options.\n        })\n        if (!gl) { throw new Error(\"Unable to create a WegGL context!\") }\n\n        this._gl = gl\n        this.atlases = new Map()\n        this.painters = new Map()\n    }\n\n    get gl(): WebGLRenderingContext {\n        return this._gl\n    }\n\n    /**\n     * Retreive information about pointer (mouse, pen, finger, ...) state.\n     */\n    get pointer() { return this._pointer }\n\n    /**\n     * Visible width. Between 0 and 1024.\n     */\n    get width(): number {\n        return this.gl.drawingBufferWidth\n    }\n    /**\n     * Visible height. Between 0 and 1024.\n     */\n    get height(): number {\n        return this.gl.drawingBufferHeight\n    }\n\n    /**\n     * Last X position of the pointer between 0 and 1024.\n     */\n    get pointerX(): number {\n        return this._pointerX\n    }\n\n    /**\n     * Last Y position of the pointer between 0 and 1024.\n     */\n    get pointerY(): number {\n        return this._pointerY\n    }\n\n    get pointerTap(): boolean {\n        return this._pointerTap\n    }\n\n    /**\n     * Define which painter to use and in what order.\n     * For better performance, prefer putting background painters at the end of the list.\n     */\n    public use(painters: Painter[]) {\n        this.activePainters = painters.slice()\n    }\n\n    public getAtlas(name: string): Atlas | null {\n        const { atlases } = this\n        return atlases.get(name) || null\n    }\n\n    public async createAtlas(params: IAtlasParams): Promise<Atlas> {\n        const { name } = params\n        const atlas = new Atlas(this.gl, name)\n        this.atlases.set(name, atlas)\n        await atlas.load(params)\n        return atlas\n    }\n\n    public destroyAtlas(name: string): boolean {\n        const { atlases } = this\n        const atlas = atlases.get(name)\n        if (!atlas) { return false }\n        atlases.delete(name)\n        atlas.destroy()\n        return true\n    }\n\n    /**\n     * @hidden\n     * If a painter with the same name already exists, return false and don't add the new one.\n     */\n    public $attachPainter(painter: Painter): boolean {\n        if (this.painters.has(painter.name)) { return false }\n        this.painters.set(painter.name, painter)\n        this.activePainters = this.activePainters\n            .filter( (p: Painter) => p.name)\n        this.activePainters.push(painter)\n        return true\n    }\n\n    /**\n     * @hidden\n     */\n    public $detachPainter(name: string): boolean {\n        if (this.painters.has(name)) { return false }\n        this.painters.delete(name)\n        this.activePainters = this.activePainters\n            .filter( (p: Painter) => p.name)\n        return true\n    }\n\n    /**\n     * Start rendering.\n     * When a frame is rendered, the function `onAnimation( time: number )` is called.\n     */\n    public start() {\n        if (this.isRendering) { return }\n        this.isRendering = true\n        window.requestAnimationFrame(this.render)\n    }\n\n    /**\n     * Stop rendering.\n     */\n    public stop() {\n        this.isRendering = false\n    }\n\n    private render = (time: number) => {\n        if (this.isRendering) { window.requestAnimationFrame(this.render) } else { return }\n\n        const { gl } = this\n        Resize(gl, this.resolution)\n\n        gl.clearDepth(-1)\n        gl.clear(gl.DEPTH_BUFFER_BIT)\n        gl.depthFunc(gl.GEQUAL)\n\n        try {\n            for (const painter of this.activePainters) {\n                painter.render(time)\n            }\n\n            const { onAnimation } = this\n            if (typeof onAnimation === \"function\") {\n                onAnimation(time)\n                \n                this.pointer.reset()\n            }\n        } catch (ex) {\n            console.error(ex)\n            this.stop()\n            console.error(\"###############################\")\n            console.error(\"# Rendering has been stopped! #\")\n            console.error(\"###############################\")\n        }\n    }\n}\n","/**\n * Fast color manipulations.\n * Attributes R  (red), G  (green), B  (blue), A  (alpha), H  (hue), S\n * (saturation), and L (luminance) are all floats between 0 and 1.\n */\nconst TOTO = \"useless\"\n\nexport default class Color {\n    public static isValid(codeCSS: string) {\n        if ( typeof codeCSS !== \"string\" ) { return false }\n        if ( codeCSS.charAt(0) !== \"#\" ) { return false }\n        switch ( codeCSS.length ) {\n            case 4:  // #RGB\n            case 5:  // #RGBA\n            case 7:  // #RRGGBB\n            case 9:  // #RRGGBBAA\n                return true\n        }\n\n        return false\n    }\n\n    public static normalize(codeCSS: string) {\n        const color = new Color(codeCSS)\n        return color.stringify()\n    }\n\n    public static luminance(codeCSS: string) {\n        const color = new Color(codeCSS)\n        return color.luminance()\n    }\n\n    /**\n     * Returns 1 for bright colors and 0 for dark colors.\n     */\n    public static luminanceStep(codeCSS: string) {\n        const color = new Color(codeCSS)\n        return color.luminanceStep()\n    }\n\n    public static fromArrayRGB(rgb: [number, number, number]): Color {\n        const [R, G, B] = rgb\n        return this.newRGB(R, G, B)\n    }\n\n    public static fromArrayRGBA(rgba: [number, number, number, number]): Color {\n        const [R, G, B, A] = rgba\n        return this.newRGBA(R, G, B, A)\n    }\n\n    /**\n     * Mix two colors. alpha should be between 0 and 1,\n     * but there is no check on this.\n     * If alpha is 0, the resulting color is `color1`,\n     * if alpha is 1, the resulting color is `color2`.\n     */\n    public static mix(color1: Color, color2: Color, alpha: number= .5): Color {\n        const beta = 1 - alpha\n        return Color.newRGBA(\n            alpha * color2.R + beta * color1.R,\n            alpha * color2.G + beta * color1.G,\n            alpha * color2.B + beta * color1.B,\n            alpha * color2.A + beta * color1.A,\n        )\n    }\n\n    /**\n     * If `colors` has only two elements, this method is the same as `mix()`.\n     * Otherwise, it will perform a linear blending through the colors.\n     * If alpha is 0, the resulting color is `colors[0]`,\n     * If alpha is 1, the resulting color is `colors[colors.length - 1]`,\n     */\n    public static ramp(colors: Color[], alpha: number= .5): Color {\n        if (colors.length === 0) { return Color.newBlack() }\n        if (colors.length === 1) { return colors[0] }\n\n        const spacesCount = colors.length - 1\n        const firstColorIndex = Math.floor(alpha * spacesCount)\n        const color1 = colors[firstColorIndex]\n        if (firstColorIndex === spacesCount) { return color1 }\n        const color2 = colors[firstColorIndex + 1]\n        const translatedAlpha = firstColorIndex + alpha / spacesCount\n        return Color.mix(color1, color2, translatedAlpha)\n    }\n\n    public static newBlack() {\n        return Color.newRGB(0, 0, 0)\n    }\n\n    public static newWhite() {\n        return Color.newRGB(1, 1, 1)\n    }\n\n    /**\n     * Create a new Color instance base on R,G,B channels.\n     *\n     * @param   {number} red - Value between 0 and 1.\n     * @param   {number} green - Value between 0 and 1.\n     * @param   {number} blue - Value between 0 and 1.\n     * @returns {Color} New instance of Color.\n     */\n    public static newRGB(red: number, green: number, blue: number) {\n        const color = new Color()\n        color.R = red\n        color.G = green\n        color.B = blue\n        color.A = 1\n        return color\n    }\n\n    /**\n     * Create a new Color instance base on R,G,B,A channels.\n     *\n     * @param   {number} red - Value between 0 and 1.\n     * @param   {number} green - Value between 0 and 1.\n     * @param   {number} blue - Value between 0 and 1.\n     * @param   {number} alpha - Value between 0 and 1.\n     * @returns {Color} New instance of Color.\n     */\n    public static newRGBA(red: number, green: number, blue: number, alpha: number) {\n        const color = new Color()\n        color.R = red\n        color.G = green\n        color.B = blue\n        color.A = alpha\n        return color\n    }\n    public R: number\n    public G: number\n    public B: number\n    public H: number\n    public S: number\n    public L: number\n    public A: number\n\n    constructor(codeCSS: string = \"#000000\") {\n        this.R = 0\n        this.G = 0\n        this.B = 0\n        this.H = 0\n        this.S = 0\n        this.L = 0\n        this.A = 1\n\n        this.parse(codeCSS)\n    }\n\n    public toArrayRGB(): [number, number, number] {\n        return [this.R, this.G, this.B]\n    }\n\n    public toArrayRGBA(): [number, number, number, number] {\n        return [this.R, this.G, this.B, this.A]\n    }\n\n    /**\n     * Parse a color writtent in CSS syntax.\n     *\n     * @param   {string} code - CSS color.\n     * @returns {boolean} `true` if the color has valid syntax.\n     */\n    public parse(code: string = \"#000000\"): boolean {\n        const input = code.trim().toUpperCase()\n        if (this.parseHexa.call(this, input)) { return true }\n        if (this.parseRGB.call(this, input)) { return true }\n        if (this.parseRGBA.call(this, input)) { return true }\n        if (this.parseHSL.call(this, input)) { return true }\n        // @TODO parseHSLA.\n        return false\n    }\n\n    /**\n     * @see https://en.wikipedia.org/wiki/Grayscale\n     * @this Color\n     * @returns {undefined}\n     */\n    public luminance(): number {\n        return (0.2126 * this.R) + (0.7152 * this.G) + (0.0722 * this.B)\n    }\n\n    /**\n     * @returns {integer} 0 if the color is dark and 1 if it is light.\n     */\n    public luminanceStep(): number {\n        return this.luminance() < .6 ? 0 : 1\n    }\n\n    /**\n     * @this Color\n     * @returns {string} String value of the color. `#fd45a7`.\n     */\n    public stringify() {\n        let color = hexa2(this.R * 255) + hexa2(this.G * 255) + hexa2(this.B * 255)\n        if (this.A < 1) {\n            color += hexa2(this.A * 255)\n        }\n        return `#${color}`\n    }\n\n    public copy() {\n        const newColor = new Color()\n        newColor.R = this.R\n        newColor.G = this.G\n        newColor.B = this.B\n        newColor.A = this.A\n        newColor.H = this.H\n        newColor.S = this.S\n        newColor.L = this.L\n        return newColor\n    }\n\n    /**\n     * @see https://en.wikipedia.org/wiki/HSL_and_HSV#Converting_to_RGB\n     * @this Color\n     * @returns {undefined}\n     */\n    public hsl2rgb() {\n        const H = 6 * this.H\n        const S = this.S\n        const L = this.L\n        const chroma = (1 - Math.abs(2 * L - 1)) * S\n        const x = chroma * (1 - Math.abs(H % 2 - 1))\n\n        let R = 0\n        let G = 0\n        let B = 0\n\n        if (H < 3) {\n            if (H < 1) {\n                R = chroma; G = x; B = 0\n            } else if (H < 2) {\n                R = x; G = chroma; B = 0\n            } else {\n                // H == 2.\n                R = 0; G = chroma; B = x\n            }\n        } else if (H < 4) {\n            R = 0; G = x; B = chroma\n        } else if (H < 5) {\n            R = x; G = 0; B = chroma\n        } else {\n            R = chroma; G = 0; B = x\n        }\n\n        const shift = L - chroma * 0.5\n        this.R = R + shift\n        this.G = G + shift\n        this.B = B + shift\n    }\n\n    public rgb2hsl() {\n        const R = this.R\n        const G = this.G\n        const B = this.B\n\n        const min = Math.min(R, G, B)\n        const max = Math.max(R, G, B)\n        const delta = max - min\n\n        this.L = 0.5 * (max + min)\n\n        if (delta < 0.000001) {\n            this.H = 0\n            this.S = 0\n        } else {\n            this.S = delta / (1 - Math.abs(2 * this.L - 1))\n            if (max === R) {\n                if (G >= B) {\n                    this.H = INV6 * ((G - B) / delta)\n                } else {\n                    this.H = 1 - INV6 * ((B - G) / delta)\n                }\n            } else if (max === G) {\n                this.H = INV6 * (2 + (B - R) / delta)\n            } else {\n                this.H = INV6 * (4 + (R - G) / delta)\n            }\n        }\n    }\n\n    private parseHexa(text: string) {\n        if (text.charAt(0) !== \"#\") { return false }\n        let R = 0\n        let G = 0\n        let B = 0\n        let A = 1\n\n        switch (text.length) {\n            case 4:\n                R = parseInt(text.charAt(1), 16) * INV15\n                G = parseInt(text.charAt(2), 16) * INV15\n                B = parseInt(text.charAt(3), 16) * INV15\n                break\n            case 5:\n                R = parseInt(text.charAt(1), 16) * INV15\n                G = parseInt(text.charAt(2), 16) * INV15\n                B = parseInt(text.charAt(3), 16) * INV15\n                A = parseInt(text.charAt(4), 16) * INV15\n                break\n            case 7:\n                R = parseInt(text.substr(1, 2), 16) * INV255\n                G = parseInt(text.substr(3, 2), 16) * INV255\n                B = parseInt(text.substr(5, 2), 16) * INV255\n                break\n            case 9:\n                R = parseInt(text.substr(1, 2), 16) * INV255\n                G = parseInt(text.substr(3, 2), 16) * INV255\n                B = parseInt(text.substr(5, 2), 16) * INV255\n                A = parseInt(text.substr(7, 2), 16) * INV255\n                break\n            default:\n        }\n\n        if (isNaN(R) || isNaN(G) || isNaN(B) || isNaN(A)) {\n            this.R = this.G = this.B = this.A = 0\n        } else {\n            this.R = R\n            this.G = G\n            this.B = B\n            this.A = A\n        }\n\n        return true\n    }\n\n    /**\n     * @param   {string} text - `rgb(200, 140, 50)`\n     * @returns {boolean} `true` if `text` is a valid `rgb()` syntax.\n     */\n    private parseRGB(text: string) {\n        const m = RX_RGB.exec(text)\n        if (!m) { return false }\n        this.R = clamp01(parseInt(m[1], 10) * INV255)\n        this.G = clamp01(parseInt(m[2], 10) * INV255)\n        this.B = clamp01(parseInt(m[3], 10) * INV255)\n        this.A = 1\n        return true\n    }\n\n    /**\n     * @param   {string} text - `rgba(200, 140, 50, 0.5)`\n     * @returns {boolean} `true` if `text` is a valid `rgba()` syntax.\n     */\n    private parseRGBA(text: string) {\n        const m = RX_RGBA.exec(text)\n        if (!m) { return false }\n        this.R = clamp01(parseInt(m[1], 10) * INV255)\n        this.G = clamp01(parseInt(m[2], 10) * INV255)\n        this.B = clamp01(parseInt(m[3], 10) * INV255)\n        this.A = clamp01(parseFloat(m[4]))\n        return true\n    }\n\n    /**\n     * @param   {string} text - `hsl(200, 140, 50)`\n     * @returns {boolean} `true` if `text` is a valid `hsl()` syntax.\n     */\n    private parseHSL(text: string) {\n        const m = RX_HSL.exec(text)\n        if (!m) { return false }\n        this.H = clamp01(parseInt(m[1], 10) * INV359)\n        this.S = clamp01(parseInt(m[2], 10) * INV99)\n        this.L = clamp01(parseInt(m[3], 10) * INV99)\n        this.A = 1\n        this.hsl2rgb()\n        return true\n    }\n}\n\nconst INV6 = 1 / 6\nconst INV15 = 1 / 15\nconst INV99 = 1 / 99\nconst INV255 = 1 / 255\nconst INV359 = 1 / 359\n\nconst RX_RGB = /^RGB[\\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/\nconst RX_RGBA = /^RGBA[\\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)[^0-9.]+([0-9.]+)/\nconst RX_HSL = /^HSL[\\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/\n\nfunction clamp01(value: number): number {\n    if (value < 0) { return 0 }\n    if (value > 1) { return 1 }\n    return value\n}\n\nfunction hexa2(value: number) {\n    let out = Math.floor(value).toString(16)\n    if (out.length < 2) { out = \"0\" + out }\n    return out\n}\n","const BPE = (new Float32Array()).BYTES_PER_ELEMENT\r\n\r\nexport interface IShaders { vert: string, frag: string }\r\n\r\ninterface IAttrib extends WebGLActiveInfo {\r\n    typeName: string,\r\n    length: number,\r\n    location: number\r\n}\r\ninterface IAttribsDic {\r\n    [key: string]: IAttrib\r\n}\r\ninterface IUniformsDic {\r\n    [key: string]: WebGLUniformLocation\r\n}\r\n\r\n/**\r\n * Creating  a  WebGL  program  for shaders  is  painful.  This  class\r\n * simplifies the process.\r\n *\r\n * @class Program\r\n *\r\n * Object properties starting with `$` are WebGL uniforms or attributes.\r\n * Uniforms behave as expected: you can read/write a value.\r\n * Attributes when read, return the location. And when written, enable/disabled\r\n * this attribute. So you read integers and writte booleans.\r\n *\r\n * @param gl - WebGL context.\r\n * @param codes  - Object  with two  mandatory attributes:  `vert` for\r\n * vertex shader and `frag` for fragment shader.\r\n * @param  includes  -  (optional)  If  defined,  the  `#include  foo`\r\n * directives  of  shaders   will  be  replaced  by   the  content  of\r\n * `includes.foo`.\r\n */\r\nexport default class Program {\r\n    public readonly gl: WebGLRenderingContext\r\n    public readonly BPE: number\r\n    public readonly program: WebGLProgram\r\n    public readonly attribs: IAttribsDic\r\n    public readonly uniforms: IUniformsDic\r\n    private _typesNamesLookup: {[key: number]: string}\r\n\r\n    constructor(gl: WebGLRenderingContext,\r\n                codes: IShaders,\r\n                includes: { [key: string]: string } = {}) {\r\n        if (typeof codes.vert !== \"string\") {\r\n            throw Error(\"[webgl.program] Missing attribute `vert` in argument `codes`!\")\r\n        }\r\n        if (typeof codes.frag !== \"string\") {\r\n            throw Error(\"[webgl.program] Missing attribute `frag` in argument `codes`!\")\r\n        }\r\n\r\n        codes = parseIncludes(codes, includes)\r\n\r\n        this.gl = gl\r\n        Object.freeze(this.gl)\r\n        this.BPE = BPE\r\n        Object.freeze(this.BPE)\r\n\r\n        this._typesNamesLookup = getTypesNamesLookup(gl)\r\n\r\n        const shaderProgram = gl.createProgram()\r\n        if (!shaderProgram) {\r\n            throw Error(\"Unable to create WebGLProgram!\")\r\n        }\r\n        this.program = shaderProgram\r\n        const vertShader = getVertexShader(gl, codes.vert)\r\n        gl.attachShader(shaderProgram, vertShader)\r\n        const fragShader = getFragmentShader(gl, codes.frag)\r\n        gl.attachShader(shaderProgram, fragShader)\r\n        gl.linkProgram(shaderProgram)\r\n\r\n        this.use = () => { gl.useProgram(shaderProgram) }\r\n\r\n        this.attribs = this.createAttributes()\r\n        this.uniforms = this.createUniforms()\r\n    }\r\n\r\n    public use() {\r\n        this.gl.useProgram(this.program)\r\n    }\r\n\r\n    public getTypeName(typeId: number) {\r\n        return this._typesNamesLookup[typeId]\r\n    }\r\n\r\n    public bindAttribs(buffer: WebGLBuffer, ...names: string[]) {\r\n        const that = this\r\n        const { gl } = this\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\r\n\r\n        let totalSize = 0\r\n        for (const name of names) {\r\n            const attrib = that.attribs[name]\r\n            if (!attrib) {\r\n                throw Error(\"Cannot find attribute \\\"\" + name + \"\\\"!\\n\" +\r\n                    \"It may be not active because unused in the shader.\\n\" +\r\n                    \"Available attributes are: \" +\r\n                    Object.keys(that.attribs).map((n) => {\r\n                        return '\"' + n + '\"'\r\n                    }).join(\", \") + ` (${that.attribs.length})`)\r\n            }\r\n            totalSize += (attrib.size * attrib.length) * BPE\r\n        }\r\n\r\n        let offset = 0\r\n        for (const name of names) {\r\n            const attrib = that.attribs[name]\r\n            gl.enableVertexAttribArray(attrib.location)\r\n            gl.vertexAttribPointer(\r\n                attrib.location,\r\n                attrib.size * attrib.length,\r\n                gl.FLOAT,\r\n                false, // No normalisation.\r\n                totalSize,\r\n                offset,\r\n            )\r\n            offset += (attrib.size * attrib.length) * BPE\r\n        }\r\n    }\r\n\r\n    public setUniform(name: string, value: any) {\r\n        const id = \"$\" + name\r\n        const map = this as {[key: string]: any}\r\n        map[id] = value\r\n    }\r\n\r\n    private createAttributes(): IAttribsDic {\r\n        const { gl, program } = this\r\n        const attribs: IAttribsDic = {}\r\n        const attribsCount = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES)\r\n        for (let index = 0; index < attribsCount; index++) {\r\n            const item: IAttrib | null = gl.getActiveAttrib(program, index) as IAttrib\r\n            if (!item) { continue }\r\n            item.typeName = this.getTypeName(item.type)\r\n            item.length = this.getSize(gl, item)\r\n            item.location = gl.getAttribLocation(program, item.name)\r\n            attribs[item.name] = item\r\n            Object.defineProperty(this, \"$\" + item.name, {\r\n                value: item.location,\r\n                writable: false,\r\n                enumerable: true,\r\n                configurable: false,\r\n            })\r\n        }\r\n        return attribs\r\n    }\r\n\r\n    private getSize(gl: WebGLRenderingContext, item: IAttrib): number {\r\n        switch (item.type) {\r\n            case gl.FLOAT_VEC4:\r\n                return 4\r\n            case gl.FLOAT_VEC3:\r\n                return 3\r\n            case gl.FLOAT_VEC2:\r\n                return 2\r\n            case gl.FLOAT:\r\n                return 1\r\n            default:\r\n                throw Error(\"[webgl.program:getSize] I don't know the size of the attribute '\" + item.name +\r\n                    \"' because I don't know the type \" + this.getTypeName(item.type) + \"!\")\r\n        }\r\n    }\r\n\r\n    private createUniforms(): IUniformsDic {\r\n        const { gl, program } = this\r\n        const uniforms: IUniformsDic = {}\r\n        const uniformsCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS)\r\n        for (let index = 0; index < uniformsCount; index++) {\r\n            const item = gl.getActiveUniform(program, index)\r\n            if (!item) { continue }\r\n            const location = gl.getUniformLocation(program, item.name)\r\n            if (!location) { continue }\r\n            uniforms[item.name] = location\r\n            Object.defineProperty(this, \"$\" + item.name, {\r\n                set: this.createUniformSetter(item, uniforms[item.name], this._typesNamesLookup),\r\n                get: this.createUniformGetter(item),\r\n                enumerable: true,\r\n                configurable: false,\r\n            })\r\n        }\r\n\r\n        return uniforms\r\n    }\r\n\r\n    private createUniformSetter(item: WebGLActiveInfo,\r\n                                nameGL: WebGLUniformLocation,\r\n                                lookup: {[key: number]: string}) {\r\n        const { gl } = this\r\n        const nameJS = \"_$\" + item.name\r\n\r\n        switch (item.type) {\r\n            case gl.BYTE:\r\n            case gl.UNSIGNED_BYTE:\r\n            case gl.SHORT:\r\n            case gl.UNSIGNED_SHORT:\r\n            case gl.INT:\r\n            case gl.UNSIGNED_INT:\r\n            case gl.SAMPLER_2D: // For textures, we specify the texture unit.\r\n                if (item.size === 1) {\r\n                    return function(this: {[key: string]: number}, v: number) {\r\n                        gl.uniform1i(nameGL, v)\r\n                        this[nameJS] = v\r\n                    }\r\n                } else {\r\n                    return function(this: {[key: string]: Int32List}, v: Int32List) {\r\n                        gl.uniform1iv(nameGL, v)\r\n                        this[nameJS] = v\r\n                    }\r\n                }\r\n            case gl.FLOAT:\r\n                if (item.size === 1) {\r\n                    return function(this: {[key: string]: number}, v: number) {\r\n                        gl.uniform1f(nameGL, v)\r\n                        this[nameJS] = v\r\n                    }\r\n                } else {\r\n                    return function(this: {[key: string]: Float32List}, v: Float32List) {\r\n                        gl.uniform1fv(nameGL, v)\r\n                        this[nameJS] = v\r\n                    }\r\n                }\r\n            case gl.FLOAT_VEC2:\r\n                if (item.size === 1) {\r\n                    return function(this: {[key: string]: Float32List}, v: Float32List) {\r\n                        gl.uniform2fv(nameGL, v)\r\n                        this[nameJS] = v\r\n                    }\r\n                } else {\r\n                    throw Error(\r\n                        \"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_VEC2 in uniform `\" +\r\n                        item.name + \"'!'\",\r\n                    )\r\n                }\r\n            case gl.FLOAT_VEC3:\r\n                if (item.size === 1) {\r\n                    return function(this: {[key: string]: Float32List}, v: Float32List) {\r\n                        gl.uniform3fv(nameGL, v)\r\n                        this[nameJS] = v\r\n                    }\r\n                } else {\r\n                    throw Error(\r\n                        \"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_VEC3 in uniform `\" +\r\n                        item.name + \"'!'\",\r\n                    )\r\n                }\r\n            case gl.FLOAT_VEC4:\r\n                if (item.size === 1) {\r\n                    return function(this: {[key: string]: Float32List}, v: Float32List) {\r\n                        gl.uniform4fv(nameGL, v)\r\n                        this[nameJS] = v\r\n                    }\r\n                } else {\r\n                    throw Error(\r\n                        \"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_VEC4 in uniform `\" +\r\n                        item.name + \"'!'\",\r\n                    )\r\n                }\r\n            case gl.FLOAT_MAT3:\r\n                if (item.size === 1) {\r\n                    return function(this: {[key: string]: Float32List}, v: Float32List) {\r\n                        gl.uniformMatrix3fv(nameGL, false, v)\r\n                        this[nameJS] = v\r\n                    }\r\n                } else {\r\n                    throw Error(\r\n                        \"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_MAT3 in uniform `\" +\r\n                        item.name + \"'!'\",\r\n                    )\r\n                }\r\n            case gl.FLOAT_MAT4:\r\n                if (item.size === 1) {\r\n                    return function(this: {[key: string]: Float32List}, v: Float32List) {\r\n                        gl.uniformMatrix4fv(nameGL, false, v)\r\n                        this[nameJS] = v\r\n                    }\r\n                } else {\r\n                    throw Error(\r\n                        \"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_MAT4 in uniform `\" +\r\n                        item.name + \"'!'\",\r\n                    )\r\n                }\r\n            default:\r\n                throw Error(\r\n                    \"[webgl.program.createWriter] Don't know how to deal with uniform `\" +\r\n                    item.name + \"` of type \" + lookup[item.type] + \"!\",\r\n                )\r\n        }\r\n    }\r\n\r\n    private createUniformGetter(item: WebGLActiveInfo) {\r\n        const name = \"_$\" + item.name\r\n        return function(this: {[key: string]: any}) {\r\n            return this[name]\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * This is a preprocessor for shaders.\r\n * Directives  `#include`  will be  replaced  by  the content  of  the\r\n * correspondent attribute in `includes`.\r\n */\r\nfunction parseIncludes(codes: IShaders, includes: { [key: string]: string }): IShaders {\r\n    return {\r\n        vert: parseInclude(codes.vert, includes),\r\n        frag: parseInclude(codes.frag, includes),\r\n    }\r\n}\r\n\r\nfunction parseInclude(code: string, includes: { [key: string]: string }): string {\r\n    return code.split(\"\\n\").map((line) => {\r\n        if (line.trim().substr(0, 8) !== \"#include\") { return line }\r\n        const pos = line.indexOf(\"#include\") + 8\r\n        let includeName = line.substr(pos).trim()\r\n        // We accept all this systaxes:\r\n        // #include foo\r\n        // #include 'foo'\r\n        // #include <foo>\r\n        // #include \"foo\"\r\n        if (\"'<\\\"\".indexOf(includeName.charAt(0)) > -1) {\r\n            includeName = includeName.substr(1, includeName.length - 2)\r\n        }\r\n        const snippet = includes[includeName]\r\n        if (typeof snippet !== \"string\") {\r\n            console.error(\"Include <\" + includeName + \"> not found in \", includes)\r\n            throw Error(\"Include not found in shader: \" + includeName)\r\n        }\r\n        return snippet\r\n    }).join(\"\\n\")\r\n}\r\n\r\nfunction getShader(type: number, gl: WebGLRenderingContext, code: string): WebGLShader {\r\n    if (type !== gl.VERTEX_SHADER && type !== gl.FRAGMENT_SHADER) {\r\n        throw Error(\"Type must be VERTEX_SHADER or FRAGMENT_SHADER!\")\r\n    }\r\n    const shader = gl.createShader(type)\r\n    if (!shader) {\r\n        throw Error(`Unable to create a ${type === gl.VERTEX_SHADER ? \"VERTEX\" : \"FRAGMENT\"} shader!`)\r\n    }\r\n    gl.shaderSource(shader, code)\r\n    gl.compileShader(shader)\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n        console.info(\"Here is your buggy shader's code:\")\r\n        console.info(code)\r\n        console.error(\"An error occurred compiling the shader: \" + gl.getShaderInfoLog(shader))\r\n        throw Error(`Unable to create a ${type === gl.VERTEX_SHADER ? \"VERTEX\" : \"FRAGMENT\"} shader!`)\r\n    }\r\n\r\n    return shader\r\n}\r\n\r\nfunction getFragmentShader(gl: WebGLRenderingContext, code: string) {\r\n    return getShader(gl.FRAGMENT_SHADER, gl, code)\r\n}\r\n\r\nfunction getVertexShader(gl: WebGLRenderingContext, code: string) {\r\n    return getShader(gl.VERTEX_SHADER, gl, code)\r\n}\r\n\r\nfunction getTypesNamesLookup(gl: WebGLRenderingContext): {} {\r\n    const lookup: {[key: number]: string} = {}\r\n\r\n    for (const k in gl) {\r\n        if (k !== k.toUpperCase()) { continue }\r\n        const v = (gl as {[key: string]: any})[k]\r\n        if (typeof v === \"number\") {\r\n            lookup[v] = k\r\n        }\r\n    }\r\n    return lookup\r\n}\r\n","/**\r\n * Resolution in CSS pixels. If omitted, the real resolution\r\n * of the device is taken. On smartphones, for instance,\r\n * the resolution is often greater than 1.\r\n *\r\n * Return `true` if the size has changed.\r\n */\r\nexport default ( gl: WebGLRenderingContext, resolution: number = 0 ) => {\r\n    if (resolution <= 0) {\r\n        resolution = window.devicePixelRatio\r\n    }\r\n\r\n    const canvas = gl.canvas as HTMLCanvasElement\r\n    const displayWidth = Math.floor( canvas.clientWidth * resolution )\r\n    const displayHeight = Math.floor( canvas.clientHeight * resolution )\r\n\r\n    // Check if the canvas is not the same size.\r\n    if ( canvas.width !== displayWidth ||\r\n        canvas.height !== displayHeight ) {\r\n\r\n        // Make the canvas the same size\r\n        canvas.width = displayWidth\r\n        canvas.height = displayHeight\r\n        gl.viewport( 0, 0, displayWidth, displayHeight )\r\n        return true\r\n    }\r\n    return false\r\n}\r\n"],"sourceRoot":""}