{"version":3,"sources":["view/button/button.tsx","view/button/index.ts","view/canvas/canvas.tsx","view/page/page.tsx","view/page/index.ts","App.tsx","serviceWorker.ts","index.tsx","page/tutorial/background/background.tsx","page/tutorial/background/background-pre.md","page/tutorial/background/background-code.md","page/tutorial/background/background.jpg","../../flat-land-gl/lib/calc.js","../../flat-land-gl/lib/camera/camera.js","../../flat-land-gl/lib/camera/index.js","../../flat-land-gl/lib/camera/silly.js","../../flat-land-gl/lib/camera/cover-2d.js","../../flat-land-gl/lib/converter/string.js","../../flat-land-gl/lib/webgl/program.js","../../flat-land-gl/lib/painter/painter.js","../../flat-land-gl/lib/painter/background/background.js","../../flat-land-gl/lib/webgl/color.js","../../flat-land-gl/lib/painter/clear.js","../../flat-land-gl/lib/painter/sprites/virtual-sprite.js","../../flat-land-gl/lib/painter/sprites/quad.js","../../flat-land-gl/lib/painter/sprites/sprite.js","../../flat-land-gl/lib/painter/sprites/sprites.js","../../flat-land-gl/lib/painter/sprites/sprites.vert","../../flat-land-gl/lib/painter/sprites/sprites.frag","../../flat-land-gl/lib/painter/voronoi/voronoi.js","../../flat-land-gl/lib/painter/index.js","../../flat-land-gl/lib/painter/voronoi/voronoi.frag","../../flat-land-gl/lib/painter/voronoi/voronoi.vert","../../flat-land-gl/lib/atlas.js","../../flat-land-gl/lib/pointer.js","../../flat-land-gl/lib/webgl/resize.js","../../flat-land-gl/lib/scene.js","../../flat-land-gl/lib/index.js"],"names":["Button","handleClick","console","log","props","onClick","className","this","label","React","Component","Canvas","ref","createRef","canvas","current","init","Page","handleToggle","info","state","setState","visible","preContent","codeContent","postContent","join","window","history","back","title","onLoad","options","forceBlock","languages","App","href","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","scene","FlatLand","Scene","atlas","createAtlas","image","Background","background","Painter","align","use","start","module","exports","MODULO","FULL_TURN","COS","Float32Array","SIN","i","Math","PI","cos","sin","angle","clamp","v","min","max","Camera","prototype","getShaderIncludes","_this","cameraUniforms","Object","keys","glslUniforms","map","key","cameraFunction","glslFunction","Silly","_super","apply","arguments","defineProperty","get","enumerable","configurable","setUniformValues","Cover2D","params","call","zoom","x","y","size","uniCameraInvertedScale","uniCameraScaleX","uniCameraScaleY","uniCameraX","uniCameraY","toFixed","prg","width","height","uniforms","invertedScale","castString","value","defaultValue","t","isNaN","BPE","BYTES_PER_ELEMENT","Program","gl","_codes","includes","e_1","_a","codes","vert","parseInclude","frag","parseIncludes","freeze","_typesNamesLookup","lookup","k","toUpperCase","getTypesNamesLookup","shaderProgram","createProgram","Error","program","vertShader","code","getShader","VERTEX_SHADER","getVertexShader","attachShader","fragShader","FRAGMENT_SHADER","getFragmentShader","linkProgram","useProgram","attribs","createAttributes","uniformsLocation","createUniformsLocation","_b","_c","next","done","name_1","e_1_1","error","return","getTypeName","typeId","bindAttribs","buffer","e_2","e_3","names","_i","length","that","bindBuffer","ARRAY_BUFFER","totalSize","names_1","names_1_1","name_2","attrib","n","String","e_2_1","offset","names_2","names_2_1","name_3","enableVertexAttribArray","vertexAttribPointer","FLOAT","e_3_1","setUniform","name","uniformsName","attribsCount","getProgramParameter","ACTIVE_ATTRIBUTES","index","item","getActiveAttrib","typeName","type","getSize","getAttribLocation","writable","FLOAT_VEC4","FLOAT_VEC3","FLOAT_VEC2","uniformsCount","ACTIVE_UNIFORMS","getActiveUniform","name_4","sanitizeUniformName","location_1","getUniformLocation","set","createUniformSetter","createUniformGetter","nameGL","nameJS","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","SAMPLER_2D","uniform1i","uniform1iv","uniform1f","uniform1fv","uniform2fv","uniform3fv","uniform4fv","FLOAT_MAT3","uniformMatrix3fv","FLOAT_MAT4","uniformMatrix4fv","split","line","trim","startsWith","pos","indexOf","includeName","substr","charAt","snippet","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errorMessage","getShaderInfoLog","lines","unshift","RX_ERROR_MESSAGE","lastIndex","matcher","exec","lineNumber","Number","firstLine","lastLine","outputLines","push","geCodeSection","_programs","_scene","internalDestroy","initialize","shaders","fatal","message","deleteProgram","BackgroundPainter","buff","enable","DEPTH_TEST","activate","$uniTexture","drawArrays","TRIANGLE_STRIP","destroy","deleteBuffer","FRAG","getVert","createBuffer","bufferData","STATIC_DRAW","CODE_CSS_LENGTHS","RX_HEX_COLOR","Color","codeCSS","R","G","B","H","S","L","A","parse","isValid","test","CODE_CSS_LENGTHS_1","CODE_CSS_LENGTHS_1_1","len","normalize","stringify","luminance","luminanceStep","fromArrayRGB","rgb","newRGB","fromArrayRGBA","rgba","newRGBA","mix","color1","color2","alpha","beta","ramp","colors","newBlack","spacesCount","firstColorIndex","floor","translatedAlpha","newWhite","red","green","blue","color","toArrayRGB","toArrayRGBA","input","parseHexa","parseRGB","parseRGBA","parseHSL","hexa2","copy","newColor","hsl2rgb","chroma","abs","shift","rgb2hsl","delta","INV6","text","parseInt","INV15","INV255","m","RX_RGB","clamp01","RX_RGBA","parseFloat","RX_HSL","INV359","INV99","out","toString","ClearPainter","_red","_green","_blue","_alpha","cssColor","clearColor","clear","COLOR_BUFFER_BIT","VirtualSprite","id","data","update","$index","extra","_id","_data","_update","_destroy","Quad","_params","newParams","xTL","yTL","zTL","uTL","vTL","xTR","yTR","zTR","uTR","vTR","xBR","yBR","zBR","uBR","vBR","xBL","yBL","zBL","uBL","vBL","Sprite","z","originX","originY","u0","v0","u1","v1","scale","xxA","yyA","xxB","yyB","xxC","yyC","xxD","yyD","xA","yA","xB","yB","xC","yC","xD","yD","C","BLOCK","NB_ELEMS","NB_CORNERS","CHUNK","globalID","SpritesPainter","_capacity","_dataVert","_sprites","sprite","_allocate","_deferedSpritesUpdate","lastSprite","pop","_atlas","_camera","camera","Map","createSprite","createQuad","count","_allocateNewBlock","_buffElem","ELEMENT_ARRAY_BUFFER","createElements","DYNAMIC_DRAW","dataVert","time","_prg","_buffVert","drawElements","TRIANGLES","buffVert","buffElem","manageDeferedSpritesUpdates","values","_d","CORNER_B","CORNER_C","CORNER_D","capacity","dataElem","Uint16Array","a","b","c","d","randomArray","arr","random","Clear","Sprites","Voronoi","VoronoiPainter","seeds","border","light","scaleX","scaleY","thickness","Atlas","_name","_ready","_width","_height","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","deleteTexture","unit","UNITS","TEXTURE0","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","activeTexture","refresh","load","sent","loadImage","loadCanvas","url","Promise","resolve","reject","img","Image","onload","texImage2D","RGBA","onerror","src","Pointer","_x","_y","_down","_downTime","_eventDown","_eventUp","onMouseMove","evt","computeCoords","clientX","clientY","onTouchMove","te","touches","onMouseDown","onDown","onTouchStart","onMouseUp","onUp","onTouchEnd","addEventListener","reset","Date","now","pointerX","pointerY","rect","getBoundingClientRect","left","top","w","h","_resolution","resolution","devicePixelRatio","HTMLCanvasElement","displayWidth","clientWidth","displayHeight","clientHeight","viewport","ID","onAnimation","activePainters","isRendering","lastRenderingTime","requestAnimationFrame","clearDepth","DEPTH_BUFFER_BIT","depthFunc","GEQUAL","pointer","ex","stop","_pointer","getContext","_gl","atlases","drawingBufferWidth","drawingBufferHeight","painters","painters_1","painters_1_1","slice","getAtlas","sanitizedName","getNewName","createAtlasAsync","createAtlasesAsync","atlasNames","promises","atlasNames_1","atlasNames_1_1","atlasName","atlasParam","all","result","destroyAtlas","delete","has","IScene","Calc"],"mappings":"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","file":"static/js/background.58fb98f4.6719f8ac.chunk.js","sourcesContent":["import React from \"react\"\n\nimport \"./button.css\"\n\ninterface IButtonProps {\n    label: string,\n    onClick: () => void\n}\n\nexport default class Button extends React.Component<IButtonProps, {}> {\n  private handleClick = () => {\n    console.log(\"Click!\")\n    this.props.onClick()\n  }\n\n  render() {\n    return (<button className=\"Button thm-ele-button thm-bgS\"\n                    onClick={this.handleClick}>{\n        this.props.label\n      }</button>)\n    }\n}\n","export { default } from './button'\n","import React from \"react\"\n\ninterface ICanvasProps {\n    init: (canvas: HTMLCanvasElement) => void\n}\n\nexport default class Canvas extends React.Component<ICanvasProps, {}> {\n    private readonly ref: React.RefObject<HTMLCanvasElement> = React.createRef();\n\n    componentDidMount() {\n        const canvas = this.ref.current\n        if (!canvas) return\n        this.props.init(canvas)\n    }\n\n    render() {\n        return (<canvas ref={this.ref} className=\"Canvas\"></canvas>)\n    }\n}\n","import React from \"react\"\n//import Icon from \"tfw/dist/view/icon\"\nimport Canvas from '../canvas'\nimport Markdown from 'markdown-to-jsx'\nimport { Highlight } from 'react-fast-highlight'\nimport Button from '../button'\nimport \"./page.css\"\n\ninterface TPageProps {\n    title: string,\n    preContent?: string,\n    codeContent?: string,\n    postContent?: string,\n    onLoad: (canvas: HTMLCanvasElement) => void\n}\ninterface TPageState {\n  visible: boolean\n}\n\nexport default class Page extends React.Component<TPageProps, TPageState> {\n  constructor( props: TPageProps ) {\n      super(props)\n      this.state = { visible: false }\n  }\n\n  private handleToggle = () => {\n    console.info(\"this.state=\", this.state);\n    this.setState({\n      visible: !this.state.visible\n    })\n  }\n\n  render() {\n    const { preContent, codeContent, postContent } = this.props\n    const classes = ['view-Page']\n\n    return (<div className={classes.join(' ')}>\n      <header className=\"thm-ele-nav thm-bgP\">\n        <Button label=\"back\" onClick={() => window.history.back()}/>\n        <div>{this.props.title}</div>\n        <Button label=\"doc.\" onClick={this.handleToggle}/>\n      </header>\n      <Canvas init={this.props.onLoad}/>\n      <div className={this.state.visible ? 'desc-show' : 'desc-hide'}>\n        {\n          preContent &&\n          <Markdown options={{ forceBlock: true }}>{preContent}</Markdown>\n        }\n        {\n          codeContent &&\n          <Highlight languages={['js']}>{\n            codeContent\n          }</Highlight>\n        }\n        {\n          postContent &&\n          <Markdown options={{ forceBlock: true }}>{postContent}</Markdown>\n        }\n      </div>\n    </div>)\n  }\n}\n","export { default } from './page'","import React from 'react';\nimport './App.css';\n\nconst App: React.FC = () => {\n    return (\n        <div className=\"App\">\n            <h1>Tutorials</h1>\n            <ul>\n                <li><a href=\"tutorial/clear.html\">Hello world!</a></li>\n                <li><a href=\"tutorial/background.html\">Scalable background</a></li>\n                <li><a href=\"tutorial/sprites-1.html\">Sprites</a></li>\n                <li><a href=\"tutorial/sprites-2.html\">Quads</a></li>\n                <li><a href=\"tutorial/voronoi.html\">Voronoi</a></li>\n            </ul>\n            <h1>Articles</h1>\n            <ul>\n                <li><a href=\"article/voronoi.html\">Voronoi</a></li>\n            </ul>\n    </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport FlatLand from 'flat-land-gl'\nimport Page from '../../../view/page'\nimport preContent from './background-pre.md'\nimport codeContent from './background-code.md'\nimport Background from './background.jpg'\nimport \"./background.css\"\n\n\nReactDOM.render(\n  <Page\n    title=\"Monochromatic background\"\n    preContent={preContent}\n    codeContent={codeContent}\n    onLoad={init}/>,\n  document.getElementById('root')\n)\n\n\nfunction init(canvas: HTMLCanvasElement) {\n    const scene = new FlatLand.Scene(canvas)\n    const atlas = scene.createAtlas({ image: Background })\n    const background = new FlatLand.Painter.Background({\n        atlas, align: \"BR\"\n    })\n    scene.use([background])\n    scene.start()\n}\n","export default \"Resize the browser to see how the background adapts.\\n----\\n\"","export default \"import url from \\\"./background.jpg\\\"\\n\\nconst scene = new FlatLand.Scene(canvas)\\nconst atlas = scene.createAtlas({ image: url })\\nconst background = new FlatLand.Painter.Background({\\n    atlas, align: \\\"BR\\\"\\n})\\nscene.use([ background ])\\nscene.start()\\n\"","module.exports = __webpack_public_path__ + \"static/media/background.086dcaef.jpg\";","// tslint:disable:no-bitwise\nvar FULL_TURN = 4096;\nvar MODULO = FULL_TURN - 1;\nvar HALF_TURN = 2048;\nvar COS = new Float32Array(FULL_TURN);\nvar SIN = new Float32Array(FULL_TURN); // Prepare acceleration table for COS and SIN.\n\nfor (var i = 0; i < FULL_TURN; i++) {\n  var angle = Math.PI * i / HALF_TURN;\n  COS[i] = Math.cos(angle);\n  SIN[i] = Math.sin(angle);\n}\n\nexport default {\n  cos: cos,\n  sin: sin,\n  clamp: clamp\n};\n/**\n * Fast cosine.\n * Angle is define between 0 and 4095.\n * * PI/2  <=>  1023\n * * PI  <=>  2047\n * * 3*PI/2  <=>  3071\n */\n\nfunction cos(angle) {\n  return COS[(angle | 0) & MODULO];\n}\n/**\n * Fast sine.\n * Angle is define between 0 and 4095.\n * * PI/2  <=>  1023\n * * PI  <=>  2047\n * * 3*PI/2  <=>  3071\n */\n\n\nfunction sin(angle) {\n  return SIN[(angle | 0) & MODULO];\n}\n/**\n * Force a number to stay between two bounds.\n */\n\n\nfunction clamp(v, min, max) {\n  if (min === void 0) {\n    min = 0;\n  }\n\n  if (max === void 0) {\n    max = 1;\n  }\n\n  if (v < min) return min;\n  if (v > max) return max;\n  return v;\n}","/**\n * The Camera is responsible of transforming World coordinates into Screen coordinates.\n * To do this, the Camera defines the following Vertex Shader function:\n *\n * ```glsl\n * vec4 worldPointToScreen(vec3 point)\n * ```\n *\n * And it can work only if the following attributes are defined:\n *\n * ```glsl\n * attribute float uniCanvasWidth;\n * attribute float uniCanvasHeight;\n * ```\n *\n * Because there is a lot of different cameras, they can need extra attributes.\n * That's why Camera provides two readonly properties:\n * * `glslUniforms`:\n * * `glslFunction`\n */\nvar Camera =\n/** @class */\nfunction () {\n  function Camera() {}\n\n  Camera.prototype.getShaderIncludes = function () {\n    var _this = this;\n\n    return {\n      cameraUniforms: Object.keys(this.glslUniforms).map(function (key) {\n        return \"uniform \" + _this.glslUniforms[key] + \" \" + key + \";\\n\";\n      }).join(\"\"),\n      cameraFunction: this.glslFunction\n    };\n  };\n\n  return Camera;\n}();\n\nexport default Camera;","import Silly from './silly';\nimport Cover2D from './cover-2d';\nexport default {\n  Silly: Silly,\n  Cover2D: Cover2D\n};","import { __extends } from \"tslib\";\nimport Camera from \"./camera\";\n/**\n * This Camera is silly because it does not transform coordinates.\n */\n\nvar Silly =\n/** @class */\nfunction (_super) {\n  __extends(Silly, _super);\n\n  function Silly() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(Silly.prototype, \"glslUniforms\", {\n    get: function get() {\n      return {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Silly.prototype, \"glslFunction\", {\n    get: function get() {\n      return \"vec4 worldPointToScreen(vec3 point) {\\n    return vec4(point, 1.0);\\n}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Silly.prototype.setUniformValues = function () {};\n\n  return Silly;\n}(Camera);\n\nexport default Silly;","import { __assign, __extends } from \"tslib\";\nimport Camera from \"./camera\";\n/**\n * The Camera is responsible of transforming World coordinates into Screen coordinates.\n * To do this, the Camera defines the following Vertex Shader function:\n *\n * ```glsl\n * vec4 worldPointToScreen(vec3 point)\n * ```\n *\n * And it can work only if the following attributes are defined:\n *\n * ```glsl\n * attribute float uniCanvasWidth;\n * attribute float uniCanvasHeight;\n * ```\n *\n * Because there is a lot of different cameras, they can need extra attributes.\n * That's why Camera provides two readonly properties:\n * * `glslUniforms`:\n * * `glslFunction`\n */\n\nvar Cover2D =\n/** @class */\nfunction (_super) {\n  __extends(Cover2D, _super);\n\n  function Cover2D(params) {\n    var _this = _super.call(this) || this;\n\n    _this.zoom = 1;\n    _this.x = 0;\n    _this.y = 0;\n    _this.params = __assign({\n      size: 1024\n    }, params);\n    return _this;\n  }\n\n  Object.defineProperty(Cover2D.prototype, \"glslUniforms\", {\n    get: function get() {\n      return {\n        uniCameraInvertedScale: \"float\",\n        uniCameraScaleX: \"float\",\n        uniCameraScaleY: \"float\",\n        uniCameraX: \"float\",\n        uniCameraY: \"float\"\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Cover2D.prototype, \"glslFunction\", {\n    get: function get() {\n      return \"vec4 worldPointToScreen(vec3 point) {\\n    return vec4((point.x - uniCameraX) * uniCameraScaleX,\\n                (point.y - uniCameraY) * uniCameraScaleY,\\n                point.z,\\n                /*uniCameraInvertedScale **/ \" + (this.params.size / 2).toFixed(1) + \");\\n}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @param prg - Attributes have to be set in this Program.\n   * @param width - Canvas Width.\n   * @param height - Canvas Height.\n   * @param time - Time of the rendered frame in milliseconds.\n   */\n\n  Cover2D.prototype.setUniformValues = function (prg, width, height) {\n    if (width > height) {\n      // Landscape.\n      prg.uniforms.uniCameraScaleX = 1;\n      prg.uniforms.uniCameraScaleY = width / height;\n    } else {\n      // Portrait.\n      prg.uniforms.uniCameraScaleX = height / width;\n      prg.uniforms.uniCameraScaleY = 1;\n    }\n\n    prg.uniforms.uniCameraX = this.x;\n    prg.uniforms.uniCameraY = this.y;\n    var zoom = this.zoom;\n\n    if (zoom === 0) {\n      prg.uniforms.uniCameraInvertedScale = 1;\n    } else {\n      var invertedScale = 1 / zoom;\n      prg.uniforms.uniCameraInvertedScale = invertedScale;\n    }\n  };\n\n  return Cover2D;\n}(Camera);\n\nexport default Cover2D;","// tslint:disable:no-any\n// tslint:disable:no-unsafe-any\nexport default function castString(value, defaultValue) {\n  if (defaultValue === void 0) {\n    defaultValue = '';\n  }\n\n  var t = typeof value;\n\n  if (t === 'number' && !isNaN(value)) {\n    return \"\" + value;\n  }\n\n  if (t === 'string') {\n    return value;\n  }\n\n  return defaultValue;\n}","import { __values } from \"tslib\";\nvar BPE = Float32Array.BYTES_PER_ELEMENT;\nvar DIM1 = 1;\nvar DIM2 = 2;\nvar DIM3 = 3;\nvar DIM4 = 4;\n/**\n * Creating  a  WebGL  program  for shaders  is  painful.  This  class\n * simplifies the process.\n *\n * @class Program\n *\n * Object properties starting with `$` are WebGL uniforms or attributes.\n * Uniforms behave as expected: you can read/write a value.\n * Attributes when read, return the location. And when written, enable/disabled\n * this attribute. So you read integers and writte booleans.\n *\n * @param gl - WebGL context.\n * @param codes  - Object  with two  mandatory attributes:  `vert` for\n * vertex shader and `frag` for fragment shader.\n * @param  includes  -  (optional)  If  defined,  the  `#include  foo`\n * directives  of  shaders   will  be  replaced  by   the  content  of\n * `includes.foo`.\n */\n\nvar Program =\n/** @class */\nfunction () {\n  function Program(gl, _codes, includes) {\n    var e_1, _a;\n\n    if (includes === void 0) {\n      includes = {};\n    }\n\n    var codes = parseIncludes(_codes, includes);\n    this.gl = gl;\n    Object.freeze(this.gl);\n    this.BPE = BPE;\n    Object.freeze(this.BPE);\n    this._typesNamesLookup = getTypesNamesLookup(gl);\n    var shaderProgram = gl.createProgram();\n\n    if (!shaderProgram) {\n      throw Error('Unable to create WebGLProgram!');\n    }\n\n    this.program = shaderProgram;\n    var vertShader = getVertexShader(gl, codes.vert);\n    gl.attachShader(shaderProgram, vertShader);\n    var fragShader = getFragmentShader(gl, codes.frag);\n    gl.attachShader(shaderProgram, fragShader);\n    gl.linkProgram(shaderProgram);\n\n    this.use = function () {\n      gl.useProgram(shaderProgram);\n    };\n\n    this.attribs = this.createAttributes();\n    this.uniforms = {};\n    this.uniformsLocation = this.createUniformsLocation();\n\n    try {\n      for (var _b = __values(Object.keys(codes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var name_1 = _c.value;\n        console.log(\">>> Shader: \", name_1);\n        console.log(codes[name_1]);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  }\n\n  Program.prototype.use = function () {\n    this.gl.useProgram(this.program);\n  };\n\n  Program.prototype.getTypeName = function (typeId) {\n    return this._typesNamesLookup[typeId];\n  };\n\n  Program.prototype.bindAttribs = function (buffer) {\n    var e_2, _a, e_3, _b;\n\n    var names = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      names[_i - 1] = arguments[_i];\n    }\n\n    var that = this;\n    var gl = this.gl;\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    var totalSize = 0;\n\n    try {\n      for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {\n        var name_2 = names_1_1.value;\n        var attrib = that.attribs[name_2];\n\n        if (!attrib) {\n          throw Error(\"Cannot find attribute \\\"\" + name_2 + \"!\\nIt may be not active because unused in the shader.\\nAvailable attributes are: \" + Object.keys(that.attribs).map(function (n) {\n            return \"\\\"\" + n + \"\\\"\";\n          }).join(', ') + \" (\" + String(that.attribs.length) + \")\");\n        }\n\n        totalSize += attrib.size * attrib.length * BPE;\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    var offset = 0;\n\n    try {\n      for (var names_2 = __values(names), names_2_1 = names_2.next(); !names_2_1.done; names_2_1 = names_2.next()) {\n        var name_3 = names_2_1.value;\n        var attrib = that.attribs[name_3];\n        gl.enableVertexAttribArray(attrib.location);\n        gl.vertexAttribPointer(attrib.location, attrib.size * attrib.length, gl.FLOAT, false, // No normalisation.\n        totalSize, offset);\n        offset += attrib.size * attrib.length * BPE;\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (names_2_1 && !names_2_1.done && (_b = names_2.return)) _b.call(names_2);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n\n  Program.prototype.setUniform = function (name, value) {\n    var _a = this,\n        uniforms = _a.uniforms,\n        uniformsLocation = _a.uniformsLocation;\n\n    if (typeof uniformsLocation[name] === 'undefined') {\n      console.error(\"Uniform \\\"\" + name + \"\\\" does not exist in this WebGL Program!\");\n      var uniformsName = Object.keys(uniformsLocation);\n\n      if (uniformsName.length === 0) {\n        console.error(\"Actually, this program has no uniform at all.\");\n      } else {\n        console.error(\"Available uniforms are:\", uniformsName.join(\", \"));\n      }\n\n      throw Error(\"Uniform \\\"\" + name + \"\\\" was ot found!\");\n    }\n\n    uniforms[name] = value;\n  };\n\n  Program.prototype.createAttributes = function () {\n    var _a = this,\n        gl = _a.gl,\n        program = _a.program;\n\n    var attribs = {};\n    var attribsCount = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (var index = 0; index < attribsCount; index++) {\n      var item = gl.getActiveAttrib(program, index);\n\n      if (!item) {\n        continue;\n      }\n\n      item.typeName = this.getTypeName(item.type);\n      item.length = this.getSize(gl, item);\n      item.location = gl.getAttribLocation(program, item.name);\n      attribs[item.name] = item;\n      Object.defineProperty(this, \"\" + item.name, {\n        value: item.location,\n        writable: false,\n        enumerable: true,\n        configurable: false\n      });\n    }\n\n    return attribs;\n  };\n\n  Program.prototype.getSize = function (gl, item) {\n    switch (item.type) {\n      case gl.FLOAT_VEC4:\n        return DIM4;\n\n      case gl.FLOAT_VEC3:\n        return DIM3;\n\n      case gl.FLOAT_VEC2:\n        return DIM2;\n\n      case gl.FLOAT:\n        return DIM1;\n\n      default:\n        throw Error(\"[webgl.program:getSize] I don't know the size of the attribute \\\"\" + item.name + \"\\\" because I don't know the type \\\"\" + this.getTypeName(item.type) + \"\\\"!\");\n    }\n  };\n\n  Program.prototype.createUniformsLocation = function () {\n    var _a = this,\n        gl = _a.gl,\n        program = _a.program,\n        uniforms = _a.uniforms;\n\n    var uniformsLocation = {};\n    var uniformsCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n    for (var index = 0; index < uniformsCount; index++) {\n      var item = gl.getActiveUniform(program, index);\n\n      if (!item) {\n        continue;\n      }\n\n      var name_4 = sanitizeUniformName(item.name);\n      var location_1 = gl.getUniformLocation(program, item.name);\n\n      if (!location_1) {\n        continue;\n      }\n\n      uniformsLocation[name_4] = location_1;\n      Object.defineProperty(uniforms, \"\" + name_4, {\n        set: this.createUniformSetter(item, uniformsLocation[name_4], this._typesNamesLookup),\n        get: this.createUniformGetter(item),\n        enumerable: true,\n        configurable: false\n      });\n    }\n\n    return uniformsLocation;\n  };\n\n  Program.prototype.createUniformSetter = function (item, nameGL, lookup) {\n    var gl = this.gl;\n    var name = sanitizeUniformName(item.name);\n    var nameJS = \"_\" + name;\n\n    switch (item.type) {\n      case gl.BYTE:\n      case gl.UNSIGNED_BYTE:\n      case gl.SHORT:\n      case gl.UNSIGNED_SHORT:\n      case gl.INT:\n      case gl.UNSIGNED_INT:\n      case gl.SAMPLER_2D:\n        // For textures, we specify the texture unit.\n        if (item.size === 1) {\n          return function (v) {\n            gl.uniform1i(nameGL, v);\n            this[nameJS] = v;\n          };\n        } else {\n          return function (v) {\n            gl.uniform1iv(nameGL, v);\n            this[nameJS] = v;\n          };\n        }\n\n      case gl.FLOAT:\n        if (item.size === 1) {\n          return function (v) {\n            gl.uniform1f(nameGL, v);\n            this[nameJS] = v;\n          };\n        } else {\n          return function (v) {\n            gl.uniform1fv(nameGL, v);\n            this[nameJS] = v;\n          };\n        }\n\n      case gl.FLOAT_VEC2:\n        if (item.size === 1) {\n          return function (v) {\n            gl.uniform2fv(nameGL, v);\n            this[nameJS] = v;\n          };\n        } else {\n          throw Error(\"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_VEC2 in uniform \\\"\" + item.name + \"\\\"!\");\n        }\n\n      case gl.FLOAT_VEC3:\n        if (item.size === 1) {\n          return function (v) {\n            gl.uniform3fv(nameGL, v);\n            this[nameJS] = v;\n          };\n        } else {\n          throw Error(\"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_VEC3 in uniform \\\"\" + item.name + \"\\\"!\");\n        }\n\n      case gl.FLOAT_VEC4:\n        if (item.size === 1) {\n          return function (v) {\n            gl.uniform4fv(nameGL, v);\n            this[nameJS] = v;\n          };\n        } else {\n          throw Error(\"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_VEC4 in uniform \\\"\" + item.name + \"\\\"!\");\n        }\n\n      case gl.FLOAT_MAT3:\n        if (item.size === 1) {\n          return function (v) {\n            gl.uniformMatrix3fv(nameGL, false, v);\n            this[nameJS] = v;\n          };\n        } else {\n          throw Error(\"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_MAT3 in uniform \\\"\" + item.name + \"\\\"!\");\n        }\n\n      case gl.FLOAT_MAT4:\n        if (item.size === 1) {\n          return function (v) {\n            gl.uniformMatrix4fv(nameGL, false, v);\n            this[nameJS] = v;\n          };\n        } else {\n          throw Error(\"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_MAT4 in uniform \\\"\" + item.name + \"\\\"!\");\n        }\n\n      default:\n        throw Error(\"[webgl.program.createWriter] Don't know how to deal with uniform \\\"\" + item.name + \"\\\" of type \" + lookup[item.type] + \"!\");\n    }\n  };\n\n  Program.prototype.createUniformGetter = function (item) {\n    var name = \"_\" + item.name;\n    return function () {\n      return this[name];\n    };\n  };\n\n  return Program;\n}();\n\nexport default Program;\n/**\n * This is a preprocessor for shaders.\n * Directives  `#include`  will be  replaced  by  the content  of  the\n * correspondent attribute in `includes`.\n */\n\nfunction parseIncludes(codes, includes) {\n  return {\n    vert: parseInclude(codes.vert, includes),\n    frag: parseInclude(codes.frag, includes)\n  };\n}\n\nfunction parseInclude(code, includes) {\n  return code.split('\\n').map(function (line) {\n    if (!line.trim().startsWith('#include')) {\n      return line;\n    }\n\n    var pos = line.indexOf('#include') + '#include'.length;\n    var includeName = line.substr(pos).trim(); // We accept all this systaxes:\n    // #include foo\n    // #include 'foo'\n    // #include <foo>\n    // #include \"foo\"\n\n    if ('\\'<\"'.indexOf(includeName.charAt(0)) > -1) {\n      includeName = includeName.substr(1, includeName.length - '<>'.length);\n    }\n\n    var snippet = includes[includeName];\n\n    if (typeof snippet !== 'string') {\n      console.error(\"Include <\" + includeName + \"> not found in \", includes);\n      throw Error(\"Include not found in shader: \" + includeName);\n    }\n\n    return snippet;\n  }).join('\\n');\n}\n\nfunction getShader(type, gl, code) {\n  if (type !== gl.VERTEX_SHADER && type !== gl.FRAGMENT_SHADER) {\n    throw Error('Type must be VERTEX_SHADER or FRAGMENT_SHADER!');\n  }\n\n  var shader = gl.createShader(type);\n\n  if (!shader) {\n    throw Error(\"Unable to create a \" + (type === gl.VERTEX_SHADER ? 'VERTEX' : 'FRAGMENT') + \" shader!\");\n  }\n\n  gl.shaderSource(shader, code);\n  gl.compileShader(shader);\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    var errorMessage = gl.getShaderInfoLog(shader) || \"NULL\";\n    console.error(\"An error occurred compiling the shader: \" + errorMessage); // tslint:disable-next-line:no-console\n\n    console.info(geCodeSection(code, errorMessage)); // tslint:disable-next-line:no-console\n\n    throw Error(\"Unable to create a \" + (type === gl.VERTEX_SHADER ? 'VERTEX' : 'FRAGMENT') + \" shader!\");\n  }\n\n  return shader;\n}\n\nfunction getFragmentShader(gl, code) {\n  return getShader(gl.FRAGMENT_SHADER, gl, code);\n}\n\nfunction getVertexShader(gl, code) {\n  return getShader(gl.VERTEX_SHADER, gl, code);\n}\n\nfunction getTypesNamesLookup(gl) {\n  var lookup = {};\n\n  for (var k in gl) {\n    if (k !== k.toUpperCase()) {\n      continue;\n    }\n\n    var v = gl[k];\n\n    if (typeof v === 'number') {\n      lookup[v] = k;\n    }\n  }\n\n  return lookup;\n}\n/**\n * For arrays, uniform names can be like this: \"lights[0]\".\n * This function will remove the \"[0]\" if it exist.\n */\n\n\nfunction sanitizeUniformName(name) {\n  var pos = name.indexOf(\"[\");\n  if (pos === -1) return name;\n  return name.substr(0, pos);\n}\n\nvar RX_ERROR_MESSAGE = /ERROR: ([0-9]+):([0-9]+):/g;\n/**\n * Return a portion of the code that is two lines before the error and two lines after.\n */\n\nfunction geCodeSection(code, errorMessage) {\n  var lines = code.split(/\\n\\r?/);\n  lines.unshift(\"\"); // Because lines numbers start at 1\n\n  RX_ERROR_MESSAGE.lastIndex = -1; // Reinit RegExp\n\n  var matcher = RX_ERROR_MESSAGE.exec(errorMessage);\n\n  if (!matcher) {\n    return code;\n  }\n\n  var lineNumber = Number(matcher[2]);\n  var firstLine = Math.max(1, lineNumber - 2);\n  var lastLine = Math.min(lines.length - 1, lineNumber + 2);\n  var outputLines = [];\n\n  for (var n = firstLine; n <= lastLine; n++) {\n    outputLines.push(n + \":    \" + lines[n]);\n  }\n\n  return outputLines.join(\"\\n\");\n}","import { __values } from \"tslib\";\nimport Program from '../webgl/program';\n\nvar Painter =\n/** @class */\nfunction () {\n  function Painter() {\n    this._programs = [];\n    this._scene = null;\n  }\n\n  Object.defineProperty(Painter.prototype, \"scene\", {\n    get: function get() {\n      return this._scene;\n    },\n    set: function set(scene) {\n      if (scene === this._scene) {\n        return;\n      }\n\n      if (this._scene) {\n        this.internalDestroy(this._scene);\n      }\n\n      this._scene = scene;\n\n      if (scene) {\n        this.initialize(scene);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Painter.prototype.createProgram = function (shaders, includes) {\n    if (includes === void 0) {\n      includes = {};\n    }\n\n    var scene = this._scene;\n\n    if (!scene) {\n      throw Error('This painter has no scene!\\ncreateProfram() should only be called from initialize().');\n    }\n\n    var prg = new Program(scene.gl, shaders, includes);\n\n    this._programs.push(prg);\n\n    return prg;\n  };\n\n  Painter.prototype.fatal = function (message) {\n    console.error(\"Fatal error in Painter:\", message);\n    return new Error(message);\n  };\n\n  Painter.prototype.internalDestroy = function (scene) {\n    var e_1, _a;\n\n    var gl = scene.gl;\n\n    try {\n      for (var _b = __values(this._programs), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var prg = _c.value;\n        gl.deleteProgram(prg);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  return Painter;\n}();\n\nexport default Painter;","/**\n * Background the screen by filling it with an image that covers it entirely.\n */\nimport { __extends } from \"tslib\";\nimport castString from '../../converter/string';\nimport Painter from '../painter';\nvar NB_VERTICES_IN_SQUARE = 4;\n\nvar BackgroundPainter =\n/** @class */\nfunction (_super) {\n  __extends(BackgroundPainter, _super);\n  /**\n   * params: { atlas, align }\n   * - align: if undefined, the background will be centered.\n   *          \"R\" means that the Right edge of the background is always visible.\n   *          \"L\" means the same for Left.\n   *          \"T\" for Top.\n   *          \"B\" for \"Bottom\".\n   */\n\n\n  function BackgroundPainter(params) {\n    var _this = _super.call(this) || this;\n\n    _this.params = params;\n    return _this;\n  }\n\n  BackgroundPainter.prototype.render = function () {\n    var _a = this,\n        scene = _a.scene,\n        prg = _a.prg,\n        atlas = _a.atlas,\n        buff = _a.buff;\n\n    if (!scene || !prg || !atlas || !buff) {\n      return;\n    }\n\n    var gl = scene.gl;\n    gl.enable(gl.DEPTH_TEST);\n    prg.use();\n    atlas.activate();\n    var uniforms = prg;\n    uniforms.$uniTexture = 0;\n    prg.setUniform('uniAspectRatio', scene.width / scene.height);\n    prg.bindAttribs(buff, 'attXY');\n    gl.bindBuffer(gl.ARRAY_BUFFER, buff);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, NB_VERTICES_IN_SQUARE);\n  };\n\n  BackgroundPainter.prototype.destroy = function (scene) {\n    var gl = scene.gl;\n    var buff = this.buff;\n\n    if (!buff) {\n      return;\n    }\n\n    gl.deleteBuffer(buff);\n  };\n\n  BackgroundPainter.prototype.initialize = function (scene) {\n    var params = this.params;\n    var atlas = params.atlas;\n    this.atlas = atlas;\n    this.prg = this.createProgram({\n      frag: FRAG,\n      vert: getVert(castString(params.align).toUpperCase())\n    });\n    var gl = scene.gl;\n    var buff = gl.createBuffer();\n\n    if (!buff) {\n      throw this.fatal('Not enough memory to create an array buffer!');\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buff);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]), gl.STATIC_DRAW);\n    this.buff = buff;\n  };\n\n  return BackgroundPainter;\n}(Painter);\n\nexport default BackgroundPainter;\n\nfunction getVert(align) {\n  var x = '';\n  var y = '';\n\n  if (align.indexOf('B') !== -1) {\n    y = 'location.y -= uniAspectRatio - 1.0;';\n  } else if (align.indexOf('T') !== -1) {\n    y = 'location.y += uniAspectRatio - 1.0;';\n  }\n\n  if (align.indexOf('R') !== -1) {\n    x = 'location.x -= 1.0 / uniAspectRatio - 1.0;';\n  } else if (align.indexOf('L') !== -1) {\n    x = 'location.x += 1.0 / uniAspectRatio - 1.0;';\n  }\n\n  return \"uniform float uniAspectRatio;\\nattribute vec2 attXY;\\nvarying vec2 varUV;\\n\\nvoid main() {\\n  varUV = attXY;\\n  vec2 location = 2.0 * (attXY - vec2(0.5, 0.5));\\n\\n  if (uniAspectRatio > 1.0) {\\n    location.y *= uniAspectRatio;\" + y + \"\\n  } else {\\n    location.x /= uniAspectRatio;\" + x + \"\\n  }\\n\\n  gl_Position = vec4(location.x, -location.y, -1.0, 1.0);\\n}\";\n}\n\nvar FRAG = \"precision mediump float;\\nuniform sampler2D uniTexture;\\nvarying vec2 varUV;\\n\\nvoid main() {\\n  vec4 color = texture2D( uniTexture, varUV );\\n  gl_FragColor = color;\\n}\";","// tslint:disable:no-magic-numbers\n// tslint:disable:ban\nimport { __read, __values } from \"tslib\";\n/**\n * Fast color manipulations.\n * Attributes R  (red), G  (green), B  (blue), A  (alpha), H  (hue), S\n * (saturation), and L (luminance) are all floats between 0 and 1.\n */\n\nvar CODE_CSS_LENGTHS = ['#RGB'.length, '#RGBA'.length, '#RRGGBB'.length, '#RRGGBBAA'.length];\nvar RX_HEX_COLOR = /^#[0-9A-F]+$/gi;\nvar LUMINANCE_THRESHOLD = 0.6;\n\nvar Color =\n/** @class */\nfunction () {\n  function Color(codeCSS) {\n    if (codeCSS === void 0) {\n      codeCSS = '#000000';\n    }\n\n    this.R = 0;\n    this.G = 0;\n    this.B = 0;\n    this.H = 0;\n    this.S = 0;\n    this.L = 0;\n    this.A = 1;\n    this.parse(codeCSS);\n  }\n  /**\n   * A code CSS is valid if it starts with a '#' and has a length of 3, 4, 6 or 8.\n   */\n\n\n  Color.isValid = function (codeCSS) {\n    var e_1, _a;\n\n    RX_HEX_COLOR.lastIndex = -1;\n\n    if (!RX_HEX_COLOR.test(codeCSS)) {\n      return false;\n    }\n\n    try {\n      for (var CODE_CSS_LENGTHS_1 = __values(CODE_CSS_LENGTHS), CODE_CSS_LENGTHS_1_1 = CODE_CSS_LENGTHS_1.next(); !CODE_CSS_LENGTHS_1_1.done; CODE_CSS_LENGTHS_1_1 = CODE_CSS_LENGTHS_1.next()) {\n        var len = CODE_CSS_LENGTHS_1_1.value;\n\n        if (codeCSS.length === len) {\n          return true;\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (CODE_CSS_LENGTHS_1_1 && !CODE_CSS_LENGTHS_1_1.done && (_a = CODE_CSS_LENGTHS_1.return)) _a.call(CODE_CSS_LENGTHS_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return false;\n  };\n\n  Color.normalize = function (codeCSS) {\n    var color = new Color(codeCSS);\n    return color.stringify();\n  };\n\n  Color.luminance = function (codeCSS) {\n    var color = new Color(codeCSS);\n    return color.luminance();\n  };\n  /**\n   * Returns 1 for bright colors and 0 for dark colors.\n   */\n\n\n  Color.luminanceStep = function (codeCSS) {\n    var color = new Color(codeCSS);\n    return color.luminanceStep();\n  };\n\n  Color.fromArrayRGB = function (rgb) {\n    var _a = __read(rgb, 3),\n        R = _a[0],\n        G = _a[1],\n        B = _a[2];\n\n    return Color.newRGB(R, G, B);\n  };\n\n  Color.fromArrayRGBA = function (rgba) {\n    var _a = __read(rgba, 4),\n        R = _a[0],\n        G = _a[1],\n        B = _a[2],\n        A = _a[3];\n\n    return Color.newRGBA(R, G, B, A);\n  };\n  /**\n   * Mix two colors. alpha should be between 0 and 1,\n   * but there is no check on this.\n   * If alpha is 0, the resulting color is `color1`,\n   * if alpha is 1, the resulting color is `color2`.\n   */\n\n\n  Color.mix = function (color1, color2, alpha) {\n    if (alpha === void 0) {\n      alpha = 0.5;\n    }\n\n    var beta = 1 - alpha;\n    return Color.newRGBA(alpha * color2.R + beta * color1.R, alpha * color2.G + beta * color1.G, alpha * color2.B + beta * color1.B, alpha * color2.A + beta * color1.A);\n  };\n  /**\n   * If `colors` has only two elements, this method is the same as `mix()`.\n   * Otherwise, it will perform a linear blending through the colors.\n   * If alpha is 0, the resulting color is `colors[0]`,\n   * If alpha is 1, the resulting color is `colors[colors.length - 1]`,\n   */\n\n\n  Color.ramp = function (colors, alpha) {\n    if (alpha === void 0) {\n      alpha = 0.5;\n    }\n\n    if (colors.length === 0) {\n      return Color.newBlack();\n    }\n\n    if (colors.length === 1) {\n      return colors[0];\n    }\n\n    var spacesCount = colors.length - 1;\n    var firstColorIndex = Math.floor(alpha * spacesCount);\n    var color1 = colors[firstColorIndex];\n\n    if (firstColorIndex === spacesCount) {\n      return color1;\n    }\n\n    var color2 = colors[firstColorIndex + 1];\n    var translatedAlpha = firstColorIndex + alpha / spacesCount;\n    return Color.mix(color1, color2, translatedAlpha);\n  };\n\n  Color.newBlack = function () {\n    return Color.newRGB(0, 0, 0);\n  };\n\n  Color.newWhite = function () {\n    return Color.newRGB(1, 1, 1);\n  };\n  /**\n   * Create a new Color instance base on R,G,B channels.\n   *\n   * @param red - Value between 0 and 1.\n   * @param green - Value between 0 and 1.\n   * @param blue - Value between 0 and 1.\n   * @returns New instance of Color.\n   */\n\n\n  Color.newRGB = function (red, green, blue) {\n    var color = new Color();\n    color.R = red;\n    color.G = green;\n    color.B = blue;\n    color.A = 1;\n    return color;\n  };\n  /**\n   * Create a new Color instance base on R,G,B,A channels.\n   *\n   * @param red - Value between 0 and 1.\n   * @param green - Value between 0 and 1.\n   * @param blue - Value between 0 and 1.\n   * @param alpha - Value between 0 and 1.\n   * @returns New instance of Color.\n   */\n\n\n  Color.newRGBA = function (red, green, blue, alpha) {\n    var color = new Color();\n    color.R = red;\n    color.G = green;\n    color.B = blue;\n    color.A = alpha;\n    return color;\n  };\n\n  Color.prototype.toArrayRGB = function () {\n    return [this.R, this.G, this.B];\n  };\n\n  Color.prototype.toArrayRGBA = function () {\n    return [this.R, this.G, this.B, this.A];\n  };\n  /**\n   * Parse a color writtent in CSS syntax.\n   *\n   * @param code - CSS color.\n   * @returns `true` if the color has valid syntax.\n   */\n\n\n  Color.prototype.parse = function (code) {\n    if (code === void 0) {\n      code = '#000000';\n    }\n\n    var input = code.trim().toUpperCase();\n\n    if (this.parseHexa.call(this, input)) {\n      return true;\n    }\n\n    if (this.parseRGB.call(this, input)) {\n      return true;\n    }\n\n    if (this.parseRGBA.call(this, input)) {\n      return true;\n    }\n\n    if (this.parseHSL.call(this, input)) {\n      return true;\n    } // @TODO parseHSLA.\n\n\n    return false;\n  };\n  /**\n   * @see https://en.wikipedia.org/wiki/Grayscale\n   * @this Color\n   * @returns {undefined}\n   */\n\n\n  Color.prototype.luminance = function () {\n    var LUM_RED = 0.2126;\n    var LUM_GREEN = 0.7152;\n    var LUM_BLUE = 0.0722;\n    return LUM_RED * this.R + LUM_GREEN * this.G + LUM_BLUE * this.B;\n  };\n  /**\n   * @returns {integer} 0 if the color is dark and 1 if it is light.\n   */\n\n\n  Color.prototype.luminanceStep = function () {\n    return this.luminance() < LUMINANCE_THRESHOLD ? 0 : 1;\n  };\n  /**\n   * @this Color\n   * @returns String value of the color. `#fd45a7`.\n   */\n\n\n  Color.prototype.stringify = function () {\n    var FF = 0xFF;\n    var color = hexa2(this.R * FF) + hexa2(this.G * FF) + hexa2(this.B * FF);\n\n    if (this.A < 1) {\n      color += hexa2(this.A * FF);\n    }\n\n    return \"#\" + color;\n  };\n\n  Color.prototype.copy = function () {\n    var newColor = new Color();\n    newColor.R = this.R;\n    newColor.G = this.G;\n    newColor.B = this.B;\n    newColor.A = this.A;\n    newColor.H = this.H;\n    newColor.S = this.S;\n    newColor.L = this.L;\n    return newColor;\n  };\n  /**\n   * @see https://en.wikipedia.org/wiki/HSL_and_HSV#Converting_to_RGB\n   */\n\n\n  Color.prototype.hsl2rgb = function () {\n    var H = 6 * this.H;\n    var S = this.S;\n    var L = this.L;\n    var chroma = (1 - Math.abs(2 * L - 1)) * S;\n    var x = chroma * (1 - Math.abs(H % 2 - 1));\n    var R = 0;\n    var G = 0;\n    var B = 0;\n\n    if (H < 3) {\n      if (H < 1) {\n        R = chroma;\n        G = x;\n        B = 0;\n      } else if (H < 2) {\n        R = x;\n        G = chroma;\n        B = 0;\n      } else {\n        // H == 2.\n        R = 0;\n        G = chroma;\n        B = x;\n      }\n    } else if (H < 4) {\n      R = 0;\n      G = x;\n      B = chroma;\n    } else if (H < 5) {\n      R = x;\n      G = 0;\n      B = chroma;\n    } else {\n      R = chroma;\n      G = 0;\n      B = x;\n    }\n\n    var shift = L - chroma * 0.5;\n    this.R = R + shift;\n    this.G = G + shift;\n    this.B = B + shift;\n  };\n\n  Color.prototype.rgb2hsl = function () {\n    var R = this.R;\n    var G = this.G;\n    var B = this.B;\n    var min = Math.min(R, G, B);\n    var max = Math.max(R, G, B);\n    var delta = max - min;\n    this.L = 0.5 * (max + min);\n\n    if (delta < 0.000001) {\n      this.H = 0;\n      this.S = 0;\n    } else {\n      this.S = delta / (1 - Math.abs(2 * this.L - 1));\n\n      if (max === R) {\n        if (G >= B) {\n          this.H = INV6 * ((G - B) / delta);\n        } else {\n          this.H = 1 - INV6 * ((B - G) / delta);\n        }\n      } else if (max === G) {\n        this.H = INV6 * (2 + (B - R) / delta);\n      } else {\n        this.H = INV6 * (4 + (R - G) / delta);\n      }\n    }\n  };\n\n  Color.prototype.parseHexa = function (text) {\n    if (text.charAt(0) !== '#') {\n      return false;\n    }\n\n    var R = 0;\n    var G = 0;\n    var B = 0;\n    var A = 1;\n\n    switch (text.length) {\n      case 4:\n        R = parseInt(text.charAt(1), 16) * INV15;\n        G = parseInt(text.charAt(2), 16) * INV15;\n        B = parseInt(text.charAt(3), 16) * INV15;\n        break;\n\n      case 5:\n        R = parseInt(text.charAt(1), 16) * INV15;\n        G = parseInt(text.charAt(2), 16) * INV15;\n        B = parseInt(text.charAt(3), 16) * INV15;\n        A = parseInt(text.charAt(4), 16) * INV15;\n        break;\n\n      case 7:\n        R = parseInt(text.substr(1, 2), 16) * INV255;\n        G = parseInt(text.substr(3, 2), 16) * INV255;\n        B = parseInt(text.substr(5, 2), 16) * INV255;\n        break;\n\n      case 9:\n        R = parseInt(text.substr(1, 2), 16) * INV255;\n        G = parseInt(text.substr(3, 2), 16) * INV255;\n        B = parseInt(text.substr(5, 2), 16) * INV255;\n        A = parseInt(text.substr(7, 2), 16) * INV255;\n        break;\n\n      default:\n    }\n\n    if (isNaN(R) || isNaN(G) || isNaN(B) || isNaN(A)) {\n      this.R = this.G = this.B = this.A = 0;\n    } else {\n      this.R = R;\n      this.G = G;\n      this.B = B;\n      this.A = A;\n    }\n\n    return true;\n  };\n  /**\n   * @param text - `rgb(200, 140, 50)`\n   * @returns `true` if `text` is a valid `rgb()` syntax.\n   */\n\n\n  Color.prototype.parseRGB = function (text) {\n    var m = RX_RGB.exec(text);\n\n    if (!m) {\n      return false;\n    }\n\n    this.R = clamp01(parseInt(m[1], 10) * INV255);\n    this.G = clamp01(parseInt(m[2], 10) * INV255);\n    this.B = clamp01(parseInt(m[3], 10) * INV255);\n    this.A = 1;\n    return true;\n  };\n  /**\n   * @param text - `rgba(200, 140, 50, 0.5)`\n   * @returns `true` if `text` is a valid `rgba()` syntax.\n   */\n\n\n  Color.prototype.parseRGBA = function (text) {\n    var m = RX_RGBA.exec(text);\n\n    if (!m) {\n      return false;\n    }\n\n    this.R = clamp01(parseInt(m[1], 10) * INV255);\n    this.G = clamp01(parseInt(m[2], 10) * INV255);\n    this.B = clamp01(parseInt(m[3], 10) * INV255);\n    this.A = clamp01(parseFloat(m[4]));\n    return true;\n  };\n  /**\n   * @param text - `hsl(200, 140, 50)`\n   * @returns `true` if `text` is a valid `hsl()` syntax.\n   */\n\n\n  Color.prototype.parseHSL = function (text) {\n    var m = RX_HSL.exec(text);\n\n    if (!m) {\n      return false;\n    }\n\n    this.H = clamp01(parseInt(m[1], 10) * INV359);\n    this.S = clamp01(parseInt(m[2], 10) * INV99);\n    this.L = clamp01(parseInt(m[3], 10) * INV99);\n    this.A = 1;\n    this.hsl2rgb();\n    return true;\n  };\n\n  return Color;\n}();\n\nexport default Color;\nvar INV6 = 1 / 6;\nvar INV15 = 1 / 15;\nvar INV99 = 1 / 99;\nvar INV255 = 1 / 255;\nvar INV359 = 1 / 359;\nvar RX_RGB = /^RGB[\\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;\nvar RX_RGBA = /^RGBA[\\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)[^0-9.]+([0-9.]+)/;\nvar RX_HSL = /^HSL[\\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;\n\nfunction clamp01(value) {\n  if (value < 0) {\n    return 0;\n  }\n\n  if (value > 1) {\n    return 1;\n  }\n\n  return value;\n}\n\nfunction hexa2(value) {\n  var out = Math.floor(value).toString(16);\n\n  if (out.length < 2) {\n    out = \"0\" + out;\n  }\n\n  return out;\n}","import { __extends } from \"tslib\";\n/**\n * Clear the screen by filling it with a plain color.\n * This color is defined by attributes red, gree, blue and alpha, which must be between 0 and 1.\n */\n\nimport Color from '../webgl/color';\nimport Painter from './painter';\n\nvar ClearPainter =\n/** @class */\nfunction (_super) {\n  __extends(ClearPainter, _super);\n\n  function ClearPainter(params) {\n    var _this = _super.call(this) || this;\n\n    _this.params = params;\n    _this._red = 0.8;\n    _this._green = 0.4;\n    _this._blue = 0.2;\n    _this._alpha = 1;\n    return _this;\n  }\n\n  Object.defineProperty(ClearPainter.prototype, \"red\", {\n    get: function get() {\n      return this._red;\n    },\n    set: function set(v) {\n      this._red = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ClearPainter.prototype, \"green\", {\n    get: function get() {\n      return this._green;\n    },\n    set: function set(v) {\n      this._green = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ClearPainter.prototype, \"blue\", {\n    get: function get() {\n      return this._blue;\n    },\n    set: function set(v) {\n      this._blue = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ClearPainter.prototype, \"alpha\", {\n    get: function get() {\n      return this._alpha;\n    },\n    set: function set(v) {\n      this._alpha = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ClearPainter.prototype, \"color\", {\n    get: function get() {\n      var color = new Color();\n      color.R = this._red;\n      color.G = this._green;\n      color.B = this._blue;\n      color.A = this._alpha;\n      return color.stringify();\n    },\n    set: function set(cssColor) {\n      var color = new Color(cssColor);\n      this._red = color.R;\n      this._green = color.G;\n      this._blue = color.B;\n      this._alpha = color.A;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ClearPainter.prototype.render = function () {\n    var scene = this.scene;\n\n    if (!scene) {\n      return;\n    }\n\n    var gl = scene.gl;\n    gl.clearColor(this._red, this._green, this._blue, this._alpha);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n  };\n\n  ClearPainter.prototype.initialize = function () {\n    if (this.params) {\n      this.color = this.params.color || '#d72';\n    }\n  };\n\n  ClearPainter.prototype.destroy = function () {// Nothing to destroy for this painter.\n  };\n\n  return ClearPainter;\n}(Painter);\n\nexport default ClearPainter;","var VirtualSprite =\n/** @class */\nfunction () {\n  function VirtualSprite(id, data, update, destroy) {\n    this.$index = -1;\n    this.extra = {};\n    this._id = id;\n    this._data = data;\n    this._update = update;\n    this._destroy = destroy;\n  }\n\n  Object.defineProperty(VirtualSprite.prototype, \"id\", {\n    get: function get() {\n      return this._id;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  VirtualSprite.prototype.destroy = function () {\n    this._destroy(this);\n  };\n\n  return VirtualSprite;\n}();\n\nexport default VirtualSprite;","/**\n * Quads are actually any kind of quadrilaters.\n * Each corner has 5 attributes:\n * - x, y, z: space coords.\n * - u, v: atlas coords.\n *\n * They are suffixed with:\n * - TL: Top Left corner.\n * - TR: Top Right corner.\n * - BR: Bottom Right corner.\n * - BL: Bottom Left corner.\n */\nimport { __assign, __extends } from \"tslib\";\nimport VirtualSprite from \"./virtual-sprite\";\n\nvar Quad =\n/** @class */\nfunction (_super) {\n  __extends(Quad, _super);\n\n  function Quad(id, data, update, destroy, params) {\n    var _this = _super.call(this, id, data, update, destroy) || this;\n\n    _this._params = params;\n    return _this;\n  }\n\n  Quad.prototype.update = function (newParams) {\n    if (newParams) {\n      this._params = __assign(__assign({}, this._params), newParams);\n    }\n\n    var _a = this._params,\n        xTL = _a.xTL,\n        yTL = _a.yTL,\n        zTL = _a.zTL,\n        uTL = _a.uTL,\n        vTL = _a.vTL,\n        xTR = _a.xTR,\n        yTR = _a.yTR,\n        zTR = _a.zTR,\n        uTR = _a.uTR,\n        vTR = _a.vTR,\n        xBR = _a.xBR,\n        yBR = _a.yBR,\n        zBR = _a.zBR,\n        uBR = _a.uBR,\n        vBR = _a.vBR,\n        xBL = _a.xBL,\n        yBL = _a.yBL,\n        zBL = _a.zBL,\n        uBL = _a.uBL,\n        vBL = _a.vBL;\n    var data = this._data; // tslint:disable:no-magic-numbers\n\n    data[0] = xTL;\n    data[1] = yTL;\n    data[2] = zTL;\n    data[3] = uTL;\n    data[4] = vTL;\n    data[5] = xTR;\n    data[6] = yTR;\n    data[7] = zTR;\n    data[8] = uTR;\n    data[9] = vTR;\n    data[10] = xBR;\n    data[11] = yBR;\n    data[12] = zBR;\n    data[13] = uBR;\n    data[14] = vBR;\n    data[15] = xBL;\n    data[16] = yBL;\n    data[17] = zBL;\n    data[18] = uBL;\n    data[19] = vBL; // tslint:enable:no-magic-numbers\n\n    this._update(this, data);\n  };\n\n  return Quad;\n}(VirtualSprite);\n\nexport default Quad;","/**\n * Sprites management is complex because we must be able to add sprites\n * even for Painters that are not yet used in a Scene.\n */\nimport { __assign, __extends } from \"tslib\";\nimport Calc from '../../calc';\nimport VirtualSprite from \"./virtual-sprite\";\n\nvar Sprite =\n/** @class */\nfunction (_super) {\n  __extends(Sprite, _super);\n\n  function Sprite(id, data, update, destroy, params) {\n    var _this = _super.call(this, id, data, update, destroy) || this;\n\n    _this._params = params;\n    return _this;\n  }\n\n  Object.defineProperty(Sprite.prototype, \"x\", {\n    get: function get() {\n      return this._params.x;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sprite.prototype, \"y\", {\n    get: function get() {\n      return this._params.y;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sprite.prototype, \"z\", {\n    get: function get() {\n      return this._params.z;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sprite.prototype, \"width\", {\n    get: function get() {\n      return this._params.width;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sprite.prototype, \"height\", {\n    get: function get() {\n      return this._params.height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sprite.prototype, \"originX\", {\n    get: function get() {\n      return this._params.originX;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sprite.prototype, \"originY\", {\n    get: function get() {\n      return this._params.originY;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sprite.prototype, \"u0\", {\n    get: function get() {\n      return this._params.u0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sprite.prototype, \"v0\", {\n    get: function get() {\n      return this._params.v0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sprite.prototype, \"u1\", {\n    get: function get() {\n      return this._params.u1;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sprite.prototype, \"v1\", {\n    get: function get() {\n      return this._params.v1;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Sprite.prototype.update = function (newParams) {\n    if (newParams) {\n      this._params = __assign(__assign({}, this._params), newParams);\n    }\n\n    var _a = this._params,\n        x = _a.x,\n        y = _a.y,\n        z = _a.z,\n        originX = _a.originX,\n        originY = _a.originY,\n        width = _a.width,\n        height = _a.height,\n        u0 = _a.u0,\n        v0 = _a.v0,\n        u1 = _a.u1,\n        v1 = _a.v1,\n        scale = _a.scale,\n        angle = _a.angle;\n    var xxA = -originX;\n    var yyA = -originY;\n    var xxB = xxA + width;\n    var yyB = yyA;\n    var xxC = xxA + width;\n    var yyC = yyA + height;\n    var xxD = xxA;\n    var yyD = yyA + height;\n    var xA = xxA * scale;\n    var yA = yyA * scale;\n    var xB = xxB * scale;\n    var yB = yyB * scale;\n    var xC = xxC * scale;\n    var yC = yyC * scale;\n    var xD = xxD * scale;\n    var yD = yyD * scale; // tslint:disable-next-line:no-bitwise\n\n    if ((angle | 0) !== 0) {\n      var C = Calc.cos(angle);\n      var S = Calc.sin(angle);\n      xA = (xxA * C + yyA * S) * scale;\n      yA = (yyA * C - xxA * S) * scale;\n      xB = (xxB * C + yyB * S) * scale;\n      yB = (yyB * C - xxB * S) * scale;\n      xC = (xxC * C + yyC * S) * scale;\n      yC = (yyC * C - xxC * S) * scale;\n      xD = (xxD * C + yyD * S) * scale;\n      yD = (yyD * C - xxD * S) * scale;\n    }\n\n    var data = this._data; // tslint:disable:no-magic-numbers\n\n    data[0] = xA + x;\n    data[1] = yA + y;\n    data[2] = z;\n    data[3] = u0;\n    data[4] = v1;\n    data[5] = xB + x;\n    data[6] = yB + y;\n    data[7] = z;\n    data[8] = u1;\n    data[9] = v1;\n    data[10] = xC + x;\n    data[11] = yC + y;\n    data[12] = z;\n    data[13] = u1;\n    data[14] = v0;\n    data[15] = xD + x;\n    data[16] = yD + y;\n    data[17] = z;\n    data[18] = u0;\n    data[19] = v0; // tslint:enable:no-magic-numbers\n\n    this._update(this, data);\n  };\n\n  return Sprite;\n}(VirtualSprite);\n\nexport default Sprite;","import { __assign, __extends, __read, __values } from \"tslib\";\nimport Painter from '../painter';\nimport Quad from './quad';\nimport Sprite from './sprite';\nimport frag from './sprites.frag';\nimport vert from './sprites.vert'; // Allocations will be done by pieces of BLOCK Sprites.\n\nvar BLOCK = 64;\nvar NB_ATTRIBS = 5; // attXYZ and attUV.\n\nvar NB_ELEMS = 6; // Two triangles of 3 points to get a square.\n\nvar NB_CORNERS = 4;\nvar CHUNK = NB_ATTRIBS * NB_CORNERS;\nvar DEFAULT_WIDTH = 64;\nvar DEFAULT_HEIGHT = 64;\nvar HALF = 0.5;\nvar globalID = 1;\n\nvar SpritesPainter =\n/** @class */\nfunction (_super) {\n  __extends(SpritesPainter, _super);\n\n  function SpritesPainter(params) {\n    var _this = _super.call(this) || this;\n\n    _this._capacity = BLOCK;\n    _this._dataVert = new Float32Array(BLOCK * CHUNK); // We need to keep track of all the inserted sprites because when we want to destroy\n    // one, we wnat to exchange its position with the one at the end of the list for\n    // optimisation purpose.\n\n    _this._sprites = [];\n\n    _this._update = function (sprite, data) {\n      if (!_this.scene) {\n        // If this painter has not yet been initialized, then update has to be defered.\n        _this._deferedSpritesUpdate.set(sprite.id, [sprite, data]);\n\n        return;\n      }\n\n      if (sprite.$index < 0) {\n        _this._allocate(sprite);\n      }\n\n      _this._dataVert.set(data, CHUNK * sprite.$index);\n    };\n    /**\n     * Only called by an instance os Sprite.\n     */\n\n\n    _this._destroy = function (sprite) {\n      var lastSprite = _this._sprites.pop();\n\n      if (!lastSprite) {\n        console.error(\"You tried to destroy a Sprite that is not owned by this painter!\", sprite);\n        return;\n      }\n\n      var indexOfLastSprite = lastSprite.$index;\n\n      if (indexOfLastSprite !== sprite.$index) {\n        // Swap positions of destroyed sprite and last sprite in the list.\n        lastSprite.$index = sprite.$index;\n        _this._sprites[lastSprite.$index] = lastSprite;\n        lastSprite.update();\n      }\n\n      sprite.$index = -1;\n    };\n\n    _this._atlas = params.atlas;\n    _this._camera = params.camera;\n    _this._deferedSpritesUpdate = new Map();\n    return _this;\n  }\n\n  Object.defineProperty(SpritesPainter.prototype, \"atlas\", {\n    get: function get() {\n      return this._atlas;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SpritesPainter.prototype, \"count\", {\n    get: function get() {\n      return this._sprites.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Register a new sprite that will be immediatly visible.\n   */\n\n  SpritesPainter.prototype.createSprite = function (params) {\n    var atlas = this.atlas;\n    var width = atlas.width || DEFAULT_WIDTH;\n    var height = atlas.height || DEFAULT_HEIGHT;\n    var data = new Float32Array(CHUNK);\n    var sprite = new Sprite(\"\" + globalID++, data, this._update, this._destroy, __assign({\n      x: 0,\n      y: 0,\n      z: 0,\n      width: width,\n      height: height,\n      originX: width * HALF,\n      originY: width * HALF,\n      u0: 0,\n      v0: 0,\n      u1: 1,\n      v1: 1,\n      scale: 1,\n      angle: 0\n    }, params));\n    sprite.update();\n    return sprite;\n  };\n  /**\n   * Register a new sprite that will be immediatly visible.\n   */\n\n\n  SpritesPainter.prototype.createQuad = function (params) {\n    var data = new Float32Array(CHUNK);\n    var sprite = new Quad(\"\" + globalID++, data, this._update, this._destroy, __assign({\n      xTL: 0,\n      yTL: 0,\n      zTL: 0,\n      uTL: 0,\n      vTL: 0,\n      xTR: 1024,\n      yTR: 0,\n      zTR: 0,\n      uTR: 1,\n      vTR: 0,\n      xBR: 1024,\n      yBR: 1024,\n      zBR: 0,\n      uBR: 1,\n      vBR: 1,\n      xBL: 0,\n      yBL: 1024,\n      zBL: 0,\n      uBL: 0,\n      vBL: 1\n    }, params));\n    sprite.update();\n    return sprite;\n  };\n  /**\n   * Only called by an instance os Sprite.\n   */\n\n\n  SpritesPainter.prototype._allocate = function (sprite) {\n    if (this._capacity <= this.count) {\n      this._allocateNewBlock();\n    }\n\n    sprite.$index = this.count;\n\n    this._sprites.push(sprite);\n  };\n  /**\n   * When the number of sprites exceeds the current capacity, we must allocate a new BLOCK.\n   * This function cannot be called before painter initialization.\n   */\n\n\n  SpritesPainter.prototype._allocateNewBlock = function () {\n    this._capacity += BLOCK;\n\n    var _a = this,\n        scene = _a.scene,\n        _buffElem = _a._buffElem;\n\n    if (!scene) {\n      throw Error('No scene!');\n    }\n\n    if (!_buffElem) {\n      throw Error('No buffElem!');\n    }\n\n    var gl = scene.gl;\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, _buffElem);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, createElements(this._capacity), gl.DYNAMIC_DRAW);\n    var dataVert = new Float32Array(this._capacity * CHUNK);\n    dataVert.set(this._dataVert);\n    this._dataVert = dataVert;\n  };\n\n  SpritesPainter.prototype.render = function (time, delta) {\n    var _a = this,\n        scene = _a.scene,\n        _prg = _a._prg,\n        atlas = _a.atlas,\n        _buffVert = _a._buffVert,\n        _buffElem = _a._buffElem,\n        _camera = _a._camera;\n\n    if (!scene || !_prg || !atlas || !_buffVert || !_buffElem) {\n      return;\n    }\n\n    var gl = scene.gl; // Update sprites' attributes.\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, _buffVert);\n    gl.bufferData(gl.ARRAY_BUFFER, this._dataVert, gl.DYNAMIC_DRAW);\n    gl.enable(gl.DEPTH_TEST);\n\n    _prg.use();\n\n    _camera.setUniformValues(_prg, scene.width, scene.height, time, delta);\n\n    atlas.activate();\n    var uniforms = _prg;\n    uniforms.$uniTexture = 0;\n\n    _prg.bindAttribs(_buffVert, 'attXYZ', 'attUV');\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, _buffVert);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, _buffElem);\n    gl.drawElements(gl.TRIANGLES, NB_ELEMS * this.count, gl.UNSIGNED_SHORT, 0);\n  };\n\n  SpritesPainter.prototype.initialize = function (scene) {\n    this._prg = this.createProgram({\n      vert: vert,\n      frag: frag\n    }, this._camera.getShaderIncludes());\n    var gl = scene.gl;\n    var buffVert = gl.createBuffer();\n\n    if (!buffVert) {\n      throw this.fatal('Not enough memory to create an array buffer!');\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffVert);\n    gl.bufferData(gl.ARRAY_BUFFER, this._dataVert, gl.DYNAMIC_DRAW);\n    this._buffVert = buffVert;\n    var buffElem = gl.createBuffer();\n\n    if (!buffElem) {\n      throw this.fatal('Not enough memory to create an array buffer!');\n    }\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffElem);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, createElements(BLOCK), gl.DYNAMIC_DRAW);\n    this._buffElem = buffElem;\n    this.manageDeferedSpritesUpdates();\n  };\n\n  SpritesPainter.prototype.destroy = function () {\n    var _a = this,\n        scene = _a.scene,\n        _buffVert = _a._buffVert,\n        _buffElem = _a._buffElem;\n\n    if (!scene || !_buffVert || !_buffElem) {\n      return;\n    }\n\n    var gl = scene.gl;\n    gl.deleteBuffer(_buffVert);\n    gl.deleteBuffer(_buffElem);\n  };\n\n  SpritesPainter.prototype.manageDeferedSpritesUpdates = function () {\n    var e_1, _a;\n\n    if (this._deferedSpritesUpdate.size === 0) {\n      // Nothing to do.\n      return;\n    }\n\n    try {\n      for (var _b = __values(this._deferedSpritesUpdate.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var item = _c.value;\n\n        var _d = __read(item, 2),\n            sprite = _d[0],\n            data = _d[1];\n\n        this._update(sprite, data);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  return SpritesPainter;\n}(Painter);\n\nexport default SpritesPainter;\nvar CORNER_B = 1;\nvar CORNER_C = 2;\nvar CORNER_D = 3;\n/**\n * A--B\n * |  |\n * D--C\n */\n\nfunction createElements(capacity) {\n  var dataElem = new Uint16Array(NB_ELEMS * capacity);\n  var i = 0;\n  var a = 0;\n\n  for (var k = 0; k < capacity; k++) {\n    var b = a + CORNER_B;\n    var c = a + CORNER_C;\n    var d = a + CORNER_D; // tslint:disable:no-magic-numbers\n\n    dataElem[i + 0] = a;\n    dataElem[i + 1] = d;\n    dataElem[i + 2] = b;\n    dataElem[i + 3] = b;\n    dataElem[i + 4] = d;\n    dataElem[i + 5] = c; // tslint:enable:no-magic-numbers\n\n    a += NB_CORNERS;\n    i += NB_ELEMS;\n  }\n\n  return dataElem;\n}","export default \"uniform float uniWidth;\\nuniform float uniHeight;\\n\\nattribute vec3 attXYZ;\\nattribute vec2 attUV;\\n\\nvarying vec2 varUV;\\n\\n#include cameraUniforms\\n#include cameraFunction\\n\\nvoid main() {\\n  varUV = attUV;\\n  gl_Position = worldPointToScreen(attXYZ);\\n}\\n\"","export default \"precision mediump float;\\nuniform sampler2D uniTexture;\\nvarying vec2 varUV;\\n\\nvoid main() {\\n  vec4 color = texture2D( uniTexture, varUV );\\n  if (color.a < 1.0) discard;\\n  gl_FragColor = color;\\n}\\n\"","import { __assign, __extends } from \"tslib\";\nimport Painter from '../painter';\nimport Vert from './voronoi.vert';\nimport Frag from './voronoi.frag';\nvar NB_VERTICES_IN_SQUARE = 4;\n\nvar VoronoiPainter =\n/** @class */\nfunction (_super) {\n  __extends(VoronoiPainter, _super);\n  /**\n   * params: { atlas, align }\n   * - align: if undefined, the voronoi will be centered.\n   *          \"R\" means that the Right edge of the voronoi is always visible.\n   *          \"L\" means the same for Left.\n   *          \"T\" for Top.\n   *          \"B\" for \"Bottom\".\n   */\n\n\n  function VoronoiPainter(params) {\n    var _this = _super.call(this) || this;\n\n    _this.params = __assign({\n      seeds: randomArray(20),\n      colors: randomArray(20),\n      border: 0,\n      light: 0,\n      scaleX: 1,\n      scaleY: 1\n    }, params);\n\n    if (_this.params.seeds.length % 3 !== 0) {\n      throw Error(\"The length of \\\"seeds\\\" must be an integral multiple of 3!\");\n    }\n\n    if (_this.params.seeds.length !== _this.params.colors.length) {\n      throw Error(\"\\\"seeds\\\" and \\\"colors\\\" must have the same length!\");\n    }\n\n    _this.seeds = new Float32Array(_this.params.seeds);\n    _this.colors = new Float32Array(_this.params.colors);\n    return _this;\n  }\n\n  VoronoiPainter.prototype.render = function () {\n    var _a = this,\n        scene = _a.scene,\n        prg = _a.prg,\n        buff = _a.buff;\n\n    if (!scene || !prg || !buff) {\n      return;\n    }\n\n    var _b = this.params,\n        border = _b.border,\n        scaleX = _b.scaleX,\n        scaleY = _b.scaleY;\n    var thickness = border;\n    var gl = scene.gl;\n    gl.enable(gl.DEPTH_TEST);\n    prg.use();\n    prg.setUniform(\"uniSeeds\", this.seeds);\n    prg.setUniform(\"uniColors\", this.colors);\n    prg.setUniform(\"uniLight\", this.params.light);\n    prg.setUniform(\"uniThickness\", thickness);\n    prg.setUniform(\"uniScaleX\", scaleX);\n    prg.setUniform(\"uniScaleY\", scaleY);\n    prg.bindAttribs(buff, 'attXY');\n    gl.bindBuffer(gl.ARRAY_BUFFER, buff);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, NB_VERTICES_IN_SQUARE);\n  };\n  /*\n      private getSeeds(time: number) {\n          const { lastTime } = this;\n          let alpha = (time - lastTime) / DURATION\n          if (alpha > 3) {\n              this.lastTime = time\n              this.seeds0 = this.seeds1\n              this.seeds1 = randomArray()\n              alpha = 0\n          }\n          alpha = Math.min(alpha, 1)\n  \n          const mix = []\n          const { seeds0, seeds1 } = this\n          const beta = 1 - alpha\n          for (let i = 0; i < seeds1.length; i++) {\n              mix.push(beta * seeds0[i] + alpha * seeds1[i])\n          }\n          return new Float32Array(mix)\n      }\n  */\n\n\n  VoronoiPainter.prototype.destroy = function (scene) {\n    var gl = scene.gl;\n    var buff = this.buff;\n\n    if (!buff) {\n      return;\n    }\n\n    gl.deleteBuffer(buff);\n  };\n\n  VoronoiPainter.prototype.initialize = function (scene) {\n    this.prg = this.createProgram({\n      frag: Frag,\n      vert: Vert\n    }, {\n      count: \"const int COUNT = \" + this.params.seeds.length + \";\"\n    });\n    var gl = scene.gl;\n    var buff = gl.createBuffer();\n\n    if (!buff) {\n      throw this.fatal('Not enough memory to create an array buffer!');\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buff);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]), gl.STATIC_DRAW);\n    this.buff = buff;\n  };\n\n  return VoronoiPainter;\n}(Painter);\n\nexport default VoronoiPainter;\n\nfunction randomArray(count) {\n  var arr = [];\n\n  for (var i = 0; i < 3 * count; i++) {\n    arr.push(Math.random());\n  }\n\n  return arr;\n}","import BackgroundPainter from './background';\nimport ClearPainter from './clear';\nimport Painter from './painter';\nimport SpritesPainter from './sprites';\nimport VoronoiPainter from './voronoi';\nexport default {\n  Background: BackgroundPainter,\n  Clear: ClearPainter,\n  Painter: Painter,\n  Sprites: SpritesPainter,\n  Voronoi: VoronoiPainter\n};","export default \"precision mediump float;\\n\\n#include \\\"count\\\"\\n\\nconst vec3 WHITE = vec3(1,1,1);\\nconst vec3 BLACK = vec3(0,0,0);\\n\\nuniform float uniSeeds[COUNT];\\nuniform float uniColors[COUNT];\\nuniform float uniLight;\\nuniform float uniThickness;\\n\\n/**\\n * The coords of a and b must be in the range [0;1].\\n */\\nfloat distSquared(vec2 a, vec2 b) {\\n  float x = abs(a.x - b.x);\\n  if (x > .5) x = 1.0 - x;\\n  float y = abs(a.y - b.y);\\n  if (y > .5) y = 1.0 - y;\\n\\n  return x*x + y*y;\\n}\\n\\nvarying vec2 varUV;\\n\\nvoid main() {\\n  vec2 M = vec2(fract(varUV.x), fract(varUV.y));\\n\\n  float distA = distSquared(M, vec2(uniSeeds[0], uniSeeds[1])) * uniSeeds[2];\\n  vec3 seedA = vec3(uniSeeds[0], uniSeeds[1], uniSeeds[2]);\\n  vec3 colorA = vec3(uniColors[0], uniColors[1], uniColors[2]);\\n  float distB = distSquared(M, vec2(uniSeeds[3], uniSeeds[4])) * uniSeeds[5];\\n  vec3 seedB = vec3(uniSeeds[3], uniSeeds[4], uniSeeds[5]);\\n  vec3 colorB = vec3(uniColors[3], uniColors[4], uniColors[5]);\\n\\n  if (distB < distA) {\\n    float swaperDist = distA;\\n    distA = distB;\\n    distB = swaperDist;\\n    vec3 swaperSeed = seedA;\\n    seedA = seedB;\\n    seedB = swaperSeed;\\n    vec3 swaperColor = colorA;\\n    colorA = colorB;\\n    colorB = swaperColor;\\n  }\\n\\n  float dist;\\n  vec3 seed;\\n  vec3 color;\\n\\n  for (int i = 6; i < COUNT; i+=3) {\\n    seed = vec3(uniSeeds[i], uniSeeds[i+1], uniSeeds[i+2]);\\n    color = vec3(uniColors[i], uniColors[i+1], uniColors[i+2]);\\n    dist = distSquared(M, seed.xy) * seed.z;\\n    if (dist < distA) {\\n      distB = distA;\\n      seedB = seedA;\\n      colorB = colorA;\\n      distA = dist;\\n      seedA = seed;\\n      colorA = color;\\n    }\\n    else if (dist < distB) {\\n      distB = dist;\\n      seedB = seed;\\n      colorB = color;\\n    }\\n  }\\n\\n/*\\n  vec2 AM = M.xy - seedA.xy;\\n  vec2 AB = seedB.xy - seedA.xy;\\n  vec2 AB1 = normalize(AB);\\n  float semiLengthAB = length(AB) * 0.5;\\n  float distanceFromBorder = semiLengthAB - dot(AM, AB1);\\n*/\\n\\n  float dA = distA;\\n  float dB = distB;\\n  float distanceFromBorder = dB - dA;\\n  float alpha;\\n  vec3 color0;\\n  vec3 color1;\\n\\n  if (distanceFromBorder < uniThickness) {\\n      // Border.\\n      color0 = BLACK;\\n      color1 = colorA;\\n      alpha = smoothstep(0.0, uniThickness, distanceFromBorder);\\n  } else {\\n      // Cell.\\n      color0 = colorA;\\n      color1 = mix(colorA, WHITE, uniLight);\\n      alpha = (distanceFromBorder - uniThickness) / (dB - uniThickness);\\n  }\\n\\n  gl_FragColor = vec4(mix(color0, color1, alpha), 1);\\n}\\n\"","export default \"uniform float uniScaleX;\\nuniform float uniScaleY;\\n\\nattribute vec2 attXY;\\nvarying vec2 varUV;\\n\\nvoid main() {\\n  varUV = vec2(attXY.x * uniScaleX, attXY.y * uniScaleY);\\n  float x = (attXY.x * 2.0) - 1.0;\\n  float y = 1.0 - (attXY.y * 2.0);\\n  gl_Position = vec4(x, y, 0.0, 1.0);\\n}\\n\"","import { __awaiter, __generator } from \"tslib\";\n\nvar Atlas =\n/** @class */\nfunction () {\n  function Atlas(gl, _name) {\n    this.gl = gl;\n    this._name = _name;\n    this._ready = false;\n    this._width = 0;\n    this._height = 0;\n    var texture = gl.createTexture();\n\n    if (!texture) {\n      throw new Error('Unable to create a new texture!');\n    }\n\n    this.texture = texture;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  }\n\n  Object.defineProperty(Atlas.prototype, \"name\", {\n    get: function get() {\n      return this._name;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Atlas.prototype, \"width\", {\n    get: function get() {\n      return this._width;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Atlas.prototype, \"height\", {\n    get: function get() {\n      return this._height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Atlas.prototype, \"ready\", {\n    /**\n     * Return `true` as soon as an image has been loaded into the graphic card.\n     */\n    get: function get() {\n      return this._ready;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Remove the texture from the graphic card memory.\n   */\n\n  Atlas.prototype.destroy = function () {\n    this._ready = false;\n\n    var _a = this,\n        gl = _a.gl,\n        texture = _a.texture;\n\n    gl.deleteTexture(texture);\n  };\n\n  Atlas.prototype.activate = function (unit) {\n    if (unit === void 0) {\n      unit = 0;\n    }\n\n    var _a = this,\n        gl = _a.gl,\n        texture = _a.texture;\n\n    var UNITS = [gl.TEXTURE0, gl.TEXTURE1, gl.TEXTURE2, gl.TEXTURE3, gl.TEXTURE4, gl.TEXTURE5, gl.TEXTURE6, gl.TEXTURE7];\n    gl.activeTexture(UNITS[Math.abs(unit) % UNITS.length]);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n  };\n  /**\n   * If you use canvas and you want to repaint this canvas, the atlas won't change.\n   * To force it to change, you have to call refresh().\n   */\n\n\n  Atlas.prototype.refresh = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._params) return [2\n            /*return*/\n            ];\n            return [4\n            /*yield*/\n            , this.load(this._params)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * This function must not be called directly.\n   * It is used internally by painters.\n   */\n\n\n  Atlas.prototype.load = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this._ready = false;\n        this._params = params;\n\n        if (params.image) {\n          return [2\n          /*return*/\n          , this.loadImage(params.image)];\n        } else if (params.canvas) {\n          return [2\n          /*return*/\n          , this.loadCanvas(params.canvas)];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  Atlas.prototype.loadImage = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var that;\n      return __generator(this, function (_a) {\n        that = this;\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          var img = new Image();\n          that._ready = false;\n\n          img.onload = function () {\n            var gl = that.gl,\n                texture = that.texture;\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img);\n            that._ready = true;\n            that._width = img.width;\n            that._height = img.height;\n            resolve();\n          };\n\n          img.onerror = function () {\n            console.error(\"Unable to load image \\\"\" + name + \"\\\": \", url);\n            reject();\n          };\n\n          img.src = url;\n        })];\n      });\n    });\n  };\n\n  Atlas.prototype.loadCanvas = function (canvas) {\n    var _a = this,\n        gl = _a.gl,\n        texture = _a.texture;\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, canvas);\n    this._ready = true;\n    this._width = canvas.width;\n    this._height = canvas.height;\n  };\n\n  return Atlas;\n}();\n\nexport default Atlas;","var VIRTUAL_SCREEN_RESOLUTION = 1024;\nvar HALF = 0.5;\n\nvar Pointer =\n/** @class */\nfunction () {\n  /** @hidden */\n  function Pointer(canvas) {\n    var _this = this;\n\n    this._x = 0;\n    this._y = 0;\n    this._down = false; // If 0, pointer is up.\n\n    this._downTime = 0;\n    this._eventDown = false;\n    this._eventUp = false;\n\n    this.onMouseMove = function (evt) {\n      _this.computeCoords(evt.clientX, evt.clientY);\n    };\n\n    this.onTouchMove = function (te) {\n      var evt = te.touches[0];\n\n      _this.computeCoords(evt.clientX, evt.clientY);\n    };\n\n    this.onMouseDown = function (evt) {\n      _this.onDown(evt.clientX, evt.clientY);\n    };\n\n    this.onTouchStart = function (te) {\n      var evt = te.touches[0];\n\n      _this.onDown(evt.clientX, evt.clientY);\n    };\n\n    this.onMouseUp = function (evt) {\n      _this.onUp(evt.clientX, evt.clientY);\n    };\n\n    this.onTouchEnd = function (te) {\n      var evt = te.touches[0];\n\n      _this.onUp(evt.clientX, evt.clientY);\n    };\n\n    this.canvas = canvas;\n    window.addEventListener('mousemove', this.onMouseMove, true);\n    window.addEventListener('touchmove', this.onTouchMove, true);\n    window.addEventListener('mousedown', this.onMouseDown, true);\n    window.addEventListener('touchstart', this.onTouchStart, true);\n    window.addEventListener('mouseup', this.onMouseUp, true);\n    window.addEventListener('touchend', this.onTouchEnd, true);\n  }\n  /** @hidden */\n\n\n  Pointer.prototype.reset = function () {\n    this._eventDown = false;\n    this._eventUp = false;\n  };\n\n  Object.defineProperty(Pointer.prototype, \"x\", {\n    get: function get() {\n      return this._x;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pointer.prototype, \"y\", {\n    get: function get() {\n      return this._y;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pointer.prototype, \"down\", {\n    /** Test if the pointer is touching the screen. */\n    get: function get() {\n      return this._down;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pointer.prototype, \"eventUp\", {\n    /** `true` only if the pointer started touching the screen this very last frame. */\n    get: function get() {\n      return this._eventUp;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pointer.prototype, \"eventDown\", {\n    /** `true` only if the pointer stopped touching the screen this very last frame. */\n    get: function get() {\n      return this._eventDown;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Pointer.prototype.onDown = function (x, y) {\n    if (this._downTime !== 0) {\n      return;\n    }\n\n    this.computeCoords(x, y);\n    this._down = true;\n    this._eventDown = true;\n    this._downTime = Date.now();\n  };\n\n  Pointer.prototype.onUp = function (x, y) {\n    if (this._downTime === 0) {\n      return;\n    }\n\n    this.computeCoords(x, y);\n    this._down = false;\n    this._eventUp = true;\n    this._downTime = 0;\n  };\n\n  Pointer.prototype.computeCoords = function (pointerX, pointerY) {\n    var canvas = this.canvas;\n    var rect = canvas.getBoundingClientRect();\n    var x = pointerX - rect.left;\n    var y = pointerY - rect.top;\n    var w = rect.width;\n    var h = rect.height;\n\n    if (w > h) {\n      this._x = VIRTUAL_SCREEN_RESOLUTION * x / w;\n      this._y = VIRTUAL_SCREEN_RESOLUTION * (HALF * (1 - h / w) + y / w);\n    } else {\n      this._x = VIRTUAL_SCREEN_RESOLUTION * (HALF * (1 - w / h) + x / h);\n      this._y = VIRTUAL_SCREEN_RESOLUTION * y / h;\n    }\n  };\n\n  return Pointer;\n}();\n\nexport default Pointer;","/**\n * Resolution in CSS pixels. If omitted, the real resolution\n * of the device is taken. On smartphones, for instance,\n * the resolution is often greater than 1.\n *\n * Return `true` if the size has changed.\n */\nexport default (function (gl, _resolution) {\n  if (_resolution === void 0) {\n    _resolution = 0;\n  }\n\n  var resolution = _resolution <= 0 ? window.devicePixelRatio : _resolution;\n  var canvas = gl.canvas;\n\n  if (canvas instanceof HTMLCanvasElement) {\n    var displayWidth = Math.floor(canvas.clientWidth * resolution);\n    var displayHeight = Math.floor(canvas.clientHeight * resolution); // Check if the canvas is not the same size.\n\n    if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\n      // Make the canvas the same size\n      canvas.width = displayWidth;\n      canvas.height = displayHeight;\n      gl.viewport(0, 0, displayWidth, displayHeight);\n      return true;\n    }\n  }\n\n  return false;\n});","import { __values } from \"tslib\";\nimport Atlas from './atlas';\nimport Pointer from './pointer';\nimport Resize from './webgl/resize';\nvar ID = 1;\n\nvar Scene =\n/** @class */\nfunction () {\n  function Scene(canvas) {\n    var _this = this;\n\n    this.resolution = 1;\n    this.onAnimation = null;\n    this.activePainters = [];\n    this.isRendering = false;\n    this.lastRenderingTime = 0;\n\n    this.render = function (time) {\n      var e_1, _a;\n\n      if (_this.isRendering) {\n        window.requestAnimationFrame(_this.render);\n      } else {\n        return;\n      }\n\n      var _b = _this,\n          gl = _b.gl,\n          lastRenderingTime = _b.lastRenderingTime;\n      Resize(gl, _this.resolution);\n      _this.lastRenderingTime = time;\n      var delta = time - lastRenderingTime;\n      gl.clearDepth(-1);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      gl.depthFunc(gl.GEQUAL);\n\n      try {\n        try {\n          for (var _c = __values(_this.activePainters), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var painter = _d.value;\n            painter.render(time, delta);\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n\n        var onAnimation = _this.onAnimation;\n\n        if (typeof onAnimation === 'function') {\n          onAnimation(time);\n\n          _this.pointer.reset();\n        }\n      } catch (ex) {\n        console.error(ex);\n\n        _this.stop();\n\n        console.error('###############################');\n        console.error('# Rendering has been stopped! #');\n        console.error('###############################');\n      }\n    };\n\n    this._pointer = new Pointer(canvas);\n    var gl = canvas.getContext('webgl', {// Specify WebGL options.\n    });\n\n    if (!gl) {\n      throw new Error('Unable to create a WegGL context!');\n    }\n\n    this._gl = gl;\n    this.atlases = new Map();\n  }\n\n  Object.defineProperty(Scene.prototype, \"gl\", {\n    get: function get() {\n      return this._gl;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Scene.prototype, \"pointer\", {\n    /**\n     * Retreive information about pointer (mouse, pen, finger, ...) state.\n     */\n    get: function get() {\n      return this._pointer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Scene.prototype, \"width\", {\n    /**\n     * Visible width. Between 0 and 1024.\n     */\n    get: function get() {\n      return this.gl.drawingBufferWidth;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Scene.prototype, \"height\", {\n    /**\n     * Visible height. Between 0 and 1024.\n     */\n    get: function get() {\n      return this.gl.drawingBufferHeight;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Define which painter to use and in what order.\n   * For better performance, prefer putting background painters at the end of the list.\n   */\n\n  Scene.prototype.use = function (painters) {\n    var e_2, _a;\n\n    try {\n      for (var painters_1 = __values(painters), painters_1_1 = painters_1.next(); !painters_1_1.done; painters_1_1 = painters_1.next()) {\n        var painter = painters_1_1.value;\n        painter.scene = this;\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (painters_1_1 && !painters_1_1.done && (_a = painters_1.return)) _a.call(painters_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    this.activePainters = painters.slice();\n  };\n\n  Scene.prototype.getAtlas = function (name) {\n    var atlases = this.atlases;\n    return atlases.get(name) || null;\n  };\n  /**\n   * Create an atlas that can be used immediatly even if the needed assets are not yet loaded.\n   * @param  params\n   * @param  onLoad You can provide a callback function that will be called when the assets\n   * are loaded.\n   */\n\n\n  Scene.prototype.createAtlas = function (params, onLoad) {\n    var name = params.name;\n    var sanitizedName = name || this.getNewName();\n    var atlas = new Atlas(this.gl, sanitizedName);\n    this.atlases.set(sanitizedName, atlas); // tslint:disable:no-floating-promises\n\n    atlas.load(params).then(function () {\n      if (typeof onLoad === 'function') {\n        onLoad(params);\n      }\n    });\n    return atlas;\n  };\n  /**\n   * Create an atlas that can be used immediatly even if the needed assets are not yet loaded.\n   * @param  params\n   * @param  onLoad You can provide a callback function that will be called when the assets\n   * are loaded.\n   */\n\n\n  Scene.prototype.createAtlasAsync = function (params) {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      var name = params.name;\n\n      var sanitizedName = name || _this.getNewName();\n\n      var atlas = new Atlas(_this.gl, sanitizedName);\n\n      _this.atlases.set(sanitizedName, atlas); // tslint:disable:no-floating-promises\n\n\n      atlas.load(params).then(function () {\n        return resolve(atlas);\n      });\n    });\n  };\n\n  Scene.prototype.createAtlasesAsync = function (params) {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      var e_3, _a;\n\n      var atlasNames = Object.keys(params);\n      var promises = [];\n\n      try {\n        for (var atlasNames_1 = __values(atlasNames), atlasNames_1_1 = atlasNames_1.next(); !atlasNames_1_1.done; atlasNames_1_1 = atlasNames_1.next()) {\n          var atlasName = atlasNames_1_1.value;\n          var atlasParam = params[atlasName];\n          promises.push(_this.createAtlasAsync(atlasParam));\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (atlasNames_1_1 && !atlasNames_1_1.done && (_a = atlasNames_1.return)) _a.call(atlasNames_1);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n\n      Promise.all(promises).then(function (atlases) {\n        var result = {};\n\n        for (var i = 0; i < atlases.length; i++) {\n          var name_1 = atlasNames[i];\n          var atlas = atlases[i];\n          result[name_1] = atlas;\n        }\n\n        resolve(result);\n      });\n    });\n  };\n\n  Scene.prototype.destroyAtlas = function (name) {\n    var atlases = this.atlases;\n    var atlas = atlases.get(name);\n\n    if (!atlas) {\n      return false;\n    }\n\n    atlases.delete(name);\n    atlas.destroy();\n    return true;\n  };\n  /**\n   * Start rendering.\n   * When a frame is rendered, the function `onAnimation( time: number )` is called.\n   */\n\n\n  Scene.prototype.start = function () {\n    if (this.isRendering) {\n      return;\n    }\n\n    this.isRendering = true;\n    window.requestAnimationFrame(this.render);\n  };\n  /**\n   * Stop rendering.\n   */\n\n\n  Scene.prototype.stop = function () {\n    this.isRendering = false;\n  };\n\n  Scene.prototype.getNewName = function () {\n    while (true) {\n      var name_2 = \"atlas-\" + ID++;\n\n      if (!this.atlases.has(name_2)) {\n        return name_2;\n      }\n    }\n  };\n\n  return Scene;\n}();\n\nexport default Scene;","import { __extends } from \"tslib\";\nimport Calc from './calc';\nimport Camera from './camera';\nimport Painter from './painter';\nimport Scene from './scene';\n\nvar IScene =\n/** @class */\nfunction (_super) {\n  __extends(IScene, _super);\n\n  function IScene() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return IScene;\n}(Scene);\n\nexport { IScene };\nexport default {\n  Calc: Calc,\n  Camera: Camera,\n  Painter: Painter,\n  Scene: Scene\n};"],"sourceRoot":""}